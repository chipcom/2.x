#include 'common.ch'
#include 'inkey.ch'
#include 'function.ch'
#include 'edit_spr.ch'
#include 'chip_mo.ch'

#define BASE_ISHOD_RZD 500  // ВРЕМЕННО

// 11.05.24 Итоги за период времени по диспансеризации репродуктивного здоровья МИАЦ
Function inf_drz()

  Local arr_m, buf := save_maxrow()
  Local name_file := 'Диспансеризация репродуктивного здоровья'
  local arr, i
  Local name_file_full := name_file + '.xlsx'
  local lCity := .f., lPatologiya := .f.
  local beginPeriod

  If ( arr_m := year_month( T_ROW, T_COL - 5, , 1 ) ) != NIL
    // arr[1, ...]-мужчины, arr[2, ...]-мужчины село, arr[3, ...]-женщины, arr[4, ...]-женщины село
    arr := array( 4, 10 )
    afillall( arr, 0 )
    beginPeriod := BoY( arr_m[ 6 ] )  // начало периода, расчет идет нарастающим способом

    private arr_otklon

    r_use( dir_server + 'kartote_', , 'KART_' )
    r_use( dir_server + 'kartotek', , 'KART' )
    Set Relation To RecNo() into KART_

    r_use( dir_server + 'human_', , 'HUMAN_' )
    r_use( dir_server + 'human', dir_server + 'humand', 'HUMAN' )
    Set Relation To RecNo() into HUMAN_
    dbSeek( DToS( beginPeriod ), .t. )
    Do While human->k_data <= arr_m[ 6 ] .and. !Eof()
      lPatologiya := .f.
      arr_otklon := {}
//      if between( human->ishod, BASE_ISHOD_RZD + 1, BASE_ISHOD_RZD + 2 )
      if human->ishod == ( BASE_ISHOD_RZD + 1 ) // берем только первый этап (пока)
        kart->( dbGoto( human->kod_k ) )
        lCity := f_is_selo( kart_->gorod_selo, kart_->okatog )
        if human->pol == 'М'
          if human_->RSLT_NEW == 375
            arr[ 1, 1 ]++
            if ! lCity
              arr[ 2, 1 ]++
            endif
            elseif human_->RSLT_NEW == 376
            arr[ 1, 2 ]++
            if ! lCity
              arr[ 2, 2 ]++
            endif
          elseif human_->RSLT_NEW == 377
            arr[ 1, 3 ]++
            if ! lCity
              arr[ 2, 3 ]++
            endif
//          elseif human_->RSLT_NEW == 352 .or. human_->RSLT_NEW == 378 .or. human_->RSLT_NEW == 379
          elseif human_->RSLT_NEW == 378 .or. human_->RSLT_NEW == 379
            arr[ 1, 4 ]++
            if ! lCity
              arr[ 2, 4 ]++
            endif
//            if human_->RSLT_NEW == 352
//              arr[ 1, 1 ]++
//              if ! lCity
//                arr[ 2, 1 ]++
//              endif
            // elseif human_->RSLT_NEW == 378
            if human_->RSLT_NEW == 378
              arr[ 1, 2 ]++
              if ! lCity
                arr[ 2, 2 ]++
              endif
            elseif human_->RSLT_NEW == 379
              arr[ 1, 3 ]++
              if ! lCity
                arr[ 2, 3 ]++
              endif
            endif
          endif
        else  // женщины
          read_arr_drz( human->kod, .t. )      
          if human_->RSLT_NEW == 375
            arr[ 3, 1 ]++
            if ! lCity
              arr[ 4, 1 ]++
            endif
          elseif human_->RSLT_NEW == 376
            arr[ 3, 2 ]++
            if ! lCity
              arr[ 4, 2 ]++
            endif
          elseif human_->RSLT_NEW == 377
            arr[ 3, 3 ]++
            if ! lCity
              arr[ 4, 3 ]++
            endif
//          elseif human_->RSLT_NEW == 352 .or. human_->RSLT_NEW == 378 .or. human_->RSLT_NEW == 379
          elseif human_->RSLT_NEW == 378 .or. human_->RSLT_NEW == 379
            arr[ 3, 4 ]++
            if ! lCity
              arr[ 4, 4 ]++
            endif
//            if human_->RSLT_NEW == 352
//              arr[ 3, 1 ]++
//              if ! lCity
//                arr[ 4, 1 ]++
//              endif
            // elseif human_->RSLT_NEW == 378
            if human_->RSLT_NEW == 378
              arr[ 3, 2 ]++
              if ! lCity
                arr[ 4, 2 ]++
              endif
            elseif human_->RSLT_NEW == 379
              arr[ 3, 3 ]++
              if ! lCity
                arr[ 4, 3 ]++
              endif
            endif
          endif
          if len( arr_otklon ) > 0
            for i := 1 to len( arr_otklon )
              if arr_otklon[ i ] == 'A01.20.006' .or. arr_otklon[ i ] == 'A02.20.001'
                if ! lPatologiya
                  lPatologiya := .t.
                  arr[ 3, 5 ]++
                  if ! lCity
                    arr[ 4, 5 ]++
                  endif
                endif
              endif
              if arr_otklon[ i ] == 'A12.20.001'
                arr[ 3, 6 ]++
                if ! lCity
                  arr[ 4, 6 ]++
                endif
              endif
              if arr_otklon[ i ] == 'A08.20.017'
                arr[ 3, 7 ]++
                if ! lCity
                  arr[ 4, 7 ]++
                endif
              endif
              if arr_otklon[ i ] == 'A26.20.034.001'
                arr[ 3, 8 ]++
                if ! lCity
                  arr[ 4, 8 ]++
                endif
              endif
            next
          endif
        endif
      endif
      Select HUMAN
      Skip
    Enddo
    dbCloseAll()
  
    inf_drz_excel( hb_OEMToANSI( name_file_full ), arr_m, arr )
    work_with_Excel_file( name_file_full )
  endif
  return nil

// 10.04.24 подмена полей в рабочем массиве arr_osm1 объявленным PRIVATE
function change_field_arr_osm1( source, dest )

  // source - индекс массива откуда брать данные
  // dest - индекс куда помещать данные

  // структуры записи массива arr_osm1[ i ]
  // 1 - код врача
  // 2 - специальность врача   
  // 3 - код ассистента
  // 4 - профиль услуги
  // 5 - шифр услуги
  // 6 - код диагноза
  // 7 - код услуги по нашему справочнику услуг
  // 8 - цена услуги
  // 9 - дата услуги
  // 10- код выполнения/не назначено, отказа не может быть
  // 11- 
  // 12 - признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
  // 13 - соответствующая услуга ФФОМС услуге ТФОМС
  // 14 - специальность врача по справочнику V021
  arr_osm1[ dest, 1 ] := arr_osm1[ source, 1 ]
  arr_osm1[ dest, 2 ] := arr_osm1[ source, 2 ]
  arr_osm1[ dest, 3 ] := arr_osm1[ source, 3 ]
  arr_osm1[ dest, 4 ] := arr_osm1[ source, 4 ]
  arr_osm1[ dest, 6 ] := arr_osm1[ source, 6 ]
  arr_osm1[ dest, 9 ] := arr_osm1[ source, 9 ]
  arr_osm1[ dest, 10 ] := arr_osm1[ source, 10 ]
  arr_osm1[ dest, 11 ] := arr_osm1[ source, 11 ]
  arr_osm1[ dest, 14 ] := arr_osm1[ source, 14 ]
  return nil

// 25.04.24 возврат массива результатов исследования
function drz_result_drz( variant )

  local arr := arr_mm_otkaz()
  asize( arr, 2 )

  if variant == 2
    aadd( arr, { 'НЕ НАЗНАЧЕНО', 4 } )
  elseif variant == 3
    aadd( arr, { 'НЕВОЗМОЖНО', 2 } )
  Endif
  return aclone( arr )

// 25.04.24 возврат массива результатов исследования
function arr_mm_result_drz( etap )

  local arr := arr_mm_otkaz()
  asize( arr, 2 )
  if etap == 2
    aadd( arr, { 'НЕ НАЗНАЧЕНО', 4 })
  Endif
  return arr

// 31.03.24 вернуть "правильный" профиль для диспансеризации/профилактики
Function ret_profil_dispans_drz( lprofil, lprvs )

  If lprofil == 34 // если профиль по "клинической лабораторной диагностике"
    If ret_old_prvs( lprvs ) == 2013 // и спец-ть "Лабораторное дело"
      lprofil := 37 // сменим на профиль по "лабораторному делу"
    Elseif ret_old_prvs( lprvs ) == 2011 // или "Лабораторная диагностика"
      lprofil := 38 // сменим на профиль по "лабораторной диагностике"
    Endif
  Endif

  Return lprofil

// 10.05.24
Function ret_ndisp_drz( lkod_h, lkod_k )

  Local fl := .t., msg

  msg := ' '

  ar := ret_etap_drz( lkod_h, lkod_k )
  If ( Len( ar[ 1 ] ) == 0 ) .and. ( lkod_h == 0 )
    metap := 1
  Elseif  ( Len( ar[ 1 ] ) == 1 ) .and. ( lkod_h == 0 )
    If ! eq_any( ar[ 1, 1, 3 ], 378, 379 )
      msg := 'В ' + lstr( Year( mn_data ) ) + ' году проведен I этап диспансеризации репродуктивного здоровья без направления на II этап!'
      hb_Alert( msg )
      fl := .f.
    Endif
    metap := 2
  Endif

  mndisp := inieditspr( A__MENUVERT, mm_ndisp, metap )

  Return fl

// 31.03.24
Function ret_etap_drz( lkod_h, lkod_k )

  Local ae := { {}, {} }, fl, i, k, d1 := Year( mn_data )

  r_use( dir_server + 'human_', , 'HUMAN_' )
  r_use( dir_server + 'human', dir_server + 'humankk', 'HUMAN' )
  Set Relation To RecNo() into HUMAN_
  find ( Str( lkod_k, 7 ) )
  Do While human->kod_k == lkod_k .and. !Eof()
    fl := ( lkod_h != human->( RecNo() ) )
    If fl .and. human->schet > 0 .and. human_->oplata == 9
      fl := .f. // лист учёта снят по акту и выставлен повторно
    Endif
    If fl .and. Between( human->ishod, BASE_ISHOD_RZD + 1, BASE_ISHOD_RZD + 2 ) // ???
      i := human->ishod - BASE_ISHOD_RZD  //400
      If Year( human->n_data ) == d1 // текущий год
        AAdd( ae[ 1 ], { i, human->k_data, human_->RSLT_NEW } )
      Endif
    Endif
    Skip
  Enddo
  Close databases

  Return ae

// 31.03.24 получить индекс услуги на этапе диспансеризации репродуктивного здоровья
Function index_usluga_etap_drz( uslugi_etapa, lshifr, pos )

  // lshifr - шифр услуги
  Local index := 0
  Local i := 0
  local usl := uslugi_etapa

  default pos to 2
  For i := 1 To Len( usl )
    If AllTrim( usl[ i, pos ] ) == AllTrim( lshifr )
      index := i
      Exit
    Endif
  Next

  Return Index

// 28.03.24
Function valid_date_uslugi_drz( get, metap, beginDate, endDate, lenArr, i )

  If CToD( get:buffer ) > endDate
    get:varput( get:original )
    func_error( 4, 'Дата проведения исследования больше даты окончания диспансеризации' )
    Return .f.
  Endif

  If CToD( get:buffer ) < beginDate
    get:varput( get:original )
    func_error( 4, 'Дата проведения исследования меньше даты начала диспансеризации' )
    Return .f.
  Endif

  If ( metap == 1 .and. Upper( get:name ) == 'MDATE8' ) .or. ( metap == 2 .and. Upper( get:name ) == 'MDATE4' ) // дата приема
    If CToD( get:buffer ) != endDate
      get:varput( get:original )
      func_error( 4, 'Дата проведения осмотра врача не равна дате окончания диспансеризации репрод. здоровья' )
      Return .f.
    Endif
  Endif

  Return .t.

// 28.03.24
Function f_valid_begdata_drz( get, loc_kod )

  Local i

  If CToD( get:buffer ) < 0d20240101
    get:varput( get:original )
    func_error( 4, 'Диспансеризация репродуктивного здоровья началась с 01 января 2024 года' )
    Keyboard Chr( K_UP )
    Return .f.
  Endif

//  If loc_kod == 0
//    For i := 1 To Len( uslugietap_drz( metap ) ) - iif( metap == 1, 2, 1 )
//      // на 1-этапе одна услуга не отображается в списке (70.9.1 или 70.9.2 или 70.9.3)
//      mvar := 'MDATE' + lstr( i )
//      &mvar := CToD( get:buffer )
//      update_get( mvar )
//    Next
//  Endif

  Return .t. 

// 31.03.24
function is_usluga_vrach_priem( i, arr_uslugi, arr_usl_priem )

  local fl := .f.
  Local ar := arr_uslugi[ i ], cSearch

  If ValType( ar[ 2 ] ) == 'C'
    cSearch := alltrim( ar[ 2 ])
    fl := ( ascan( arr_usl_priem, cSearch ) > 0 )
  endif

  return fl

// 08.04.24 рабочая ли услуга по диспансеризации репродуктивного здоровья в зависимости от этапа
Function f_is_usl_sluch_drz( uslugi_etapa, i, allUsl, /*@*/_diag, /*@*/_otkaz )
 
  Local fl := .f.

  local ar := uslugi_etapa[ i ]

  // убираем комплексные посещения
//  If ValType( ar[ 2 ] ) == 'C' ;
//    .and. ( alltrim( ar[ 2 ] ) == '70.9.1' .or. alltrim( ar[ 2 ] ) == '70.9.2' .or. alltrim( ar[ 2 ] ) == '70.9.3' ) .and. ( ! allUsl )
//    Return fl
//  Endif

  fl := .t.
  _diag := ( ar[ 4 ] == 1 )
  _otkaz := 0
//  If ValType( ar[ 2 ] ) == 'C'
//    AAdd( ars, ar[ 2 ] )
//  Else
//    ars := AClone( ar[ 2 ] )
//  Endif
  If ar[ 5 ] == 1
    _otkaz := 1 // можно ввести отказ
  Endif

  Return fl

// 08.04.24
function uslugi_to_view( arr_uslugi )

  local arr := {}
  local i

  for i := 1 to len( arr_uslugi )
    if arr_uslugi[ i, 14 ] == 1
      aadd( arr, aclone( arr_uslugi[ i ] ) )
    endif
  next
  return arr

// 07.04.24 получить услуги этапа диспансеризации репродуктивного здоровья
Function uslugietap_drz( _etap, age, gender )

  // _etap - этап диспансеризации
  // age - возраст
  // gender - пол
  Local retArray := {}
  Local i, j, fl, tmpArr := {}
  Local usl := ret_array_drz()

  default age to 18
  default gender to 0

  For i := 1 To Len( usl )
    fl := .f.
    If ValType( usl[ i, 3 ] ) == 'N'
      fl := ( usl[ i, 3 ] == _etap )
    Else
      fl := AScan( usl[ i, 3 ], _etap ) > 0
    Endif
    If fl
      if gender == 'М'
        if ValType( usl[ i, 6 ] ) == 'N'
          fl := ( usl[ i, 6 ] == 1 )
        else
          fl := AScan( usl[ i, 6 ], age ) > 0
        Endif
      else
        if ValType( usl[ i, 7 ] ) == 'N'
          fl := ( usl[ i, 7 ] == 1 )
        else
          fl := AScan( usl[ i, 7 ], age ) > 0
        Endif
      endif
    endif

    if fl
      AAdd( retArray, usl[ i ] )
    Endif
  Next
  // поместим все врачебные приемы в конец массива
  for i := 1 to len( retArray )
    if retArray[ i, 4 ] == 0  // это не диагностическая услуга
      AAdd( tmpArr, AClone( retArray[ i ] ) )
    endif
  next
  for i := 1 to len( tmpArr )
    if ( j := ascan( retArray, { | x | x[ 2 ] == alltrim( tmpArr[ i, 2 ] ) } ) ) > 0
      hb_ADel( retArray, j, .t. )
      AAdd( retArray, tmpArr[ i ] )
    endif
  next
  Return retArray

// 14.05.24 скорректировать массивы по углубленной диспансеризации COVID
Function ret_array_drz()

  Local arr_drz_usl

  // 1- наименование меню
  // 2- шифр услуги
  // 3- этап или список допустимых этапов, пример: {1,2}
  // 4 - диагностическая услуга (0-нет, 1-да)
  // 5- возможен отказ пациента (0 - нет, 1 - да)
  // 6 - возраст для мужчин (число лет), если 1 - все возраста, если список {} то конкретные значения возраста
  // 7 - возраст для женщин (число лет), если 1 - все возраста, если список {} то конкретные значения возраста

  // 10- V002 - Классификатор прифилей оказанной медицинской помощи
  // 11- V004 - Классификатор медицинских специальностей
  // 12 - признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
  // 13 - соответствующая услуга ФФОМС услуге ТФОМС
  // 14 - показывать в меню - 1, нет - 0
  // 15 - массив для меню результатов
  arr_drz_usl := { ; // Услуги на экран для ввода
    { ;
      'Приём врача-акушера-гинеколога первичный', ; // наименование меню
      'B01.001.001', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      0, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      0, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Визуальный осмотр наружных половых органов', ; // наименование меню
      'A01.20.002', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Осмотр шейки матки в зеркалах', ; // наименование меню
      'A02.20.001', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Биманульное влагалищное исследование', ; // наименование меню
      'A02.20.003', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Визуальное исследование молочных желез', ; // наименование меню
      'A02.20.005', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Пальпация молочных желез', ; // наименование меню
      'A01.20.006', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Микроскопическое иссл-ние влагалищных мазков', ; // наименование меню
      'A12.20.001', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Определение концентрации водородных ионов (pH)', ; // наименование меню
      'A09.20.011', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Цит. ис-ние микропрепарата шейки матки', ; // наименование меню
      'A08.20.017', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 21, 24, 27, 30, 35, 40, 45 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 3 ) ; // меню результатов исследования
    }, ;
    { ;
      'Цит. ис-ние микропрепарата цервикального канала', ; // наименование меню
      'A08.20.017.001', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 21, 24, 27, 30, 35, 40, 45 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      0, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 3 ) ; // меню результатов исследования
    }, ;
    { ;
      'Жидк. цит. ис-ние микропрепарата шейки матки', ; // наименование меню
      'A08.20.017.002', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 21, 24, 27, 30, 35, 40, 45 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 3 ) ; // меню результатов исследования
    }, ;
    { ;
      'Опред-ние инфекций, передаваемые половым путем', ; // наименование меню
      'A26.20.034.001', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Женщины I этап 21,24,27 лет', ; // наименование меню
      '70.9.1', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      0, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 21, 24, 27 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Женщины I этап 30,35,40,45 лет', ; // наименование меню
      '70.9.2', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      0, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 30, 35, 40, 45 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Женщины I этап 18,19,20,22,23,25,26,28,29 лет', ; // наименование меню
      '70.9.3', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      0, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 18, 19, 20, 22, 23, 25, 26, 28, 29 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Женщины I этап 31,32,33,34,36,37,38,39,41,42,43,44,46,47,48,49 лет', ; // наименование меню
      '70.9.4', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      0, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 31, 32, 33, 34, 36, 37, 38, 39, ;
        41, 42, 43, 44, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Приём врача-акушера-гинеколога повторный', ; // наименование меню
      '70.9.50', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      0, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'УЗИ молочных желез', ; // наименование меню
      '70.9.51', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 2 ) ; // меню результатов исследования
    }, ;
    { ;
      'УЗИ малого таза трансабдоминальное', ; // наименование меню
      'A04.20.001', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 2 ) ; // меню результатов исследования
    }, ;
    { ;
      'УЗИ малого таза трансвагинальное', ; // наименование меню
      'A04.20.001.001', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 2 ) ; // меню результатов исследования
    }, ;
    { ;
      'Опред-ние инфекций, передаваемые половым путем', ; // наименование меню
      '70.9.53', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 2 ) ; // меню результатов исследования
    }, ;
    { ;
      'Опред-ние ДНК вирусов папиломы человека', ; // наименование меню
      '70.90.54', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 30, 35, 40, 45 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 2 ) ; // меню результатов исследования
    }, ;
    { ;
      'Опред-ние ДНК вирусов папиломы человека', ; // наименование меню
      'A26.20.009.002', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 30, 35, 40, 45 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      0, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 2 ) ; // меню результатов исследования
    }, ;
    { ;
      'УЗИ органов малого таза', ; // наименование меню
      '70.9.52', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      0, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 2 ) ; // меню результатов исследования
    }, ;
    { ;
      'Приём врача-уролога первичный', ; // наименование меню
      'B01.053.001', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      0, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      0, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Приём врача-хирурга первичный', ; // наименование меню
      'B01.057.001', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      0, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 112, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      0, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Мужчины I этап 18-49 лет', ; // наименование меню
      '70.9.20', ; // шифр услуги
      1, ;  // этап или список допустимых этапов, пример: {1, 2}
      0, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 108, 112, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Приём врача-уролога (хирурга) повторный', ; // наименование меню
      '70.9.80', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      0, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Приём врача-уролога повторный', ; // наименование меню
      'B01.053.002', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      0, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      0, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Приём врача-хирурга повторный', ; // наименование меню
      'B01.057.002', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      0, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 112, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      0, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 1 ) ; // меню результатов исследования
    }, ;
    { ;
      'Спермограмма', ; // наименование меню
      '70.9.81', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 2 ) ; // меню результатов исследования
    }, ;
    { ;
      'Спермограмма', ; // наименование меню
      'B03.053.002', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      0, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 2 ) ; // меню результатов исследования
    }, ;
    { ;
      'УЗИ предстательной железы, мошонки', ; // наименование меню
      '70.9.82', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 2 ) ; // меню результатов исследования
    }, ;
    { ;
      'УЗИ органов мошонки', ; // наименование меню
      'A04.28.003', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      0, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 2 ) ; // меню результатов исследования
    }, ;
    { ;
      'УЗИ предстательной железы', ; // наименование меню
      'A04.21.001', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      0, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 2 ) ; // меню результатов исследования
    }, ;
    { ;
      'Опред-ние ДНК возбудителей ИППП из урерты методом ПЦР', ; // наименование меню
      '70.9.83', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 2 ) ; // меню результатов исследования
    }, ;
    { ;
      'Опред-ние ДНК условно-патогенных генитальных микоплазм из урерты методом ПЦР', ; // наименование меню
      '70.9.84', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      1, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 2 ) ; // меню результатов исследования
    }, ;
    { ;
      'Опред-ние инфекций, передаваемые половым путем', ; // наименование меню
      'A26.21.036.001', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      0, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 2 ) ; // меню результатов исследования
    }, ;
    { ;
      'Опред-ние ДНК условно-патогенных генитальных микоплазм из урерты методом ПЦР', ; // наименование меню
      'A26.21.035.001', ; // шифр услуги
      2, ;  // этап или список допустимых этапов, пример: {1, 2}
      1, ;  // диагностическая услуга (0-нет, 1-да)
      0, ;  // возможен отказ пациента (0 - да, 1 - нет)
      { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
        30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
        40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
      1, ;  // ?
      1, ;  // ?
      { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
      { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
      1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
      '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
      0, ; // показывать в меню - 1, нет - 0
      drz_result_drz( 2 ) ; // меню результатов исследования
    } ;
  }
  Return arr_drz_usl

// 07.04.24
Function save_arr_drz( lkod, mk_data )

  Local arr := {}, i, sk, ta
  Local aliasIsUse := aliasisalreadyuse( 'TPERS' )
  Local oldSelect

  If ! aliasIsUse
    oldSelect := Select()
    r_use( dir_server + 'mo_pers', dir_server + 'mo_pers', 'TPERS' )
  Endif

  If Type( 'mfio' ) == 'C'
    AAdd( arr, { 'mfio', AllTrim( mfio ) } )
  Endif
  If Type( 'mdate_r' ) == 'D'
    AAdd( arr, { 'mdate_r', mdate_r } )
  Endif
  For i := 1 To 5
    sk := lstr( i )
    pole_diag := 'mdiag' + sk
    pole_1pervich := 'm1pervich' + sk
    pole_1stadia := 'm1stadia' + sk
    pole_1dispans := 'm1dispans' + sk
    pole_1dop := 'm1dop' + sk
    pole_1usl := 'm1usl' + sk
    pole_1san := 'm1san' + sk
    pole_d_diag := 'mddiag' + sk
    pole_d_dispans := 'mddispans' + sk
    pole_dn_dispans := 'mdndispans' + sk
    If ! Empty( &pole_diag )
      ta := { &pole_diag, ;
        &pole_1pervich, ;
        &pole_1stadia, ;
        &pole_1dispans }
      If Type( pole_1dop ) == 'N' .and. Type( pole_1usl ) == 'N' .and. Type( pole_1san ) == 'N'
        AAdd( ta, &pole_1dop )
        AAdd( ta, &pole_1usl )
        AAdd( ta, &pole_1san )
      Else
        AAdd( ta, 0 )
        AAdd( ta, 0 )
        AAdd( ta, 0 )
      Endif
      If Type( pole_d_diag ) == 'D' .and. Type( pole_d_dispans ) == 'D'
        AAdd( ta, &pole_d_diag )
        AAdd( ta, &pole_d_dispans )
      Else
        AAdd( ta, CToD( '' ) )
        AAdd( ta, CToD( '' ) )
      Endif
      If Type( pole_dn_dispans ) == 'D'
        AAdd( ta, &pole_dn_dispans )
      Else
        AAdd( ta, CToD( '' ) )
      Endif
      AAdd( arr, { lstr( 10 + i ), ta } )
    Endif
  Next i
  // отказы пациента
//  If ! Empty( arr_usl_otkaz )
//    AAdd( arr, { '19', arr_usl_otkaz } ) // массив
//  Endif
  AAdd( arr, { '30', m1GRUPPA } )    // 'N1',группа здоровья после дисп-ии
  If Type( 'm1prof_ko' ) == 'N'
    AAdd( arr, { '31', m1prof_ko } )    // 'N1',вид проф.консультирования
  Endif
  // if type('m1ot_nasl1') == 'N'
  AAdd( arr, { '40', arr_otklon } ) // массив
  AAdd( arr, { '41', arr_ne_nazn } ) // массив
  AAdd( arr, { '45', m1dispans } )
  AAdd( arr, { '46', m1nazn_l } )
  If mk_data >= 0d20210801
    If mtab_v_dopo_na != 0
      If TPERS->( dbSeek( Str( mtab_v_dopo_na, 5 ) ) )
        AAdd( arr, { '47', { m1dopo_na, TPERS->kod } } )
      Else
        AAdd( arr, { '47', { m1dopo_na, 0 } } )
      Endif
    Else
      AAdd( arr, { '47', { m1dopo_na, 0 } } )
    Endif
  Else
    AAdd( arr, { '47', m1dopo_na } )
  Endif
  AAdd( arr, { '48', m1ssh_na } )
  AAdd( arr, { '49', m1spec_na } )
  If mk_data >= 0d20210801
    If mtab_v_sanat != 0
      If TPERS->( dbSeek( Str( mtab_v_sanat, 5 ) ) )
        AAdd( arr, { '50', { m1sank_na, TPERS->kod } } )
      Else
        AAdd( arr, { '50', { m1sank_na, 0 } } )
      Endif
    Else
      AAdd( arr, { '50', { m1sank_na, 0 } } )
    Endif
  Else
    AAdd( arr, { '50', m1sank_na } )
  Endif
  // endif
  If Type( 'm1p_otk' ) == 'N'
    AAdd( arr, { '51', m1p_otk } )
  Endif
  If mk_data >= 0d20210801
    If Type( 'm1napr_v_mo' ) == 'N'
      If mtab_v_mo != 0
        If TPERS->( dbSeek( Str( mtab_v_mo, 5 ) ) )
          AAdd( arr, { '52', { m1napr_v_mo, TPERS->kod } } )
        Else
          AAdd( arr, { '52', { m1napr_v_mo, 0 } } )
        Endif
      Else
        AAdd( arr, { '52', { m1napr_v_mo, 0 } } )
      Endif
    Endif
  Else
    If Type( 'm1napr_v_mo' ) == 'N'
      AAdd( arr, { '52', m1napr_v_mo } )
    Endif
  Endif
  If Type( 'arr_mo_spec' ) == 'A'
    AAdd( arr, { '53', arr_mo_spec } ) // массив
  Endif
  If mk_data >= 0d20210801
    If Type( 'm1napr_stac' ) == 'N'
      If mtab_v_stac != 0
        If TPERS->( dbSeek( Str( mtab_v_stac, 5 ) ) )
          AAdd( arr, { '54', { m1napr_stac, TPERS->kod } } )
        Else
          AAdd( arr, { '54', { m1napr_stac, 0 } } )
        Endif
      Else
        AAdd( arr, { '54', { m1napr_stac, 0 } } )
      Endif
    Endif
  Else
    If Type( 'm1napr_stac' ) == 'N'
      AAdd( arr, { '54', m1napr_stac } )
    Endif
  Endif
  If Type( 'm1profil_stac' ) == 'N'
    AAdd( arr, { '55', m1profil_stac } )
  Endif
  If mk_data >= 0d20210801
    If Type( 'm1napr_reab' ) == 'N'
      If mtab_v_reab != 0
        If TPERS->( dbSeek( Str( mtab_v_reab, 5 ) ) )
          AAdd( arr, { '56', { m1napr_reab, TPERS->kod } } )
        Else
          AAdd( arr, { '56', { m1napr_reab, 0 } } )
        Endif
      Else
        AAdd( arr, { '56', { m1napr_reab, 0 } } )
      Endif
    Endif
  Else
    If Type( 'm1napr_reab' ) == 'N'
      AAdd( arr, { '56', m1napr_reab } )
    Endif
  Endif
  If Type( 'm1profil_kojki' ) == 'N'
    AAdd( arr, { '57', m1profil_kojki } )
  Endif

  If ! aliasIsUse
    TPERS->( dbCloseArea() )
    Select( oldSelect )
  Endif

  save_arr_dispans( lkod, arr )

  Return Nil

// 07.04.24
Function read_arr_drz( lkod, is_all )

  Local arr, i, sk
  Local aliasIsUse := aliasisalreadyuse( 'TPERS' )
  Local oldSelect

  If ! aliasIsUse
    oldSelect := Select()
    r_use( dir_server + 'mo_pers', , 'TPERS' )
  Endif

  Private mvar
  arr := read_arr_dispans( lkod )
  Default is_all To .t.
  For i := 1 To Len( arr )
    If ValType( arr[ i ] ) == 'A' .and. ValType( arr[ i, 1 ] ) == 'C'
      Do Case
      Case is_all .and. eq_any( arr[ i, 1 ], '11', '12', '13', '14', '15' ) .and. ;
          ValType( arr[ i, 2 ] ) == 'A' .and. Len( arr[ i, 2 ] ) >= 7
        sk := Right( arr[ i, 1 ], 1 )
        pole_diag := 'mdiag' + sk
        pole_1pervich := 'm1pervich' + sk
        pole_1stadia := 'm1stadia' + sk
        pole_1dispans := 'm1dispans' + sk
        pole_1dop := 'm1dop' + sk
        pole_1usl := 'm1usl' + sk
        pole_1san := 'm1san' + sk
        pole_d_diag := 'mddiag' + sk
        pole_d_dispans := 'mddispans' + sk
        pole_dn_dispans := 'mdndispans' + sk
        If ValType( arr[ i, 2, 1 ] ) == 'C'
          &pole_diag := arr[ i, 2, 1 ]
        Endif
        If ValType( arr[ i, 2, 2 ] ) == 'N'
          &pole_1pervich := arr[ i, 2, 2 ]
        Endif
        If ValType( arr[ i, 2, 3 ] ) == 'N'
          &pole_1stadia := arr[ i, 2, 3 ]
        Endif
        If ValType( arr[ i, 2, 4 ] ) == 'N'
          &pole_1dispans := arr[ i, 2, 4 ]
        Endif
        If ValType( arr[ i, 2, 5 ] ) == 'N' .and. Type( pole_1dop ) == 'N'
          &pole_1dop := arr[ i, 2, 5 ]
        Endif
        If ValType( arr[ i, 2, 6 ] ) == 'N' .and. Type( pole_1usl ) == 'N'
          &pole_1usl := arr[ i, 2, 6 ]
        Endif
        If ValType( arr[ i, 2, 7 ] ) == 'N' .and. Type( pole_1san ) == 'N'
          &pole_1san := arr[ i, 2, 7 ]
        Endif
        If Len( arr[ i, 2 ] ) >= 8 .and. ValType( arr[ i, 2, 8 ] ) == 'D' .and. Type( pole_d_diag ) == 'D'
          &pole_d_diag := arr[ i, 2, 8 ]
        Endif
        If Len( arr[ i, 2 ] ) >= 9 .and. ValType( arr[ i, 2, 9 ] ) == 'D' .and. Type( pole_d_dispans ) == 'D'
          &pole_d_dispans := arr[ i, 2, 9 ]
        Endif
        If Len( arr[ i, 2 ] ) >= 10 .and. ValType( arr[ i, 2, 10 ] ) == 'D' .and. Type( pole_dn_dispans ) == 'D'
          &pole_dn_dispans := arr[ i, 2, 10 ]
        Endif
//      Case is_all .and. arr[ i, 1 ] == '19' .and. ValType( arr[ i, 2 ] ) == 'A'
//        arr_usl_otkaz := arr[ i, 2 ]
      Case arr[ i, 1 ] == '30' .and. ValType( arr[ i, 2 ] ) == 'N'
        // m1GRUPPA := arr[i,2]
      Case arr[ i, 1 ] == '31' .and. ValType( arr[ i, 2 ] ) == 'N'
        m1prof_ko := arr[ i, 2 ]
      Case is_all .and. arr[ i, 1 ] == '40' .and. ValType( arr[ i, 2 ] ) == 'A'
        arr_otklon := arr[ i, 2 ]
      Case is_all .and. arr[ i, 1 ] == '41' .and. ValType( arr[ i, 2 ] ) == 'A'
        arr_ne_nazn := aclone( arr[ i, 2 ] )
      Case arr[ i, 1 ] == '45' .and. ValType( arr[ i, 2 ] ) == 'N'
        m1dispans  := arr[ i, 2 ]
      Case arr[ i, 1 ] == '46' .and. ValType( arr[ i, 2 ] ) == 'N'
        m1nazn_l   := arr[ i, 2 ]
      Case arr[ i, 1 ] == '47'
        If ValType( arr[ i, 2 ] ) == 'N'
          m1dopo_na  := arr[ i, 2 ]
        Elseif ValType( arr[ i, 2 ] ) == 'A'
          m1dopo_na  := arr[ i, 2 ][ 1 ]
          If arr[ i, 2 ][ 2 ] > 0
            TPERS->( dbGoto( arr[ i, 2 ][ 2 ] ) )
            mtab_v_dopo_na := TPERS->tab_nom
          Endif
        Endif
      Case arr[ i, 1 ] == '48' .and. ValType( arr[ i, 2 ] ) == 'N'
        m1ssh_na   := arr[ i, 2 ]
      Case arr[ i, 1 ] == '49' .and. ValType( arr[ i, 2 ] ) == 'N'
        m1spec_na  := arr[ i, 2 ]
      Case arr[ i, 1 ] == '50'
        If ValType( arr[ i, 2 ] ) == 'N'
          m1sank_na  := arr[ i, 2 ]
        Elseif ValType( arr[ i, 2 ] ) == 'A'
          m1sank_na  := arr[ i, 2 ][ 1 ]
          If arr[ i, 2 ][ 2 ] > 0
            TPERS->( dbGoto( arr[ i, 2 ][ 2 ] ) )
            mtab_v_sanat := TPERS->tab_nom
          Endif
        Endif
      Case arr[ i, 1 ] == '51' .and. ValType( arr[ i, 2 ] ) == 'N'
        m1p_otk  := arr[ i, 2 ]
      Case arr[ i, 1 ] == '52'
        If ValType( arr[ i, 2 ] ) == 'N'
          m1napr_v_mo  := arr[ i, 2 ]
        Elseif ValType( arr[ i, 2 ] ) == 'A'
          m1napr_v_mo  := arr[ i, 2 ][ 1 ]
          If arr[ i, 2 ][ 2 ] > 0
            TPERS->( dbGoto( arr[ i, 2 ][ 2 ] ) )
            mtab_v_mo := TPERS->tab_nom
          Endif
        Endif
      Case arr[ i, 1 ] == '53' .and. ValType( arr[ i, 2 ] ) == 'A'
        arr_mo_spec := arr[ i, 2 ]
      Case arr[ i, 1 ] == '54'
        If ValType( arr[ i, 2 ] ) == 'N'
          m1napr_stac := arr[ i, 2 ]
        Elseif ValType( arr[ i, 2 ] ) == 'A'
          m1napr_stac := arr[ i, 2 ][ 1 ]
          If arr[ i, 2 ][ 2 ] > 0
            TPERS->( dbGoto( arr[ i, 2 ][ 2 ] ) )
            mtab_v_stac := TPERS->tab_nom
          Endif
        Endif
      Case arr[ i, 1 ] == '55' .and. ValType( arr[ i, 2 ] ) == 'N'
        m1profil_stac := arr[ i, 2 ]
      Case arr[ i, 1 ] == '56'
        If ValType( arr[ i, 2 ] ) == 'N'
          m1napr_reab := arr[ i, 2 ]
        Elseif ValType( arr[ i, 2 ] ) == 'A'
          m1napr_reab := arr[ i, 2 ][ 1 ]
          If arr[ i, 2 ][ 2 ] > 0
            TPERS->( dbGoto( arr[ i, 2 ][ 2 ] ) )
            mtab_v_reab := TPERS->tab_nom
          Endif
        Endif
      Case arr[ i, 1 ] == '57' .and. ValType( arr[ i, 2 ] ) == 'N'
        m1profil_kojki := arr[ i, 2 ]
      Endcase
    Endif
  Next

  If ! aliasIsUse
    TPERS->( dbCloseArea() )
    Select( oldSelect )
  Endif

  Return Nil

// 17.04.24
function get_array_plan_drz( nyear, mkod )
  // nyear - год на который нужен план
  // mkod - код мед учреждения
  local nameArr := {}
  local funcGetPZ, j, arr := {}

  if nyear >= 2024
    funcGetPZ := 'get_array_plan_drz_' + last_digits_year( nyear ) + '()'
    nameArr := &funcGetPZ
    if ( j := ascan( nameArr, { | x | x[ 1 ] == mkod } ) ) > 0
      aadd( arr, nameArr[ j, 2 ] )  // план для мужчин
      aadd( arr, nameArr[ j, 3 ] )  // план для женщин
    endif
  endif
  return arr

// 17.04.24
function get_array_plan_drz_24()
  local arr

  arr := { ;
    { '340033', 1545, 1930, 'ГУЗ Поликлиника № 4' }, ;
    { '340041', 2532, 3467, 'ГУЗ Клиническая поликлиника № 28' }, ;
    { '340042', 1029, 1318, 'ГУЗ Поликлиника № 30' }, ;
    { '340050', 1597, 2214, 'ГУЗ Поликлиника № 5' }, ;
    { '340055', 1502, 1695, 'ГУЗ Больница № 16' }, ;
    { '340066', 2814, 3902, 'ГУЗ Поликлиника № 2' }, ;
    { '340075', 977, 1152, 'ГУЗ Клиническая больница № 11' }, ;
    { '340056', 991, 1028, 'ГУЗ Больница №22' }, ;
    { '340083', 2290, 3277, 'ГУЗ КП № 1' }, ;
    { '340104', 1733, 1744, 'ГБУЗ ГКБ № 1 им. С.З.Фишера' }, ;
    { '340096', 1473, 1946, 'ГАУЗ КП № 3' }, ;
    { '340106', 1593, 1612, 'ГБУЗ Городская больница № 2' }, ;
    { '340117', 306, 272, 'ГБУЗ Алексеевская ЦРБ' }, ;
    { '340118', 583, 373, 'ГБУЗ Быковская ЦРБ' }, ;
    { '340119', 1378, 1343, 'ГБУЗ Городищенская ЦРБ' }, ;
    { '340158', 297, 239, 'ГБУ ЦРБ Руднянского муниципального района' }, ;
    { '340120', 303, 272, 'ГБУЗ Даниловская ЦРБ' }, ;
    { '340126', 656, 602, 'ГБУЗ Иловлинская ЦРБ' }, ;
    { '340127', 1009, 1104, 'ГБУЗ Калачевская ЦРБ' }, ;
    { '340136', 314, 255, 'ГБУЗ Киквидзенская ЦРБ' }, ;
    { '340138', 604, 731, 'ГБУЗ Котельниковская ЦРБ' }, ;
    { '340157', 395, 342, 'ГБУЗ Кумылженская ЦРБ' }, ;
    { '340142', 588, 540, 'ГБУЗ Ленинская ЦРБ' }, ;
    { '340148', 264, 257, 'ГБУЗ Нехаевская ЦРБ' }, ;
    { '340149', 672, 451, 'ГБУЗ Николаевская ЦРБ' }, ;
    { '340150', 722, 654, 'ГБУЗ Новоаннинская ЦРБ' }, ;
    { '340151', 476, 447, 'ГБУЗ Новониколаевская ЦРБ' }, ;
    { '340152', 397, 452, 'ГБУЗ Октябрьская ЦРБ' }, ;
    { '340155', 807, 755, 'ГБУЗ Палласовская ЦРБ' }, ;
    { '340159', 791, 802, 'ГБУЗ Светлоярская ЦРБ' }, ;
    { '340160', 428, 341, 'ГБУЗ Серафимовичская ЦРБ' }, ;
    { '340161', 1095, 1092, 'ГБУЗ Среднеахтубинская ЦРБ' }, ;
    { '340163', 387, 359, 'ГБУЗ Старополтавская ЦРБ' }, ;
    { '340169', 927, 905, 'ГБУЗ Фроловская ЦРБ' }, ;
    { '340121', 514, 538, 'ГБУЗ ЦРБ Дубовского муниципального района' }, ;
    { '340137', 344, 301, 'ГБУЗ ЦРБ Клетского муниципального района' }, ;
    { '340153', 329, 288, 'ГБУЗ ЦРБ Ольховского муниципального района' }, ;
    { '340164', 668, 583, 'ГБУЗ ЦРБ Суровикинского муниципального района' }, ;
    { '340170', 319, 290, 'ГБУЗ Чернышковская ЦРБ' }, ;
    { '340122', 560, 543, 'ГБУЗ Еланская ЦРБ' }, ;
    { '340167', 1127, 1309, 'ГБУЗ Урюпинская ЦРБ' }, ;
    { '340140', 645, 629, 'ГБУЗ ЦРБ Котовского муниципального района' }, ;
    { '340124', 821, 699, 'ГУЗ Жирновская ЦРБ' }, ;
    { '340171', 805, 745, 'ЧУЗ КБ РЖД-Медицина г.Волгоград' }, ;
    { '340129', 944, 1024, 'ГБУЗ ЦГБ' }, ;
    { '340057', 915, 987, 'ГУЗ КБСМП № 15' }, ;
    { '340074', 909, 1194, 'КБ СМП № 7' }, ;
    { '340105', 1098, 992, 'ГБУЗ Городская клиническая больница №3' }, ;
    { '340109', 1338, 1643, 'ГБУЗ Городская поликлиника №5' } ;
  }
  return arr