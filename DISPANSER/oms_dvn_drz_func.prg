#include 'common.ch'
#include 'inkey.ch'
#include 'function.ch'
#include 'edit_spr.ch'
#include 'chip_mo.ch'

#define BASE_ISHOD_RZD 500  //

Static lcount_uch  := 1

// 17.11.24 Итоги за период времени по диспансеризации репродуктивного здоровья МИАЦ
Function inf_drz()

  Local arr_m, buf := save_maxrow()
  Local name_file := 'Диспансеризация репродуктивного здоровья'
  Local arr, i, arr_1
  Local name_file_full := name_file + '.xlsx'
  Local lCity := .f., lPatologiya := .f.
  Local beginPeriod
  Local sdate1, sdate, blk
  Local pole_diag, pole_1pervich, iii, pole_1dispans
  Local is_weekend
  Local fl_d_full := .t.,   fl_d_city := .t.,  fl_d_full_1 := .t.,   fl_d_city_1 := .t.

  Default sdate To sys_date
  Default sdate1 To sys_date
  //
  For i := 1 To 5 // создадим приватные переменные для выявленных диагнозов
    sk := lstr( i )
    pole_diag := 'mdiag' + sk
    pole_1pervich := 'm1pervich' + sk
    pole_1dispans := 'm1dispans' + sk
    Private &pole_diag := Space( 6 )
    Private &pole_1pervich := 0
    Private &pole_1dispans := 0
  Next
  //
  If glob_mo[ _MO_KOD_TFOMS ] == '711001' // ЖД-больница
    blk := {| x, y| if( x > y, func_error( 4, 'Начальная дата больше конечной!' ), .t. ) }
    arr_m := input_diapazon( MaxRow() -4, 2, MaxRow() -2, 76, cDataCGet, ;
      { 'Введите начальную', 'и конечную', 'даты диспансеризации' }, ;
      { sdate1, sdate },, blk )
    If ( st_a_uch := inputn_uch( T_ROW, T_COL -5,,, @lcount_uch ) ) == NIL
      Return Nil
    Endif
  Else
    arr_m := year_month( T_ROW, T_COL - 5, , 1 )
  Endif
  If  arr_m != NIL
    // arr[1, ...]-мужчины, arr[2, ...]-мужчины село, arr[3, ...]-женщины, arr[4, ...]-женщины село
    // arr[..., 12]- в выходные и праздничные дни
    // arr[..., 13]- с использованием мобильных бригад
    // arr[..., 14]- с использованием мобильных комплексов
    // arr[..., 15]- 2 этап результат 1 группа здоровья (код 375)
    // arr[..., 16]- 2 этап результат 2 группа здоровья (код 376, 378)
    // arr[..., 17]- 2 этап результат 3 группа здоровья (код 377, 379)
    // arr[..., 18]- всего под диспансерным наблюдением
    // arr[..., 19]- всего под диспансерным наблюдением впервые
    // arr[..., 20]- всего направлено на лечение
    // arr[..., 21]- всего направлено на реабилитацию
    // arr[..., 22]- всего направлено на санаторно-курортное лечение

    arr := Array( 4, 22 )  // 10 )
    arr_1 := Array( 3, 12 )
    // 1- всего 2-село 3- всего 375, 4- село 375, 5- всего 376, 6- село 376, 7- всего 377, 8-село 377, 9 - диаг всего 10 -село
    afillall( arr, 0 )
    afillall( arr_1, 0 )
    If glob_mo[ _MO_KOD_TFOMS ] == '711001' // ЖД-больница
      sdate := arr_m[ 2 ]
      sdate1 := arr_m[ 1 ]
      beginPeriod :=  sdate1
      arr_m := { Year( sdate ), NIL, NIL,, sdate1, sdate, dtoc4( sdate1 ), dtoc4( sdate ) }
    Else
      beginPeriod := BoY( arr_m[ 6 ] )  // начало периода, расчет идет нарастающим способом
    Endif
    Private m1nazn_l  := 0, m1dopo_na := 0, m1ssh_na  := 0, ;
      m1spec_na := 0, m1napr_stac := 0, m1napr_reab := 0, m1sank_na := 0

    Private arr_otklon

    r_use( dir_server + 'kartote_', , 'KART_' )
    r_use( dir_server + 'kartotek', , 'KART' )
    Set Relation To RecNo() into KART_

    r_use( dir_server + 'human_', , 'HUMAN_' )
    r_use( dir_server + 'human', dir_server + 'humand', 'HUMAN' )
    Set Relation To RecNo() into HUMAN_
    dbSeek( DToS( beginPeriod ), .t. )
    Do While human->k_data <= arr_m[ 6 ] .and. !Eof()
      m1nazn_l  := 0
      m1dopo_na := 0
      m1ssh_na  := 0
      m1spec_na := 0
      m1sank_na := 0
      m1napr_stac := 0
      lPatologiya := .f.
      arr_otklon := {}
      // if between( human->ishod, BASE_ISHOD_RZD + 1, BASE_ISHOD_RZD + 2 )
      If is_sluch_dispanser_drz( human->ishod ) .and. iif( glob_mo[ _MO_KOD_TFOMS ] == '711001', f_is_uch( st_a_uch, human->lpu ), .t. )
        kart->( dbGoto( human->kod_k ) )
        lCity := f_is_selo( kart_->gorod_selo, kart_->okatog ) // .Т. - село .F. - город
        // переворот
        if lCity
          lCity := .f.
        else
          lCity := .t.  
        endif  
        is_weekend := ! is_work_day( human->n_data )
        For iii := 1 To 4
          pole_diag := 'mdiag' + lstr( iii )
          pole_1pervich := 'm1pervich' + lstr( iii )
          pole_1dispans := 'm1dispans' + lstr( iii )
          &pole_diag := ''
          &pole_1dispans := 0
          &pole_1pervich := 0
        Next
        read_arr_drz( human->kod, .t. )
        If human->pol == 'М'
          If human->ishod - BASE_ISHOD_RZD != 2  // не второй этап
            fl_d_full := .t.
            fl_d_city := .t.
            fl_d_full_1 := .t. // впервые всего
            fl_d_city_1 := .t. // впервые не город - правка ГОРОД
            For iii := 1 To 4
              pole_diag := 'mdiag' + lstr( iii )
              pole_1pervich := 'm1pervich' + lstr( iii )
              pole_1dispans := 'm1dispans' + lstr( iii )
              If !Empty( &pole_diag )
                if &pole_1dispans > 0 // состот на ДН
                  arr[ 1, 18 ]++
                  if &pole_1pervich == 1 // впервые
                    arr[ 1, 19 ]++
                    If fl_d_full_1
                      arr_1[ 1, 11 ] ++
                      fl_d_full_1 := .f.
                    Endif
                  Endif
                  If fl_d_full
                    arr_1[ 1, 9 ] ++
                    fl_d_full := .f.
                  Endif
                Endif
                If ! lCity
                  if &pole_1dispans > 0 // состот на ДН
                    arr[ 2, 18 ]++
                    if &pole_1pervich == 1 // впервые
                      arr[ 2, 19 ]++
                      If fl_d_city_1
                        arr_1[ 1, 12 ] ++
                        fl_d_city_1 := .f.
                      Endif
                    Endif
                  Endif
                  If fl_d_city
                    arr_1[ 1, 10 ] ++
                    fl_d_city := .f.
                  Endif
                Endif
              Endif
            Next
          Endif
          If is_weekend
            arr[ 1, 12 ]++
            If ! lCity
              arr[ 2, 12 ]++
            Endif
          Endif
          If human_->RSLT_NEW == 375
            arr[ 1, 1 ]++
            If ! lCity
              arr[ 2, 1 ]++
            Endif
            If human->ishod - BASE_ISHOD_RZD == 2  // получим сохраненный этап диспансеризации
              arr[ 1, 15 ]++
              arr_1[ 1, 1 ] ++
              arr_1[ 1, 3 ] ++
              If ! lCity
                arr[ 2, 15 ]++
                arr_1[ 1, 2 ]++
                arr_1[ 1, 4 ] ++
              Endif
            Endif
          Elseif human_->RSLT_NEW == 376
            arr[ 1, 2 ]++
            If ! lCity
              arr[ 2, 2 ]++
            Endif
            If human->ishod - BASE_ISHOD_RZD == 2  // получим сохраненный этап диспансеризации
              arr[ 1, 16 ]++
              arr_1[ 1, 1 ] ++
              arr_1[ 1, 5 ] ++
              If ! lCity
                arr[ 2, 16 ]++
                arr_1[ 1, 2 ]++
                arr_1[ 1, 6 ] ++
              Endif
            Endif
          Elseif human_->RSLT_NEW == 377
            arr[ 1, 3 ]++
            If ! lCity
              arr[ 2, 3 ]++
            Endif
            If human->ishod - BASE_ISHOD_RZD == 2  // получим сохраненный этап диспансеризации
              arr[ 1, 17 ]++
              arr_1[ 1, 1 ] ++
              arr_1[ 1, 7 ] ++
              If ! lCity
                arr[ 2, 17 ]++
                arr_1[ 1, 2 ] ++
                arr_1[ 1, 8 ] ++
              Endif
            Endif
          Elseif human_->RSLT_NEW == 378 .or. human_->RSLT_NEW == 379
            arr[ 1, 4 ]++
            If ! lCity
              arr[ 2, 4 ]++
            Endif
          Endif
        Else  // женщины
          If human->ishod - BASE_ISHOD_RZD != 2  // не второй этап
            fl_d_full := .t.
            fl_d_city := .t.
            fl_d_full_1 := .t. // впервые всего
            fl_d_city_1 := .t. // впервые не город
            For iii := 1 To 4
              pole_diag := 'mdiag' + lstr( iii )
              pole_1pervich := 'm1pervich' + lstr( iii )
              pole_1dispans := 'm1dispans' + lstr( iii )
              If !Empty( &pole_diag )
                if &pole_1dispans > 0 // состот на ДН
                  arr[ 3, 18 ]++
                  if &pole_1pervich == 1 // впервые
                    arr[ 3, 19 ]++
                    If fl_d_full_1
                      arr_1[ 2, 11 ] ++
                      fl_d_full_1 := .f.
                    Endif
                  Endif
                  If fl_d_full
                    arr_1[ 2, 9 ] ++
                    fl_d_full := .f.
                  Endif
                Endif
                If ! lCity
                  if &pole_1dispans > 0 // состот на ДН
                    arr[ 4, 18 ]++
                    if &pole_1pervich == 1 // впервые
                      arr[ 4, 19 ]++
                      If fl_d_city_1
                        arr_1[ 2, 12 ] ++
                        fl_d_city_1 := .f.
                      Endif
                    Endif
                    If fl_d_city
                      arr_1[ 2, 10 ] ++
                      fl_d_city := .f.
                    Endif
                  Endif
                Endif
                //
              Endif
            Next
          Endif
          If is_weekend
            arr[ 3, 12 ]++
            If ! lCity
              arr[ 4, 12 ]++
            Endif
          Endif
          If human_->RSLT_NEW == 375
            arr[ 3, 1 ]++
            If ! lCity
              arr[ 4, 1 ]++
            Endif
            If human->ishod - BASE_ISHOD_RZD == 2  // получим сохраненный этап диспансеризации
              arr[ 3, 15 ]++
              arr_1[ 2, 1 ] ++
              arr_1[ 2, 3 ] ++
              If ! lCity
                arr[ 4, 15 ]++
                arr_1[ 2, 2 ]++
                arr_1[ 2, 4 ] ++
              Endif
            Endif
          Elseif human_->RSLT_NEW == 376
            arr[ 3, 2 ]++
            If ! lCity
              arr[ 4, 2 ]++
            Endif
            If human->ishod - BASE_ISHOD_RZD == 2  // получим сохраненный этап диспансеризации
              arr[ 3, 16 ]++
              arr_1[ 2, 1 ] ++
              arr_1[ 2, 5 ] ++
              If ! lCity
                arr[ 4, 16 ]++
                arr_1[ 2, 2 ]++
                arr_1[ 2, 6 ] ++
              Endif
            Endif
          Elseif human_->RSLT_NEW == 377
            arr[ 3, 3 ]++
            If ! lCity
              arr[ 4, 3 ]++
            Endif
            If human->ishod - BASE_ISHOD_RZD == 2  // получим сохраненный этап диспансеризации
              arr[ 3, 17 ]++
              arr_1[ 2, 1 ] ++
              arr_1[ 2, 7 ] ++
              If ! lCity
                arr[ 4, 17 ]++
                arr_1[ 2, 2 ] ++
                arr_1[ 2, 8 ] ++
              Endif
            Endif
          Elseif human_->RSLT_NEW == 378 .or. human_->RSLT_NEW == 379
            arr[ 3, 4 ]++
            If ! lCity
              arr[ 4, 4 ]++
            Endif
          Endif
          If Len( arr_otklon ) > 0
            For i := 1 To Len( arr_otklon )
              If arr_otklon[ i ] == 'A01.20.006' .or. arr_otklon[ i ] == 'A02.20.001'
                If ! lPatologiya
                  lPatologiya := .t.
                  arr[ 3, 5 ]++
                  If ! lCity
                    arr[ 4, 5 ]++
                  Endif
                Endif
              Endif
              If arr_otklon[ i ] == 'A12.20.001'
                arr[ 3, 6 ]++
                If ! lCity
                  arr[ 4, 6 ]++
                Endif
              Endif
              If arr_otklon[ i ] == 'A08.20.017'
                arr[ 3, 7 ]++
                If ! lCity
                  arr[ 4, 7 ]++
                Endif
              Endif
              If arr_otklon[ i ] == 'A26.20.034.001'
                arr[ 3, 8 ]++
                If ! lCity
                  arr[ 4, 8 ]++
                Endif
              Endif
            Next
          Endif
        Endif
        If m1napr_stac != 0
          If human->pol == 'М'
            arr[ 1, 9 ]++
            arr[ 1, 20 ]++
            If ! lCity
              arr[ 2, 9 ]++
              arr[ 2, 20 ]++
            Endif
          Else
            arr[ 3, 20 ]++
            arr[ 3, 9 ]++
            If ! lCity
              arr[ 4, 9 ]++
              arr[ 4, 20 ]++
            Endif
          Endif
		Endif  
        If m1napr_reab != 0
          If human->pol == 'М'
            arr[ 1, 21 ]++
            If ! lCity
              arr[ 2, 21 ]++
            Endif
          Else
            arr[ 3, 21 ]++
            If ! lCity
              arr[ 4, 21 ]++
            Endif
          Endif
        Endif
        If m1sank_na != 0
          If human->pol == 'М'
            arr[ 1, 22 ]++
            If ! lCity
              arr[ 2, 22 ]++
            Endif
          Else
            arr[ 3, 22 ]++
            If ! lCity
              arr[ 4, 22 ]++
            Endif
          Endif
        Endif
        //Endif
      Endif
      Select HUMAN
      Skip
    Enddo
    dbCloseAll()
    inf_drz_excel( hb_OEMToANSI( name_file_full ), arr_m, arr, arr_1, lcount_uch )
    work_with_excel_file( name_file_full )
  Endif

  Return Nil

// 10.04.24 подмена полей в рабочем массиве arr_osm1 объявленным PRIVATE
Function change_field_arr_osm1( source, dest )

  // source - индекс массива откуда брать данные
  // dest - индекс куда помещать данные

  // структуры записи массива arr_osm1[ i ]
  // 1 - код врача
  // 2 - специальность врача
  // 3 - код ассистента
  // 4 - профиль услуги
  // 5 - шифр услуги
  // 6 - код диагноза
  // 7 - код услуги по нашему справочнику услуг
  // 8 - цена услуги
  // 9 - дата услуги
  // 10- код выполнения/не назначено, отказа не может быть
  // 11-
  // 12 - признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
  // 13 - соответствующая услуга ФФОМС услуге ТФОМС
  // 14 - специальность врача по справочнику V021
  arr_osm1[ dest, 1 ] := arr_osm1[ source, 1 ]
  arr_osm1[ dest, 2 ] := arr_osm1[ source, 2 ]
  arr_osm1[ dest, 3 ] := arr_osm1[ source, 3 ]
  arr_osm1[ dest, 4 ] := arr_osm1[ source, 4 ]
  arr_osm1[ dest, 6 ] := arr_osm1[ source, 6 ]
  arr_osm1[ dest, 9 ] := arr_osm1[ source, 9 ]
  arr_osm1[ dest, 10 ] := arr_osm1[ source, 10 ]
  arr_osm1[ dest, 11 ] := arr_osm1[ source, 11 ]
  arr_osm1[ dest, 14 ] := arr_osm1[ source, 14 ]

  Return Nil

// 25.04.24 возврат массива результатов исследования
Function drz_result_drz( variant )

  Local arr := arr_mm_otkaz()

  ASize( arr, 2 )

  If variant == 2
    AAdd( arr, { 'НЕ НАЗНАЧЕНО', 4 } )
  Elseif variant == 3
    AAdd( arr, { 'НЕВОЗМОЖНО', 2 } )
  Endif

  Return AClone( arr )

// 19.07.24 возврат массива результатов исследования
Function arr_mm_result_drz( etap )

  Local arr := arr_mm_otkaz()

  ASize( arr, 2 )
  If etap == 2
    AAdd( arr, { 'НЕ НАЗНАЧЕНО', 4 } )
  Elseif etap == 1
    AAdd( arr, { 'НЕВОЗМОЖНО', 2 } )
  Endif

  Return arr

// 31.03.24 вернуть "правильный" профиль для диспансеризации/профилактики
Function ret_profil_dispans_drz( lprofil, lprvs )

  If lprofil == 34 // если профиль по "клинической лабораторной диагностике"
    If ret_old_prvs( lprvs ) == 2013 // и спец-ть "Лабораторное дело"
      lprofil := 37 // сменим на профиль по "лабораторному делу"
    Elseif ret_old_prvs( lprvs ) == 2011 // или "Лабораторная диагностика"
      lprofil := 38 // сменим на профиль по "лабораторной диагностике"
    Endif
  Endif

  Return lprofil

// 10.05.24
Function ret_ndisp_drz( lkod_h, lkod_k )

  Local fl := .t., msg

  msg := ' '

  ar := ret_etap_drz( lkod_h, lkod_k )
  If ( Len( ar[ 1 ] ) == 0 ) .and. ( lkod_h == 0 )
    metap := 1
  Elseif  ( Len( ar[ 1 ] ) == 1 ) .and. ( lkod_h == 0 )
    If ! eq_any( ar[ 1, 1, 3 ], 378, 379 )
      msg := 'В ' + lstr( Year( mn_data ) ) + ' году проведен I этап диспансеризации репродуктивного здоровья без направления на II этап!'
      hb_Alert( msg )
      fl := .f.
    Endif
    metap := 2
  Endif

  mndisp := inieditspr( A__MENUVERT, mm_ndisp, metap )

  Return fl

// 08.07.24
Function ret_etap_drz( lkod_h, lkod_k )

  Local ae := { {}, {} }, fl, i, k, d1 := Year( mn_data )

  r_use( dir_server + 'human_', , 'HUMAN_' )
  r_use( dir_server + 'human', dir_server + 'humankk', 'HUMAN' )
  Set Relation To RecNo() into HUMAN_
  find ( Str( lkod_k, 7 ) )
  Do While human->kod_k == lkod_k .and. !Eof()
    fl := ( lkod_h != human->( RecNo() ) )
    If fl .and. human->schet > 0 .and. human_->oplata == 9
      fl := .f. // лист учёта снят по акту и выставлен повторно
    Endif
    // If fl .and. Between( human->ishod, BASE_ISHOD_RZD + 1, BASE_ISHOD_RZD + 2 ) // ???
    If fl .and. is_sluch_dispanser_drz( human->ishod ) // ???
      i := human->ishod - BASE_ISHOD_RZD  // 400
      If Year( human->n_data ) == d1 // текущий год
        AAdd( ae[ 1 ], { i, human->k_data, human_->RSLT_NEW } )
      Endif
    Endif
    Skip
  Enddo
  Close databases

  Return ae

// 31.03.24 получить индекс услуги на этапе диспансеризации репродуктивного здоровья
Function index_usluga_etap_drz( uslugi_etapa, lshifr, pos )

  // lshifr - шифр услуги
  Local index := 0
  Local i := 0
  Local usl := uslugi_etapa

  Default pos To 2
  For i := 1 To Len( usl )
    If AllTrim( usl[ i, pos ] ) == AllTrim( lshifr )
      index := i
      Exit
    Endif
  Next

  Return Index

// 21.06.24
Function valid_date_uslugi_drz( get, metap, beginDate, endDate, lenArr, i )

  Local mVarDate

  If CToD( get:buffer ) > endDate
    get:varput( get:original )
    func_error( 4, 'Дата проведения исследования больше даты окончания диспансеризации' )
    Return .f.
  Endif

  If CToD( get:buffer ) < beginDate
    get:varput( get:original )
    func_error( 4, 'Дата проведения исследования меньше даты начала диспансеризации' )
    Return .f.
  Endif

  mVarDate := 'MDATE' + lstr( lenArr )
  If ( metap == 1 .and. Upper( get:name ) == mVarDate ) .or. ( metap == 2 .and. Upper( get:name ) == mVarDate ) // дата приема
    If CToD( get:buffer ) != endDate
      get:varput( get:original )
      func_error( 4, 'Дата проведения осмотра врача не равна дате окончания диспансеризации репрод. здоровья' )
      Return .f.
    Endif
  Endif

  Return .t.

// 28.03.24
Function f_valid_begdata_drz( get, loc_kod )

  Local i

  If CToD( get:buffer ) < 0d20240101
    get:varput( get:original )
    func_error( 4, 'Диспансеризация репродуктивного здоровья началась с 01 января 2024 года' )
    Keyboard Chr( K_UP )
    Return .f.
  Endif

  Return .t.

// 31.03.24
Function is_usluga_vrach_priem( i, arr_uslugi, arr_usl_priem )

  Local fl := .f.
  Local ar := arr_uslugi[ i ], cSearch

  If ValType( ar[ 2 ] ) == 'C'
    cSearch := AllTrim( ar[ 2 ] )
    fl := ( AScan( arr_usl_priem, cSearch ) > 0 )
  Endif

  Return fl

// 08.04.24 рабочая ли услуга по диспансеризации репродуктивного здоровья в зависимости от этапа
Function f_is_usl_sluch_drz( uslugi_etapa, i, allUsl, /*@*/_diag, /*@*/_otkaz )

  Local fl := .f.

  Local ar := uslugi_etapa[ i ]

  fl := .t.
  _diag := ( ar[ 4 ] == 1 )
  _otkaz := 0
  If ar[ 5 ] == 1
    _otkaz := 1 // можно ввести отказ
  Endif

  Return fl

// 08.04.24
Function uslugi_to_view( arr_uslugi )

  Local arr := {}
  Local i

  For i := 1 To Len( arr_uslugi )
    If arr_uslugi[ i, 14 ] == 1
      AAdd( arr, AClone( arr_uslugi[ i ] ) )
    Endif
  Next

  Return arr

// 07.04.24 получить услуги этапа диспансеризации репродуктивного здоровья
Function uslugietap_drz( _etap, age, gender )

  // _etap - этап диспансеризации
  // age - возраст
  // gender - пол
  Local retArray := {}
  Local i, j, fl, tmpArr := {}
  Local usl := ret_array_drz()

  Default age To 18
  Default gender To 0

  For i := 1 To Len( usl )
    fl := .f.
    If ValType( usl[ i, 3 ] ) == 'N'
      fl := ( usl[ i, 3 ] == _etap )
    Else
      fl := AScan( usl[ i, 3 ], _etap ) > 0
    Endif
    If fl
      If gender == 'М'
        If ValType( usl[ i, 6 ] ) == 'N'
          fl := ( usl[ i, 6 ] == 1 )
        Else
          fl := AScan( usl[ i, 6 ], age ) > 0
        Endif
      Else
        If ValType( usl[ i, 7 ] ) == 'N'
          fl := ( usl[ i, 7 ] == 1 )
        Else
          fl := AScan( usl[ i, 7 ], age ) > 0
        Endif
      Endif
    Endif

    If fl
      AAdd( retArray, usl[ i ] )
    Endif
  Next
  // поместим все врачебные приемы в конец массива
  For i := 1 To Len( retArray )
    If retArray[ i, 4 ] == 0  // это не диагностическая услуга
      AAdd( tmpArr, AClone( retArray[ i ] ) )
    Endif
  Next
  For i := 1 To Len( tmpArr )
    If ( j := AScan( retArray, {| x | x[ 2 ] == AllTrim( tmpArr[ i, 2 ] ) } ) ) > 0
      hb_ADel( retArray, j, .t. )
      AAdd( retArray, tmpArr[ i ] )
    Endif
  Next

  Return retArray

// 26.06.24 массивы по диспансеризации репродуктивного здоровья
Function ret_array_drz()

  Local arr_drz_usl

  // 1- наименование меню
  // 2- шифр услуги
  // 3- этап или список допустимых этапов, пример: {1,2}
  // 4 - диагностическая услуга (0-нет, 1-да)
  // 5- возможен отказ пациента (0 - нет, 1 - да)
  // 6 - возраст для мужчин (число лет), если 1 - все возраста, если список {} то конкретные значения возраста
  // 7 - возраст для женщин (число лет), если 1 - все возраста, если список {} то конкретные значения возраста

  // 10- V002 - Классификатор прифилей оказанной медицинской помощи
  // 11- V004 - Классификатор медицинских специальностей
  // 12 - признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
  // 13 - соответствующая услуга ФФОМС услуге ТФОМС
  // 14 - показывать в меню - 1, нет - 0
  // 15 - массив для меню результатов
  arr_drz_usl := { ; // Услуги на экран для ввода
  { ;
    'Приём врача-акушера-гинеколога первичный', ; // наименование меню
  'B01.001.001', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    0, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  0, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Визуальный осмотр наружных половых органов', ; // наименование меню
  'A01.20.002', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Осмотр шейки матки в зеркалах', ; // наименование меню
  'A02.20.001', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Биманульное влагалищное исследование', ; // наименование меню
  'A01.20.003', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Визуальное исследование молочных желез', ; // наименование меню
  'A01.20.005', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Пальпация молочных желез', ; // наименование меню
  'A01.20.006', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Микроскопическое иссл-ние влагалищных мазков', ; // наименование меню
  'A12.20.001', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Определение концентрации водородных ионов (pH)', ; // наименование меню
  'A09.20.011', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Цит. ис-ние микропрепарата шейки матки', ; // наименование меню
  'A08.20.017', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 21, 24, 27, 30, 35, 40, 45 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 3 ) ; // меню результатов исследования
  }, ;
    { ;
    'Цит. ис-ние микропрепарата цервикального канала', ; // наименование меню
  'A08.20.017.001', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 21, 24, 27, 30, 35, 40, 45 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  0, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 3 ) ; // меню результатов исследования
  }, ;
    { ;
    'Жидк. цит. ис-ние микропрепарата шейки матки', ; // наименование меню
  'A08.20.017.002', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 21, 24, 27, 30, 35, 40, 45 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 3 ) ; // меню результатов исследования
  }, ;
    { ;
    'Опред-ние ДНК возбудителей ИППП в женских слизистых', ; // наименование меню
  'A26.20.034.001', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Опред-ние ДНК возбудителей ИППП в женских слизистых', ; // наименование меню
  'A26.20.034.001', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 136, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  0, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Женщины I этап 21,24,27 лет', ; // наименование меню
  '70.9.1', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    0, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 21, 24, 27 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 8, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Женщины I этап 30,35,40,45 лет', ; // наименование меню
  '70.9.2', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    0, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 30, 35, 40, 45 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 8, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Женщины I этап 18,19,20,22,23,25,26,28,29 лет', ; // наименование меню
  '70.9.3', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    0, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 18, 19, 20, 22, 23, 25, 26, 28, 29 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 8, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Женщины I этап 31,32,33,34,36,37,38,39,41,42,43,44,46,47,48,49 лет', ; // наименование меню
  '70.9.4', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    0, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 31, 32, 33, 34, 36, 37, 38, 39, ;
    41, 42, 43, 44, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 8, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Приём врача-акушера-гинеколога повторный', ; // наименование меню
  '70.9.50', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    0, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 136 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 8, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Приём врача-акушера-гинеколога повторный', ; // наименование меню
  'B01.001.002', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    0, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 136 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 8, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  0, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'УЗИ молочных желез', ; // наименование меню
  '70.9.51', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 106 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 33, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 2 ) ; // меню результатов исследования
  }, ;
    { ;
    'УЗИ молочных желез', ; // наименование меню
  'A04.20.002', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 106 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 33, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  0, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 2 ) ; // меню результатов исследования
  }, ;
    { ;
    'УЗИ малого таза трансабдоминальное', ; // наименование меню
  'A04.20.001', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 106, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 33, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 2 ) ; // меню результатов исследования
  }, ;
    { ;
    'УЗИ малого таза трансвагинальное', ; // наименование меню
  'A04.20.001.001', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 106, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 33, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 2 ) ; // меню результатов исследования
  }, ;
    { ;
    'Опред-ние инфекций, передаваемые половым путем', ; // наименование меню
  '70.9.53', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 34 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 13, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 2 ) ; // меню результатов исследования
  }, ;
    { ;
    'Опред-ние ДНК вирусов папиломы человека', ; // наименование меню
  '70.9.54', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 30, 35, 40, 45 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 34 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 13, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 2 ) ; // меню результатов исследования
  }, ;
    { ;
    'Опред-ние ДНК вирусов папиломы человека', ; // наименование меню
  'A26.20.009.002', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 30, 35, 40, 45 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 34 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 13, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  0, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 2 ) ; // меню результатов исследования
  }, ;
    { ;
    'УЗИ органов малого таза', ; // наименование меню
  '70.9.52', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    0, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 106 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 33, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  0, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 2 ) ; // меню результатов исследования
  }, ;
    { ;
    'Приём врача-уролога первичный', ; // наименование меню
  'B01.053.001', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    0, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  0, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Приём врача-хирурга первичный', ; // наименование меню
  'B01.057.001', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    0, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 112, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  0, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Мужчины I этап 18-49 лет', ; // наименование меню
  '70.9.20', ; // шифр услуги
  1, ;  // этап или список допустимых этапов, пример: {1, 2}
    0, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 145, 30, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Приём врача-уролога (хирурга) повторный', ; // наименование меню
  '70.9.80', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    0, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 108, 112 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 145, 30, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Приём врача-уролога повторный', ; // наименование меню
  'B01.053.002', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    0, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  0, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Приём врача-хирурга повторный', ; // наименование меню
  'B01.057.002', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    0, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 112, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  0, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 1 ) ; // меню результатов исследования
  }, ;
    { ;
    'Спермограмма', ; // наименование меню
  '70.9.81', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 34 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 13, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 2 ) ; // меню результатов исследования
  }, ;
    { ;
    'Спермограмма', ; // наименование меню
  'B03.053.002', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  0, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 2 ) ; // меню результатов исследования
  }, ;
    { ;
    'УЗИ предстательной железы, мошонки', ; // наименование меню
  '70.9.82', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 106 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 33, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 2 ) ; // меню результатов исследования
  }, ;
    { ;
    'УЗИ органов мошонки', ; // наименование меню
  'A04.28.003', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  0, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 2 ) ; // меню результатов исследования
  }, ;
    { ;
    'УЗИ предстательной железы', ; // наименование меню
  'A04.21.001', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  0, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 2 ) ; // меню результатов исследования
  }, ;
    { ;
    'Опред-ние ДНК возбудителей ИППП из урерты методом ПЦР', ; // наименование меню
  '70.9.83', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 34 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 13, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 2 ) ; // меню результатов исследования
  }, ;
    { ;
    'Опред-ние ДНК условно-патогенных генитальных микоплазм из урерты методом ПЦР', ; // наименование меню
  '70.9.84', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 34 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 13, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  0, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  1, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 2 ) ; // меню результатов исследования
  }, ;
    { ;
    'Опред-ние инфекций, передаваемые половым путем', ; // наименование меню
  'A26.21.036.001', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  0, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 2 ) ; // меню результатов исследования
  }, ;
    { ;
    'Опред-ние ДНК условно-патогенных генитальных микоплазм из урерты методом ПЦР', ; // наименование меню
  'A26.21.035.001', ; // шифр услуги
  2, ;  // этап или список допустимых этапов, пример: {1, 2}
    1, ;  // диагностическая услуга (0-нет, 1-да)
  0, ;  // возможен отказ пациента (0 - да, 1 - нет)
    { 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, ;
    30, 31, 32, 33, 34, 35, 36, 37, 38, 39, ;
    40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }, ;  // возраст для мужчин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  0, ; // возраст для женщин (число лет), 1 - все возраста, если сприсок {} то конкретные значения возраста
  1, ;  // ?
    1, ;  // ?
  { 108, 151 }, ; // V002 - классификатор профилей оказанной мед. помощи
  { 2021, 110103, 110303, 110906, 111006, 111905, 112212, 112611, 113418, 113509, 180202 }, ; // V004 классификатор мед. специальностей
  1, ;  // признак услуги ТФОМС/ФФОМС 0 - ТФОМС, 1 - ФФОМС
    '', ;   // соответствующая услуга ФФОМС услуге ТФОМС
  0, ; // показывать в меню - 1, нет - 0
  drz_result_drz( 2 ) ; // меню результатов исследования
  } ;
    }

  Return arr_drz_usl

// 20.07.24
Function save_arr_drz( lkod, mk_data )

  Local arr := {}, i, sk, ta
  Local aliasIsUse := aliasisalreadyuse( 'TPERS' )
  Local oldSelect

  If ! aliasIsUse
    oldSelect := Select()
    r_use( dir_server + 'mo_pers', dir_server + 'mo_pers', 'TPERS' )
  Endif

  If Type( 'mfio' ) == 'C'
    AAdd( arr, { 'mfio', AllTrim( mfio ) } )
  Endif
  If Type( 'mdate_r' ) == 'D'
    AAdd( arr, { 'mdate_r', mdate_r } )
  Endif
  For i := 1 To 5
    sk := lstr( i )
    pole_diag := 'mdiag' + sk
    pole_1pervich := 'm1pervich' + sk
    pole_1stadia := 'm1stadia' + sk
    pole_1dispans := 'm1dispans' + sk
    pole_1dop := 'm1dop' + sk
    pole_1usl := 'm1usl' + sk
    pole_1san := 'm1san' + sk
    pole_d_diag := 'mddiag' + sk
    pole_d_dispans := 'mddispans' + sk
    pole_dn_dispans := 'mdndispans' + sk
    If ! Empty( &pole_diag )
      ta := { &pole_diag, ;
        &pole_1pervich, ;
        &pole_1stadia, ;
        &pole_1dispans }
      If Type( pole_1dop ) == 'N' .and. Type( pole_1usl ) == 'N' .and. Type( pole_1san ) == 'N'
        AAdd( ta, &pole_1dop )
        AAdd( ta, &pole_1usl )
        AAdd( ta, &pole_1san )
      Else
        AAdd( ta, 0 )
        AAdd( ta, 0 )
        AAdd( ta, 0 )
      Endif
      If Type( pole_d_diag ) == 'D' .and. Type( pole_d_dispans ) == 'D'
        AAdd( ta, &pole_d_diag )
        AAdd( ta, &pole_d_dispans )
      Else
        AAdd( ta, CToD( '' ) )
        AAdd( ta, CToD( '' ) )
      Endif
      If Type( pole_dn_dispans ) == 'D'
        AAdd( ta, &pole_dn_dispans )
      Else
        AAdd( ta, CToD( '' ) )
      Endif
      AAdd( arr, { lstr( 10 + i ), ta } )
    Endif
  Next i
  // отказы пациента
  // If ! Empty( arr_usl_otkaz )
  // AAdd( arr, { '19', arr_usl_otkaz } ) // массив
  // Endif
  AAdd( arr, { '30', m1GRUPPA } )    // 'N1',группа здоровья после дисп-ии
  If Type( 'm1prof_ko' ) == 'N'
    AAdd( arr, { '31', m1prof_ko } )    // 'N1',вид проф.консультирования
  Endif
  // if type('m1ot_nasl1') == 'N'
  AAdd( arr, { '40', arr_otklon } ) // массив
  AAdd( arr, { '41', arr_ne_nazn } ) // массив
  AAdd( arr, { '42', arr_ne_vozm } ) // массив
  AAdd( arr, { '45', m1dispans } )
  AAdd( arr, { '46', m1nazn_l } )
  If mk_data >= 0d20210801
    If mtab_v_dopo_na != 0
      If TPERS->( dbSeek( Str( mtab_v_dopo_na, 5 ) ) )
        AAdd( arr, { '47', { m1dopo_na, TPERS->kod } } )
      Else
        AAdd( arr, { '47', { m1dopo_na, 0 } } )
      Endif
    Else
      AAdd( arr, { '47', { m1dopo_na, 0 } } )
    Endif
  Else
    AAdd( arr, { '47', m1dopo_na } )
  Endif
  AAdd( arr, { '48', m1ssh_na } )
  AAdd( arr, { '49', m1spec_na } )
  If mk_data >= 0d20210801
    If mtab_v_sanat != 0
      If TPERS->( dbSeek( Str( mtab_v_sanat, 5 ) ) )
        AAdd( arr, { '50', { m1sank_na, TPERS->kod } } )
      Else
        AAdd( arr, { '50', { m1sank_na, 0 } } )
      Endif
    Else
      AAdd( arr, { '50', { m1sank_na, 0 } } )
    Endif
  Else
    AAdd( arr, { '50', m1sank_na } )
  Endif
  // endif
  If Type( 'm1p_otk' ) == 'N'
    AAdd( arr, { '51', m1p_otk } )
  Endif
  If mk_data >= 0d20210801
    If Type( 'm1napr_v_mo' ) == 'N'
      If mtab_v_mo != 0
        If TPERS->( dbSeek( Str( mtab_v_mo, 5 ) ) )
          AAdd( arr, { '52', { m1napr_v_mo, TPERS->kod } } )
        Else
          AAdd( arr, { '52', { m1napr_v_mo, 0 } } )
        Endif
      Else
        AAdd( arr, { '52', { m1napr_v_mo, 0 } } )
      Endif
    Endif
  Else
    If Type( 'm1napr_v_mo' ) == 'N'
      AAdd( arr, { '52', m1napr_v_mo } )
    Endif
  Endif
  If Type( 'arr_mo_spec' ) == 'A'
    AAdd( arr, { '53', arr_mo_spec } ) // массив
  Endif
  If mk_data >= 0d20210801
    If Type( 'm1napr_stac' ) == 'N'
      If mtab_v_stac != 0
        If TPERS->( dbSeek( Str( mtab_v_stac, 5 ) ) )
          AAdd( arr, { '54', { m1napr_stac, TPERS->kod } } )
        Else
          AAdd( arr, { '54', { m1napr_stac, 0 } } )
        Endif
      Else
        AAdd( arr, { '54', { m1napr_stac, 0 } } )
      Endif
    Endif
  Else
    If Type( 'm1napr_stac' ) == 'N'
      AAdd( arr, { '54', m1napr_stac } )
    Endif
  Endif
  If Type( 'm1profil_stac' ) == 'N'
    AAdd( arr, { '55', m1profil_stac } )
  Endif
  If mk_data >= 0d20210801
    If Type( 'm1napr_reab' ) == 'N'
      If mtab_v_reab != 0
        If TPERS->( dbSeek( Str( mtab_v_reab, 5 ) ) )
          AAdd( arr, { '56', { m1napr_reab, TPERS->kod } } )
        Else
          AAdd( arr, { '56', { m1napr_reab, 0 } } )
        Endif
      Else
        AAdd( arr, { '56', { m1napr_reab, 0 } } )
      Endif
    Endif
  Else
    If Type( 'm1napr_reab' ) == 'N'
      AAdd( arr, { '56', m1napr_reab } )
    Endif
  Endif
  If Type( 'm1profil_kojki' ) == 'N'
    AAdd( arr, { '57', m1profil_kojki } )
  Endif

  If ! aliasIsUse
    TPERS->( dbCloseArea() )
    Select( oldSelect )
  Endif

  save_arr_dispans( lkod, arr )

  Return Nil

// 20.07.24
Function read_arr_drz( lkod, is_all )

  Local arr, i, sk
  Local aliasIsUse := aliasisalreadyuse( 'TPERS' )
  Local oldSelect

  If ! aliasIsUse
    oldSelect := Select()
    r_use( dir_server + 'mo_pers', , 'TPERS' )
  Endif

  Private mvar
  arr := read_arr_dispans( lkod )
  Default is_all To .t.
  For i := 1 To Len( arr )
    If ValType( arr[ i ] ) == 'A' .and. ValType( arr[ i, 1 ] ) == 'C'
      Do Case
      Case is_all .and. eq_any( arr[ i, 1 ], '11', '12', '13', '14', '15' ) .and. ;
          ValType( arr[ i, 2 ] ) == 'A' .and. Len( arr[ i, 2 ] ) >= 7
        sk := Right( arr[ i, 1 ], 1 )
        pole_diag := 'mdiag' + sk
        pole_1pervich := 'm1pervich' + sk
        pole_1stadia := 'm1stadia' + sk
        pole_1dispans := 'm1dispans' + sk
        pole_1dop := 'm1dop' + sk
        pole_1usl := 'm1usl' + sk
        pole_1san := 'm1san' + sk
        pole_d_diag := 'mddiag' + sk
        pole_d_dispans := 'mddispans' + sk
        pole_dn_dispans := 'mdndispans' + sk
        If ValType( arr[ i, 2, 1 ] ) == 'C'
          &pole_diag := arr[ i, 2, 1 ]
        Endif
        If ValType( arr[ i, 2, 2 ] ) == 'N'
          &pole_1pervich := arr[ i, 2, 2 ]
        Endif
        If ValType( arr[ i, 2, 3 ] ) == 'N'
          &pole_1stadia := arr[ i, 2, 3 ]
        Endif
        If ValType( arr[ i, 2, 4 ] ) == 'N'
          &pole_1dispans := arr[ i, 2, 4 ]
        Endif
        If ValType( arr[ i, 2, 5 ] ) == 'N' .and. Type( pole_1dop ) == 'N'
          &pole_1dop := arr[ i, 2, 5 ]
        Endif
        If ValType( arr[ i, 2, 6 ] ) == 'N' .and. Type( pole_1usl ) == 'N'
          &pole_1usl := arr[ i, 2, 6 ]
        Endif
        If ValType( arr[ i, 2, 7 ] ) == 'N' .and. Type( pole_1san ) == 'N'
          &pole_1san := arr[ i, 2, 7 ]
        Endif
        If Len( arr[ i, 2 ] ) >= 8 .and. ValType( arr[ i, 2, 8 ] ) == 'D' .and. Type( pole_d_diag ) == 'D'
          &pole_d_diag := arr[ i, 2, 8 ]
        Endif
        If Len( arr[ i, 2 ] ) >= 9 .and. ValType( arr[ i, 2, 9 ] ) == 'D' .and. Type( pole_d_dispans ) == 'D'
          &pole_d_dispans := arr[ i, 2, 9 ]
        Endif
        If Len( arr[ i, 2 ] ) >= 10 .and. ValType( arr[ i, 2, 10 ] ) == 'D' .and. Type( pole_dn_dispans ) == 'D'
          &pole_dn_dispans := arr[ i, 2, 10 ]
        Endif
        // Case is_all .and. arr[ i, 1 ] == '19' .and. ValType( arr[ i, 2 ] ) == 'A'
        // arr_usl_otkaz := arr[ i, 2 ]
      Case arr[ i, 1 ] == '30' .and. ValType( arr[ i, 2 ] ) == 'N'
        // m1GRUPPA := arr[i,2]
      Case arr[ i, 1 ] == '31' .and. ValType( arr[ i, 2 ] ) == 'N'
        m1prof_ko := arr[ i, 2 ]
      Case is_all .and. arr[ i, 1 ] == '40' .and. ValType( arr[ i, 2 ] ) == 'A'
        arr_otklon := arr[ i, 2 ]
      Case is_all .and. arr[ i, 1 ] == '41' .and. ValType( arr[ i, 2 ] ) == 'A'
        arr_ne_nazn := AClone( arr[ i, 2 ] )
      Case is_all .and. arr[ i, 1 ] == '42' .and. ValType( arr[ i, 2 ] ) == 'A'
        arr_ne_vozm := AClone( arr[ i, 2 ] )
      Case arr[ i, 1 ] == '45' .and. ValType( arr[ i, 2 ] ) == 'N'
        m1dispans  := arr[ i, 2 ]
      Case arr[ i, 1 ] == '46' .and. ValType( arr[ i, 2 ] ) == 'N'
        m1nazn_l   := arr[ i, 2 ]
      Case arr[ i, 1 ] == '47'
        If ValType( arr[ i, 2 ] ) == 'N'
          m1dopo_na  := arr[ i, 2 ]
        Elseif ValType( arr[ i, 2 ] ) == 'A'
          m1dopo_na  := arr[ i, 2 ][ 1 ]
          If arr[ i, 2 ][ 2 ] > 0
            TPERS->( dbGoto( arr[ i, 2 ][ 2 ] ) )
            mtab_v_dopo_na := TPERS->tab_nom
          Endif
        Endif
      Case arr[ i, 1 ] == '48' .and. ValType( arr[ i, 2 ] ) == 'N'
        m1ssh_na   := arr[ i, 2 ]
      Case arr[ i, 1 ] == '49' .and. ValType( arr[ i, 2 ] ) == 'N'
        m1spec_na  := arr[ i, 2 ]
      Case arr[ i, 1 ] == '50'
        If ValType( arr[ i, 2 ] ) == 'N'
          m1sank_na  := arr[ i, 2 ]
        Elseif ValType( arr[ i, 2 ] ) == 'A'
          m1sank_na  := arr[ i, 2 ][ 1 ]
          If arr[ i, 2 ][ 2 ] > 0
            TPERS->( dbGoto( arr[ i, 2 ][ 2 ] ) )
            mtab_v_sanat := TPERS->tab_nom
          Endif
        Endif
      Case arr[ i, 1 ] == '51' .and. ValType( arr[ i, 2 ] ) == 'N'
        m1p_otk  := arr[ i, 2 ]
      Case arr[ i, 1 ] == '52'
        If ValType( arr[ i, 2 ] ) == 'N'
          m1napr_v_mo  := arr[ i, 2 ]
        Elseif ValType( arr[ i, 2 ] ) == 'A'
          m1napr_v_mo  := arr[ i, 2 ][ 1 ]
          If arr[ i, 2 ][ 2 ] > 0
            TPERS->( dbGoto( arr[ i, 2 ][ 2 ] ) )
            mtab_v_mo := TPERS->tab_nom
          Endif
        Endif
      Case arr[ i, 1 ] == '53' .and. ValType( arr[ i, 2 ] ) == 'A'
        arr_mo_spec := arr[ i, 2 ]
      Case arr[ i, 1 ] == '54'
        If ValType( arr[ i, 2 ] ) == 'N'
          m1napr_stac := arr[ i, 2 ]
        Elseif ValType( arr[ i, 2 ] ) == 'A'
          m1napr_stac := arr[ i, 2 ][ 1 ]
          If arr[ i, 2 ][ 2 ] > 0
            TPERS->( dbGoto( arr[ i, 2 ][ 2 ] ) )
            mtab_v_stac := TPERS->tab_nom
          Endif
        Endif
      Case arr[ i, 1 ] == '55' .and. ValType( arr[ i, 2 ] ) == 'N'
        m1profil_stac := arr[ i, 2 ]
      Case arr[ i, 1 ] == '56'
        If ValType( arr[ i, 2 ] ) == 'N'
          m1napr_reab := arr[ i, 2 ]
        Elseif ValType( arr[ i, 2 ] ) == 'A'
          m1napr_reab := arr[ i, 2 ][ 1 ]
          If arr[ i, 2 ][ 2 ] > 0
            TPERS->( dbGoto( arr[ i, 2 ][ 2 ] ) )
            mtab_v_reab := TPERS->tab_nom
          Endif
        Endif
      Case arr[ i, 1 ] == '57' .and. ValType( arr[ i, 2 ] ) == 'N'
        m1profil_kojki := arr[ i, 2 ]
      Endcase
    Endif
  Next

  If ! aliasIsUse
    TPERS->( dbCloseArea() )
    Select( oldSelect )
  Endif

  Return Nil

// 17.04.24
Function get_array_plan_drz( nyear, mkod )

  // nyear - год на который нужен план
  // mkod - код мед учреждения
  Local nameArr := {}
  Local funcGetPZ, j, arr := {}

  If nyear >= 2024
    funcGetPZ := 'get_array_plan_drz_' + last_digits_year( nyear ) + '()'
    nameArr := &funcGetPZ
    If ( j := AScan( nameArr, {| x | x[ 1 ] == mkod } ) ) > 0
      AAdd( arr, nameArr[ j, 2 ] )  // план для мужчин
      AAdd( arr, nameArr[ j, 3 ] )  // план для женщин
    Endif
  Endif

  Return arr

// 17.04.24
Function get_array_plan_drz_24()

  Local arr

  arr := { ;
    { '340033', 1545, 1930, 'ГУЗ Поликлиника № 4' }, ;
    { '340041', 2532, 3467, 'ГУЗ Клиническая поликлиника № 28' }, ;
    { '340042', 1029, 1318, 'ГУЗ Поликлиника № 30' }, ;
    { '340050', 1597, 2214, 'ГУЗ Поликлиника № 5' }, ;
    { '340055', 1502, 1695, 'ГУЗ Больница № 16' }, ;
    { '340066', 2814, 3902, 'ГУЗ Поликлиника № 2' }, ;
    { '340075', 977, 1152, 'ГУЗ Клиническая больница № 11' }, ;
    { '340056', 991, 1028, 'ГУЗ Больница №22' }, ;
    { '340083', 2290, 3277, 'ГУЗ КП № 1' }, ;
    { '340104', 1733, 1744, 'ГБУЗ ГКБ № 1 им. С.З.Фишера' }, ;
    { '340096', 1473, 1946, 'ГАУЗ КП № 3' }, ;
    { '340106', 1593, 1612, 'ГБУЗ Городская больница № 2' }, ;
    { '340117', 306, 272, 'ГБУЗ Алексеевская ЦРБ' }, ;
    { '340118', 583, 373, 'ГБУЗ Быковская ЦРБ' }, ;
    { '340119', 1378, 1343, 'ГБУЗ Городищенская ЦРБ' }, ;
    { '340158', 297, 239, 'ГБУ ЦРБ Руднянского муниципального района' }, ;
    { '340120', 303, 272, 'ГБУЗ Даниловская ЦРБ' }, ;
    { '340126', 656, 602, 'ГБУЗ Иловлинская ЦРБ' }, ;
    { '340127', 1009, 1104, 'ГБУЗ Калачевская ЦРБ' }, ;
    { '340136', 314, 255, 'ГБУЗ Киквидзенская ЦРБ' }, ;
    { '340138', 604, 731, 'ГБУЗ Котельниковская ЦРБ' }, ;
    { '340157', 395, 342, 'ГБУЗ Кумылженская ЦРБ' }, ;
    { '340142', 588, 540, 'ГБУЗ Ленинская ЦРБ' }, ;
    { '340148', 264, 257, 'ГБУЗ Нехаевская ЦРБ' }, ;
    { '340149', 672, 451, 'ГБУЗ Николаевская ЦРБ' }, ;
    { '340150', 722, 654, 'ГБУЗ Новоаннинская ЦРБ' }, ;
    { '340151', 476, 447, 'ГБУЗ Новониколаевская ЦРБ' }, ;
    { '340152', 397, 452, 'ГБУЗ Октябрьская ЦРБ' }, ;
    { '340155', 807, 755, 'ГБУЗ Палласовская ЦРБ' }, ;
    { '340159', 791, 802, 'ГБУЗ Светлоярская ЦРБ' }, ;
    { '340160', 428, 341, 'ГБУЗ Серафимовичская ЦРБ' }, ;
    { '340161', 1095, 1092, 'ГБУЗ Среднеахтубинская ЦРБ' }, ;
    { '340163', 387, 359, 'ГБУЗ Старополтавская ЦРБ' }, ;
    { '340169', 927, 905, 'ГБУЗ Фроловская ЦРБ' }, ;
    { '340121', 514, 538, 'ГБУЗ ЦРБ Дубовского муниципального района' }, ;
    { '340137', 344, 301, 'ГБУЗ ЦРБ Клетского муниципального района' }, ;
    { '340153', 329, 288, 'ГБУЗ ЦРБ Ольховского муниципального района' }, ;
    { '340164', 668, 583, 'ГБУЗ ЦРБ Суровикинского муниципального района' }, ;
    { '340170', 319, 290, 'ГБУЗ Чернышковская ЦРБ' }, ;
    { '340122', 560, 543, 'ГБУЗ Еланская ЦРБ' }, ;
    { '340167', 1127, 1309, 'ГБУЗ Урюпинская ЦРБ' }, ;
    { '340140', 645, 629, 'ГБУЗ ЦРБ Котовского муниципального района' }, ;
    { '340124', 821, 699, 'ГУЗ Жирновская ЦРБ' }, ;
    { '340171', 805, 745, 'ЧУЗ КБ РЖД-Медицина г.Волгоград' }, ;
    { '340129', 944, 1024, 'ГБУЗ ЦГБ' }, ;
    { '340057', 915, 987, 'ГУЗ КБСМП № 15' }, ;
    { '340074', 909, 1194, 'КБ СМП № 7' }, ;
    { '340105', 1098, 992, 'ГБУЗ Городская клиническая больница №3' }, ;
    { '340109', 1338, 1643, 'ГБУЗ Городская поликлиника №5' } ;
    }

  Return arr

// 15.01.25
Function get_array_plan_drz_25()

  Local arr

  arr := { ;
    { '340033', 1545, 1930, 'ГУЗ Поликлиника № 4' }, ;
    { '340041', 2532, 3467, 'ГУЗ Клиническая поликлиника № 28' }, ;
    { '340042', 1029, 1318, 'ГУЗ Поликлиника № 30' }, ;
    { '340050', 1597, 2214, 'ГУЗ Поликлиника № 5' }, ;
    { '340055', 1502, 1695, 'ГУЗ Больница № 16' }, ;
    { '340066', 2814, 3902, 'ГУЗ Поликлиника № 2' }, ;
    { '340075', 977, 1152, 'ГУЗ Клиническая больница № 11' }, ;
    { '340056', 991, 1028, 'ГУЗ Больница №22' }, ;
    { '340083', 2290, 3277, 'ГУЗ КП № 1' }, ;
    { '340104', 1733, 1744, 'ГБУЗ ГКБ № 1 им. С.З.Фишера' }, ;
    { '340096', 1473, 1946, 'ГАУЗ КП № 3' }, ;
    { '340106', 1593, 1612, 'ГБУЗ Городская больница № 2' }, ;
    { '340117', 306, 272, 'ГБУЗ Алексеевская ЦРБ' }, ;
    { '340118', 583, 373, 'ГБУЗ Быковская ЦРБ' }, ;
    { '340119', 1378, 1343, 'ГБУЗ Городищенская ЦРБ' }, ;
    { '340158', 297, 239, 'ГБУ ЦРБ Руднянского муниципального района' }, ;
    { '340120', 303, 272, 'ГБУЗ Даниловская ЦРБ' }, ;
    { '340126', 656, 602, 'ГБУЗ Иловлинская ЦРБ' }, ;
    { '340127', 1009, 1104, 'ГБУЗ Калачевская ЦРБ' }, ;
    { '340136', 314, 255, 'ГБУЗ Киквидзенская ЦРБ' }, ;
    { '340138', 604, 731, 'ГБУЗ Котельниковская ЦРБ' }, ;
    { '340157', 395, 342, 'ГБУЗ Кумылженская ЦРБ' }, ;
    { '340142', 588, 540, 'ГБУЗ Ленинская ЦРБ' }, ;
    { '340148', 264, 257, 'ГБУЗ Нехаевская ЦРБ' }, ;
    { '340149', 672, 451, 'ГБУЗ Николаевская ЦРБ' }, ;
    { '340150', 722, 654, 'ГБУЗ Новоаннинская ЦРБ' }, ;
    { '340151', 476, 447, 'ГБУЗ Новониколаевская ЦРБ' }, ;
    { '340152', 397, 452, 'ГБУЗ Октябрьская ЦРБ' }, ;
    { '340155', 807, 755, 'ГБУЗ Палласовская ЦРБ' }, ;
    { '340159', 791, 802, 'ГБУЗ Светлоярская ЦРБ' }, ;
    { '340160', 428, 341, 'ГБУЗ Серафимовичская ЦРБ' }, ;
    { '340161', 1095, 1092, 'ГБУЗ Среднеахтубинская ЦРБ' }, ;
    { '340163', 387, 359, 'ГБУЗ Старополтавская ЦРБ' }, ;
    { '340169', 927, 905, 'ГБУЗ Фроловская ЦРБ' }, ;
    { '340121', 514, 538, 'ГБУЗ ЦРБ Дубовского муниципального района' }, ;
    { '340137', 344, 301, 'ГБУЗ ЦРБ Клетского муниципального района' }, ;
    { '340153', 329, 288, 'ГБУЗ ЦРБ Ольховского муниципального района' }, ;
    { '340164', 668, 583, 'ГБУЗ ЦРБ Суровикинского муниципального района' }, ;
    { '340170', 319, 290, 'ГБУЗ Чернышковская ЦРБ' }, ;
    { '340122', 560, 543, 'ГБУЗ Еланская ЦРБ' }, ;
    { '340167', 1127, 1309, 'ГБУЗ Урюпинская ЦРБ' }, ;
    { '340140', 645, 629, 'ГБУЗ ЦРБ Котовского муниципального района' }, ;
    { '340124', 821, 699, 'ГУЗ Жирновская ЦРБ' }, ;
    { '340171', 805, 745, 'ЧУЗ КБ РЖД-Медицина г.Волгоград' }, ;
    { '340129', 944, 1024, 'ГБУЗ ЦГБ' }, ;
    { '340057', 915, 987, 'ГУЗ КБСМП № 15' }, ;
    { '340074', 909, 1194, 'КБ СМП № 7' }, ;
    { '340105', 1098, 992, 'ГБУЗ Городская клиническая больница №3' }, ;
    { '340109', 1338, 1643, 'ГБУЗ Городская поликлиника №5' } ;
    }

  Return arr

// 16.01.25
Function get_plan_drz( mYear, kod_mo )

  // plan_drz - Получить плановые показатели по диспансеризации репродуктивного здоровья
  //  1 - KOL_M(N) 2 - KOL_F(N)
  Local arr
  local db
  local aTable

  local s

  kod_mo := AllTrim( kod_mo )
  arr := {}
  db := openSQL_DB()
  s := 'SELECT kol_m, kol_f FROM plan_drz WHERE year=' + str( mYear, 4 ) + ' and kod_mo=' + kod_mo
  aTable := sqlite3_get_table( db, s )
    
  if len( aTable ) > 1
    aadd( arr, val( aTable[ 2, 1 ] ) ) // мужчины
    aadd( arr, val( aTable[ 2, 2 ] ) ) // женщины
  else
    arr := { 0, 0 } // нет данных
  endif
  db := nil
  return arr