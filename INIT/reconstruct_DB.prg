#include 'chip_mo.ch'

// 11.07.24 реконстукция подсистемы паролей
function Reconstruct_Security(is_local_version)
  Local base1 := {;
     {'P1',      'C',  20,   0}, ; // Ф.И.О.
     {'P2',      'N',   1,   0}, ; // тип доступа
     {'P3',      'C',  10,   0}, ; // пароль
     {'P4',      'C',   1,   0}, ; // код отделения [ chr(kod) ]
     {'P5',      'C',  20,   0}, ; // должность
     {'P6',      'N',   1,   0}, ; // Группа КЭК (1-3)
     {'P7',      'C',  10,   0}, ; // пароль1 для фискального регистратора
     {'P8',      'C',  10,   0}, ; // пароль2 для фискального регистратора
     {'INN',     'C',  12,   0}, ; // ИНН кассира
     {'IDROLE',  'N',   4,   0}, ;  // ID группы пользователей
     {'DOV_DATA','C',   8,   0}, ; // Дата доверенности кассира 
     {'DOV_NOM', 'C',  20,   0}; // Номер доверенности кассира
    }
  Local roles := {;
    { 'NAME',    'C',  30,   0 }, ; // название роли
    { 'ACL_TASK','C',  255,   0 }, ; // доступ к задачам
    { 'ACL_DEP', 'C',  255,   0 } ; // доступ к учреждениям
    }
  Local mo_oper := {;
    {'PO',      'C',   1,   0}, ; // код оператора asc(po)
    {'PD',      'C',   4,   0}, ; // дата ввода c4tod(pd)
    {'V0',      'C',   3,   0}, ; // добавление в регистратуре
    {'VR',      'C',   3,   0}, ; // полные реквизиты      \
    {'VK',      'C',   3,   0}, ; // реквизиты из картотеки => ft_unsqzn(V..., 6)
    {'VU',      'C',   3,   0}, ; // ввод услуг            /
    {'TASK',    'N',   1,   0}, ; // код задачи            /
    {'CS',      'C',   4,   0}, ; // количество введённых символов
    {'APP_EDIT', 'N',   1,   0} ;  // 0 - добавление, 1 - редактирование
   }
  Local mo_opern := {;
    {'PD',      'C',   4,   0}, ; // дата ввода c4tod(pd)
    {'PO',      'C',   1,   0}, ; // код оператора asc(po)
    {'PT',      'C',   1,   0}, ; // код задачи
    {'TP',      'C',   1,   0}, ; // тип (1-карточка, 2-л/у, 3-услуги)
    {'AE',      'C',   1,   0}, ; // 1-добавление, 2-редактирование, 3-удаление
    {'KK',      'C',   3,   0}, ; // кол-во (карточек, л/у или услуг)
    {'KP',      'C',   3,   0} ;  // количество введённых полей
  }

  Local mo_updateDB := {;
    {'VER',     'N',   6,   0}, ; // номер версии БД
    {'DONE',    'N',   1,   0} ; // переход выполнен - 1, нет - 0
  }

  if ControlBases(1, _version()) // если необходимо
    if G_SLock1Task(sem_task, sem_vagno)  // запрет доступа всем
      // реконструкция файлов доступа к системе и обновлений БД
      if !is_local_version .or. hb_FileExists(dir_server + 'base1' + sdbf)
        reconstruct(dir_server + 'base1', base1, , , .t.)
        reconstruct(dir_server + 'mo_oper', mo_oper, 'index_base("mo_oper")', , .t.)
        reconstruct(dir_server + 'mo_opern', mo_opern, 'index_base("mo_opern")', , .t.)
        reconstruct(dir_server + 'roles', roles, , , .t.)
        reconstruct(dir_server + 'ver_updateDB', mo_updateDB, , , .t.)
      endif
      G_SUnLock(sem_vagno)
    endif
  endif

  
  return nil

// 19.08.24 реконстукция баз данных
Function Reconstruct_DB( is_local_version, is_create )
     
  Local base1 := {;
    {'P1',      'C',  20,   0}, ; // Ф.И.О.
    {'P2',      'N',   1,   0}, ; // тип доступа
    {'P3',      'C',  10,   0}, ; // пароль
    {'P4',      'C',   1,   0}, ; // код отделения [ chr(kod) ]
    {'P5',      'C',  20,   0}, ; // должность
    {'P6',      'N',   1,   0}, ; // Группа КЭК (1-3)
    {'P7',      'C',  10,   0}, ; // пароль1 для фискального регистратора
    {'P8',      'C',  10,   0}, ; // пароль2 для фискального регистратора
    {'INN',     'C',  12,   0}, ; // ИНН кассира
    {'IDROLE',  'N',   4,   0}, ;  // ID группы пользователей
    {'DOV_DATA','C',   8,   0}, ; // Дата доверенности кассира
    {'DOV_NOM', 'C',  20,   0}; // Номер доверенности кассира
  }
  Local roles := {;
    { 'NAME',    'C',  30,   0 }, ; // название роли
    { 'ACL_TASK','C',  255,   0 }, ; // доступ к задачам
    { 'ACL_DEP', 'C',  255,   0 } ; // доступ к учреждениям
  }
  Local mo_oper := {;
    {'PO',      'C',   1,   0}, ; // код оператора asc(po)
    {'PD',      'C',   4,   0}, ; // дата ввода c4tod(pd)
    {'V0',      'C',   3,   0}, ; // добавление в регистратуре
    {'VR',      'C',   3,   0}, ; // полные реквизиты      \
    {'VK',      'C',   3,   0}, ; // реквизиты из картотеки => ft_unsqzn(V..., 6)
    {'VU',      'C',   3,   0}, ; // ввод услуг            /
    {'TASK',    'N',   1,   0}, ; // код задачи            /
    {'CS',      'C',   4,   0}, ; // количество введённых символов
    {'APP_EDIT', 'N',   1,   0} ;  // 0 - добавление, 1 - редактирование
  }
  Local mo_opern := {;
    {'PD',      'C',   4,   0}, ; // дата ввода c4tod(pd)
    {'PO',      'C',   1,   0}, ; // код оператора asc(po)
    {'PT',      'C',   1,   0}, ; // код задачи
    {'TP',      'C',   1,   0}, ; // тип (1-карточка, 2-л/у, 3-услуги)
    {'AE',      'C',   1,   0}, ; // 1-добавление, 2-редактирование, 3-удаление
    {'KK',      'C',   3,   0}, ; // кол-во (карточек, л/у или услуг)
    {'KP',      'C',   3,   0} ;  // количество введённых полей
  }
  Local kartotek := {;
     {'KOD'      ,   'N',     7,     0}, ;
     {'FIO'      ,   'C',    50,     0}, ; // Ф.И.О. больного
     {'POL'      ,   'C',     1,     0}, ; // пол
     {'DATE_R'   ,   'D',     8,     0}, ; // дата рождения больного
     {'VZROS_REB',   'N',     1,     0}, ; // 0-взрослый, 1-ребенок, 2-подросток
     {'ADRES'    ,   'C',    50,     0}, ; // адрес больного
     {'MR_DOL'   ,   'C',    50,     0}, ; // место работы или причина безработности
     {'RAB_NERAB',   'N',     1,     0}, ; // 0-работающий, 1-неработающий
     {'KOMU'     ,   'N',     1,     0}, ; // от 1 до 5
     {'STR_CRB'  ,   'N',     2,     0}, ; // код стр.компании, комитета и т.п.
     {'ZA_SMO'   ,   'N',     2,     0}, ; // 0-нет, '-8'-полис недействителен, '-9'-ошибки в реквизитах
     {'POLIS'    ,   'C',    17,     0}, ; // серия и номер страхового полиса
     {'SROK_POLIS',  'C',     4,     0}, ; // срок действия полиса
     {'MI_GIT'   ,   'N',     1,     0}, ; // 0-нет, 9-рабочее поле KOMU
     {'RAJON_GIT',   'N',     2,     0}, ; // код района места жительства
     {'MEST_INOG',   'N',     1,     0}, ; // 0-нет, 9-отдельные ФИО
     {'RAJON'    ,   'N',     2,     0}, ; // код района финансирования
     {'BUKVA'    ,   'C',     1,     0}, ; // одна буква
     {'UCHAST'   ,   'N',     2,     0}, ; // номер участка
     {'KOD_VU'   ,   'N',     5,     0}, ; // код в участке
     {'SNILS'    ,   'C',    11,     0}, ;
     {'DEATH',     'N',  1, 0}, ; // 0-нет, 1-умер по результатам сверки
     {'kod_tf',    'N', 10, 0}, ; // код по кодировке ТФОМС
     {'kod_mis',   'C', 20, 0}, ; // ЕНП - единый номер полиса ОМС
     {'kod_AK',    'C', 10, 0}, ; // собственный номер амбулаторной карты
     {'TIP_PR',    'N',  1, 0}, ; // тип/статус прикрепления 1-из WQ, 2-из реестра СП и ТК, 3-из файла прикрепления, 4-открепление, 5-сверка
     {'MO_PR',     'C',  6, 0}, ; // код МО прикрепления
     {'DATE_PR',   'D',  8, 0}, ; // дата прикрепления
     {'SNILS_VR',  'C', 11, 0}, ; // СНИЛС участкового врача
     {'PC1',       'C', 10, 0}, ; // при добавлении:kod_polzovat+c4sys_date+hour_min(seconds())
     {'PC2',       'C', 10, 0}, ; // 0-нет, 1-умер по результатам сверки
     {'PC3',       'C', 10, 0}, ; //
     {'PN1',       'N', 10, 0}, ; // если 30 - участник СВО
     {'PN2',       'N', 10, 0}, ; //
     {'PN3',       'N', 10, 0} ;  // 
    }
  Local kartotek_ := {;
     {'VPOLIS',    'N',  1, 0}, ; // вид полиса (от 1 до 3);1-старый, 2-врем., 3-новый;по умолчанию 1 - старый
     {'SPOLIS',    'C', 10, 0}, ; // серия полиса;;для наших - разделить по пробелу
     {'NPOLIS',    'C', 20, 0}, ; // номер полиса;;'для иногородних - вынуть из ''k_inog'' и разделить'
     {'SMO',       'C',  5, 0}, ; // реестровый номер СМО;;преобразовать из старых кодов в новые, иногродние = 34
     {'beg_polis', 'C',  4, 0}, ; // дата начала действия полиса ;в формате dtoc4();'поле ''beg_polis'' из файла ''k_inog'' для иногородних'
     {'strana',    'C',  3, 0}, ; // гражданство пациента (страна);выбор из справочника стран;'поле ''strana'' из файла ''k_inog'' для иногородних, для остальных пусто = РФ'
     {'gorod_selo', 'N',  1, 0}, ; // житель?;1-город, 2-село, 3-рабочий поселок;'поле ''gorod_selo'' из файла ''pp_human'''
     {'vid_ud',    'N',  2, 0}, ; // вид удостоверения личности;по кодировке ФФОМС;'PKRT_VID из ''APP_BASE'''
     {'ser_ud',    'C', 10, 0}, ; // серия удостоверения личности;;'PKRT_SER из ''APP_BASE'''
     {'nom_ud',    'C', 20, 0}, ; // номер удостоверения личности;;'PKRT_NOM из ''APP_BASE'''
     {'kemvyd',    'N',  6, 0}, ; // кем выдан документ;'справочник ''s_kemvyd''';'PKRT_KEM из ''APP_BASE'''
     {'kogdavyd',  'D',  8, 0}, ; // когда выдан документ;;'PKRT_KOGDA из ''APP_BASE'''
     {'kategor',   'N',  3, 0}, ; // категория пациента;выбор из меню??;'PKRT_KATEG из ''APP_BASE'''
     {'kategor2',  'N',  3, 0}, ; // категория пациента (собственная для МО);выбор из меню??;'PKRT_KATEG из ''APP_BASE'', если в lpu.ini есть свои категории'
     {'mesto_r',   'C', 100, 0}, ; // место рождения;;
     {'okatog',    'C', 11, 0}, ; // код места жительства по ОКАТО;выбор из справочника ОКАТО;попытаться сформировать для нашей области по коду района
     {'okatop',    'C', 11, 0}, ; // код места пребывания по ОКАТО;;
     {'adresp',    'C', 50, 0}, ; // адрес места пребывания;сюда будем заносить остаток адреса места пребывания;
     {'DMS_SMO',   'N',  3, 0}, ; // код СМО ДМС;;
     {'DMS_POLIS', 'C', 17, 0}, ; // код полиса ДМС;;
     {'KVARTAL',   'C',  5, 0}, ; // квартал для Волжского;на будущее;
     {'KVARTAL_D', 'C',  5, 0}, ; // дом в квартале Волжского;на будущее;
     {'PHONE_H',   'C', 11, 0}, ; // телефон домашний;;
     {'PHONE_M',   'C', 11, 0}, ; // телефон мобильный;;
     {'PHONE_W',   'C', 11, 0}, ; // телефон рабочий;;
     {'KOD_LGOT',  'C',  3, 0}, ; // код льготы по ДЛО;;
     {'IS_REGISTR', 'N',  1, 0}, ; // есть ли в регистре ДЛО;0-нет, 1-есть;
     {'PENSIONER', 'N',  1, 0}, ; // является пенсионером?;0-нет, 1-да;
     {'INVALID',   'N',  1, 0}, ; // инвалидность;0-нет, 1, 2, 3-степень, 4-инвалид детства;
     {'INVALID_ST', 'N',  1, 0}, ; // степень инвалидности;1 или 2;
     {'BLOOD_G',   'N',  1, 0}, ; // группа крови;от 1 до 4;
     {'BLOOD_R',   'C',  1, 0}, ; // резус-фактор;'+' или '-';
     {'WEIGHT',    'N',  3, 0}, ; // вес в кг;;
     {'HEIGHT',    'N',  3, 0}, ; // рост в см;;
     {'WHERE_KART', 'N',  1, 0}, ; // где амбулаторная карта;0-в регистратуре, 1-у врача, 2-на руках;
     {'GR_RISK',   'N',  3, 0}, ; // группа риска по стандарту горздрава;;если есть REGI_FL.DBF, то взять из него
     {'DATE_FL',   'C',  4, 0}, ; // дата последней флюорогрфии;;если есть REGI_FL.DBF, то взять из него
     {'DATE_MR',   'C',  4, 0}, ; // дата последнего муниципального рецепта;;
     {'DATE_FR',   'C',  4, 0} ;  // дата последнего федерального рецепта;;
    }
  Local kartotek2 := {;
     {'kod_tf',    'N', 10, 0}, ; // код по кодировке ТФОМС
     {'kod_mis',   'C', 20, 0}, ; // ЕНП - единый номер полиса ОМС
     {'kod_AK',    'C', 10, 0}, ; // собственный номер амбулаторной карты (КМИС/ЛИС)
     {'TIP_PR',    'N',  1, 0}, ; // тип/статус прикрепления 1-из WQ, 2-из реестра СП и ТК, 3-из файла прикрепления, 4-открепление, 5-сверка
     {'MO_PR',     'C',  6, 0}, ; // код МО прикрепления
     {'DATE_PR',   'D',  8, 0}, ; // дата прикрепления к врачу
     {'SNILS_VR',  'C', 11, 0}, ; // СНИЛС участкового врача
     {'PC1',       'C', 10, 0}, ; // при добавлении:kod_polzovat+c4sys_date+hour_min(seconds())
     {'PC2',       'C', 10, 0}, ; // 0-нет, 1-умер по результатам сверки
     {'PC3',       'C', 10, 0}, ; //
     {'PC4',       'C', 10, 0}, ; // дата прикрепления к МО
     {'PC5',       'C', 10, 0}, ; //
     {'PN1',       'N', 10, 0}, ; //
     {'PN2',       'N', 10, 0}, ; //
     {'PN3',       'N', 10, 0} ;  //
    }
  Local mo_kinos := {;  // справочник сведений об иностранце (при картотеке)
     {'KOD'      ,   'N',     7,     0}, ; // код (номер записи по БД kartotek)
     {'OSN_PREB',    'N',     2,     0}, ; // основание пребывания в РФ
     {'ADRES_PRO',   'C',    60,     0}, ; // адрес проживания в Волг.обл.
     {'MIGR_KARTA',  'C',    20,     0}, ; // данные миграционной карты
     {'DATE_P_G',    'D',     8,     0}, ; // дата пересечения границы
     {'DATE_R_M',    'D',     8,     0} ;  // дата регистрации в миграционной службе
    }
  Local _kart_inv := {;
     {'KOD'      ,   'N',     7,     0}, ; // код (номер записи по БД kartotek)
     {'DATE_INV',    'D',     8,     0}, ; // дата первичного установления инвалидности
     {'PRICH_INV',   'N',     2,     0}, ; // причина первичного установления инвалидности
     {'DIAG_INV',    'C',     5,     0} ;  //
    }
  Local _kart_et := {;
    {'kod_tf',    'N', 10, 0}, ; // код по кодировке ТФОМС
    {'kod_mis',   'C', 16, 0}, ; // ЕНП - единый номер полиса ОМС
    {'DATE_PR',   'D',  8, 0}, ; // дата прикрепления
    {'UCHAST' ,   'N',  2, 0}, ; // номер участка
    {'MO_PR',     'C',  6, 0}, ; // МО прикрепления
    {'SNILS_VR',  'C', 11, 0}, ; // СНИЛС участкового врача
    {'DEATH',     'N',  1, 0}, ; // 0-нет, 1-умер по результатам сверки
    {'PC2',       'C',  1, 0}, ; // 0-нет, 1-умер по результатам сверки
    {'kol',       'N',  6, 0} ;  // кол-во записей в картотеке с данным PID
  }
  Local _kart_etk := {;
    {'kod_tf',    'N', 10, 0}, ; // код по кодировке ТФОМС
    {'KOD_K' ,    'N',  7, 0}, ; // код по картотеке
    {'PRIOR',     'N',  1, 0} ;  // 1-из ответа на сверку, 2-из E2...
  }
  Local mo_kartp := {; // список прикреплений по пациенту во времени
     {'KOD_K',    'N', 7, 0}, ; // код пациента по файлу 'kartotek'
     {'MO_PR',    'C', 6, 0}, ; // код МО прикрепления
     {'D_PRIK',   'D', 8, 0}, ; // дата прикрепления
     {'SNILS_VR', 'C', 11, 0}, ; // СНИЛС участкового врача
     {'TIP_PR',   'N', 1, 0}, ; // тип/статус прикрепления 3-из файла прикрепления, 4-открепление, 5-сверка
     {'DFILE',    'D', 8, 0} ;  // дата создания файла
    }
  Local mo_krtp := {; // список карточек в реестрах на прикрепление
     {'REESTR',   'N', 6, 0}, ; // код реестра;по файлу 'mo_krtr'
     {'KOD_K',    'N', 7, 0}, ; // код пациента по файлу 'kartotek'
     {'D_PRIK',   'D', 8, 0}, ; // дата прикрепления (заявления)
     {'S_PRIK',   'N', 1, 0}, ; // способ прикрепления: 1-по месту регистрации, 2-по личному заявлению (без изменения м/ж), 3-по личному заявлению (в связи с изменением м/ж)
     {'REES_ZAP', 'N', 6, 0}, ; // номер строки в реестре
     {'UCHAST'   , 'N', 2, 0}, ; // номер участка
     {'SNILS_VR', 'C', 11, 0}, ; // СНИЛС участкового врача
     {'KOD_PODR', 'C', 25, 0}, ; // код подразделения по паспорту ЛПУ
     {'VRACH'    , 'N', 4, 0}, ; // код участкового врача
     {'OPLATA',   'N', 1, 0}, ; // тип оплаты;сначала 0, 1-прикреплён, 2-ошибки
     {'D_PRIK1',  'D', 8, 0} ;  // дата прикрепления
    }
  Local mo_krte := {; // список ошибок в реестрах на прикрепление
     {'REESTR',   'N', 6, 0}, ; // код реестра;по файлу 'mo_krtr'
     {'REES_ZAP', 'N', 6, 0}, ; // номер строки в реестре
     {'KOD_K',    'N', 7, 0}, ; // код пациента по файлу 'kartotek'
     {'REFREASON', 'N', 3, 0} ;  // код ошибки
    }
  Local mo_krtr := {; // Реестр сведений о прикреплении
     {'KOD',         'N', 6, 0}, ; // код реестра;номер записи;
     {'FNAME',       'C', 26, 0}, ; // имя файла без расширения
     {'DFILE',       'D', 8, 0}, ; // дата создания файла
     {'KOD_F',       'N', 6, 0}, ; // ссылка на файл 'mo_krtf'
     {'DATE_OUT',    'D', 8, 0}, ; // дата отправки в ТФОМС;;
     {'NUMB_OUT',    'N', 2, 0}, ; // номер отправки в ТФОМС;сколько раз всего записывали файл на носитель;
     {'KOL',         'N', 6, 0}, ; // количество пациентов в реестре
     {'KOL_P',       'N', 6, 0}, ; // количество прикреплённых пациентов
     {'WQ',          'C', 11, 0}, ; // конец имени файла WQ...
     {'ANSWER',      'N', 1, 0} ;  // 0-не было ответа, 1-был прочитан ответ
    }
  Local mo_krto := {; // список карточек в файлах на открепление
     {'kod_krtf', 'N', 6, 0}, ; // код по файлу 'mo_krtf'
     {'kod_tf',   'N', 10, 0}, ; // код по кодировке ТФОМС (PID)
     {'KOD_K',    'N', 7, 0}, ; // код пациента по файлу 'kartotek', если найден
     {'MO_PR',    'C', 6, 0}, ; // код МО прикрепления
     {'D_PRIK',   'D', 8, 0}, ; // дата прикрепления
     {'FILE_ZAP', 'N', 6, 0} ;  // номер строки в файле
    }
  Local mo_krtf := {; // Список отосланных и принятых CSV-файлов
     {'KOD',         'N', 6, 0}, ; // код;номер записи
     {'FNAME',       'C', 26, 0}, ; // имя файла без расширения
     {'DFILE',       'D', 8, 0}, ; // дата создания файла
     {'TFILE',       'C', 5, 0}, ; // время создания файла
     {'DREAD',       'D', 8, 0}, ; // дата чтения/записи
     {'TREAD',       'C', 5, 0}, ; // время чтения/записи
     {'TIP_IN',      'N', 1, 0}, ; // тип принимаемого файла;2-ответ, 3-открепление, 4, 5
     {'TIP_OUT',     'N', 1, 0}, ; // тип высылаемого файла;1-реестр
     {'DWORK',       'D', 8, 0}, ; // дата обработки файла;
     {'TWORK1',      'C', 5, 0}, ; // время начала обработки;
     {'TWORK2',      'C', 5, 0}, ; // время окончания обработки;
     {'KOL',         'N', 6, 0}, ; // количество пациентов в файле
     {'REESTR',      'N', 6, 0}, ; // код реестра (отсылаемого или обработанного ТФОМС) или 0 в случае открепления
     {'MO_PR',       'C', 6, 0} ;  // код МО прикрепления в случае открепления
    }
  Local k_prim1 := {;
     {'KOD',        'N',      7,      0}, ;
     {'STROKE',     'N',      1,      0}, ;
     {'NAME',       'C',     60,      0} ;
    }
  Local mo_regi := {; // регистрация посещения в регистратуре
     {'KOD_K', 'N', 7, 0}, ; // код по картотеке;;
     {'TIP',  'N', 1, 0}, ; // тип операции;1-отделение, 2-прием, 3-врач;
     {'OP',   'N', 4, 0}, ; // код отделения/приема/врача;;
     {'UCH',  'N', 3, 0}, ; // код учреждения;;
     {'PDATE', 'C', 4, 0}, ; // дата листа учета;;
     {'CTIME', 'C', 5, 0}, ; // время листа учета;;
     {'KOD_P', 'C', 1, 0} ;  // код оператора;;
    }
  Local msek := {;
     {'KOD_K'    ,   'N',     7,     0}, ; // код по картотеке
     {'DATE_KOM' ,   'D',     8,     0}, ; // дата комиссии
     {'KOD_DIAG' ,   'C',     5,     0}, ; // шифр заболевания
     {'TRUD'     ,   'N',     1,     0}, ; // трудоспособность: 0 - да, 1 - нет
     {'CEL'      ,   'N',     2,     0}, ; // от 1 до 7
     {'GRUP_DO'  ,   'N',     2,     0}, ; // группа (процент) до
     {'GRUP_POSLE',  'N',     2,     0} ;  // группа (процент) после
    }
  Local spr_OMS := {;
     {'KOD_H'    ,   'N',     7,     0}, ; // код (номер записи) по БД human
     {'KOD_K'    ,   'N',     7,     0}, ; // код по картотеке
     {'FIO'      ,   'C',    50,     0}, ; // Ф.И.О. больного
     {'DATE_R'   ,   'D',     8,     0}, ; // дата рождения больного
     {'DATA'     ,   'D',     8,     0}, ; // дата выдачи справки
     {'N_DATA'   ,   'D',     8,     0}, ; // дата начала лечения
     {'K_DATA'   ,   'D',     8,     0}, ; // дата окончания лечения
     {'TIP'      ,   'N',     1,     0}, ; // 1-амбулаторно, 2-стационар, 3-дневной стационар
     {'STOIM'    ,   'N',    11,     2} ;  // оплачиваемая сумма лечения
    }
  //
  Local human := {;
     {'KOD'      ,   'N',     7,     0}, ; // код (номер записи)
     {'KOD_K'    ,   'N',     7,     0}, ; // код по картотеке
     {'TIP_H'    ,   'N',     1,     0}, ; // 1-лечится, 2-лечение не завершено, 3-лечение не завершено, 4-выписан счет, 5-оплачен полностью, 6-больной не оплачивается
     {'FIO'      ,   'C',    50,     0}, ; // Ф.И.О. больного
     {'POL'      ,   'C',     1,     0}, ; // пол
     {'DATE_R'   ,   'D',     8,     0}, ; // дата рождения больного
     {'VZROS_REB',   'N',     1,     0}, ; // 0-взрослый, 1-ребенок, 2-подросток
     {'ADRES'    ,   'C',    50,     0}, ; // адрес больного
     {'MR_DOL'   ,   'C',    50,     0}, ; // место работы или причина безработности
     {'RAB_NERAB',   'N',     1,     0}, ; // 0-работающий, 1-неработающий
     {'KOD_DIAG' ,   'C',     5,     0}, ; // шифр 1-ой осн.болезни
     {'KOD_DIAG2',   'C',     5,     0}, ; // шифр 2-ой осн.болезни
     {'KOD_DIAG3',   'C',     5,     0}, ; // шифр 3-ой осн.болезни
     {'KOD_DIAG4',   'C',     5,     0}, ; // шифр 4-ой осн.болезни
     {'SOPUT_B1' ,   'C',     5,     0}, ; // шифр 1-ой сопутствующей болезни
     {'SOPUT_B2' ,   'C',     5,     0}, ; // шифр 2-ой сопутствующей болезни
     {'SOPUT_B3' ,   'C',     5,     0}, ; // шифр 3-ой сопутствующей болезни
     {'SOPUT_B4' ,   'C',     5,     0}, ; // шифр 4-ой сопутствующей болезни
     {'DIAG_PLUS',   'C',     8,     0}, ; // дополнение к диагнозам (+,-) или последний знак 6-ти символьного диагноза
     {'OBRASHEN' ,   'C',     1,     0}, ; // пробел-ничего, '1'-подозрение на ЗНО, '2'-онкология???
     {'KOMU'     ,   'N',     1,     0}, ; // от 1 до 5
     {'STR_CRB'  ,   'N',     2,     0}, ; // код стр.компании, комитета и т.п.
     {'ZA_SMO'   ,   'N',     2,     0}, ; // ЗаСМО
     {'POLIS'    ,   'C',    17,     0}, ; // серия и номер страхового полиса
     {'LPU'      ,   'N',     3,     0}, ; // код учреждения
     {'OTD'      ,   'N',     3,     0}, ; // код отделения
     {'UCH_DOC'  ,   'C',    10,     0}, ; // вид и номер учетного документа
     {'MI_GIT'   ,   'N',     1,     0}, ; // 0-город, 1-область, 2-иногородний
     {'RAJON_GIT',   'N',     2,     0}, ; // код района места жительства
     {'MEST_INOG',   'N',     1,     0}, ; // 0-город, 1-область, 2-иногородний
     {'RAJON'    ,   'N',     2,     0}, ; // код района финансирования
     {'REG_LECH' ,   'N',     1,     0}, ; // 0-основные, 9-дополнительные объёмы
     {'N_DATA'   ,   'D',     8,     0}, ; // дата начала лечения
     {'K_DATA'   ,   'D',     8,     0}, ; // дата окончания лечения
     {'CENA'     ,   'N',    10,     2}, ; // стоимость лечения
     {'CENA_1'   ,   'N',    10,     2}, ; // оплачиваемая сумма лечения
     {'BOLNICH'  ,   'N',     1,     0}, ; // больничный
     {'DATE_B_1' ,   'C',     4,     0}, ; // дата начала больничного
     {'DATE_B_2' ,   'C',     4,     0}, ; // дата окончания больничного
     {'DATE_E'   ,   'C',     4,     0}, ; // дата добавления листа учета
     {'KOD_P'    ,   'C',     1,     0}, ; // код пользователя, добавившего л/у
     {'DATE_OPL' ,   'C',     4,     0}, ; // дата след.визита для дисп.наблюдения
     {'SCHET'    ,   'N',     6,     0}, ; // код счета
     {'ISHOD'    ,   'N',     3,     0} ;
    }
  Local human_ := {;
     {'DISPANS',  'C', 16, 0}, ; // то, что вводится по <F10>
     {'STATUS_ST','C', 10, 0}, ; // статус стоматологического пациента;проверка по собственному справочнику МО для стоматологии
     {'POVOD',    'N', 2, 0}, ; // повод обращения
     {'TRAVMA',   'N', 2, 0}, ; // вид травмы
     {'ID_PAC',   'C', 36, 0}, ; // код записи о пациенте;GUID пациента в листе учета;создается при добавлении записи
     {'ID_C',     'C', 36, 0}, ; // код случая оказания;GUID листа учета;создается при добавлении записи
     {'VPOLIS',   'N', 1, 0}, ; // вид полиса (от 1 до 3);1-старый, 2-врем., 3-новый;по умолчанию 1 - старый
     {'SPOLIS',   'C', 10, 0}, ; // серия полиса
     {'NPOLIS',   'C', 20, 0}, ; // номер полиса
     {'SMO',      'C', 5, 0}, ; // реестровый номер СМО возвращается с реестром из ТФОМС, иногродние = 34
     {'OKATO',    'C', 5, 0}, ; // ОКАТО территории страхования возвращается с реестром из ТФОМС для иногородних
     {'NOVOR',    'N', 2, 0}, ; // признак новорожденного 0-нет, 1, 2,... - порядковый номер новорожденного ребенка
     {'DATE_R2',  'D', 8, 0}, ; // дата рождения ребенка для NOVOR > 0;
     {'POL2',     'C', 1, 0}, ; // пол ребенка для NOVOR > 0;
     {'USL_OK',   'N', 2, 0}, ; // условия оказания медицинской помощи по справочнику V006
     {'VIDPOM',   'N', 4, 0}, ; // вид помощи по справочнику V008
     {'PROFIL',   'N', 3, 0}, ; // профиль по справочнику V002
     {'IDSP',     'N', 2, 0}, ; // код способа оплаты мед.помощи по справочнику V010
     {'NPR_MO',   'C', 6, 0}, ; // код МО, направившего на лечение по справочнику T001
     {'FORMA14',  'C', 6, 0}, ; // для стат.формы 14 в первых 4 байтах: планово/экстренно, доставлен скорой помощью, проведено вскрытие, установлено расхождение
     {'KOD_DIAG0','C', 6, 0}, ; // диагноз первичный
     {'RSLT_NEW', 'N', 3, 0}, ; // результат обращения/госпитализации по справочнику V009
     {'ISHOD_NEW','N', 3, 0}, ; // исход заболевания по справочнику V012
     {'VRACH',    'N', 4, 0}, ; // лечащий врач (врач, закрывший талон)
     {'PRVS',     'N', 9, 0}, ; // Специальность врача по справочнику V004, с минусом - по справочнику V015
     {'RODIT_DR', 'D', 8, 0}, ; // дата рождения родителя (для human->bolnich=2)
     {'RODIT_POL','C', 1, 0}, ; // пол родителя (для human->bolnich=2)
     {'DATE_E2'  ,'C', 4, 0}, ; // дата редактирования листа учета
     {'KOD_P2'   ,'C', 1, 0}, ; // код пользователя, исправившего л/у
     {'PZTIP',    'N', 3, 0}, ; // тип план-заказа от 1 до 99
     {'PZKOL',    'N', 6, 2}, ; // кол-во выполненного план-заказа
     {'ST_VERIFY','N', 1, 0}, ; // стадия проверки: 0-после редактирования; от 5 до 9-проверено
     {'KOD_UP',   'N', 7, 0}, ; // номер предыдущей записи (в случае повторного выставления в другом счёте)
     {'OPLATA',   'N', 1, 0}, ; // тип оплаты;0, 1 или 2, 1 - в счет, 2 - ред-ие; 9-счёт не оплачен и сделана копия л/у
     {'SUMP',     'N', 10, 2}, ; // сумма, принятая к оплате СМО (ТФОМС);всего;
     {'SANK_MEK', 'N', 10, 2}, ; // финансовые санкции (МЭК);суммарные;
     {'SANK_MEE', 'N', 10, 2}, ; // финансовые санкции (МЭЭ);суммарные;
     {'SANK_EKMP','N', 10, 2}, ; // финансовые санкции (ЭКМП);суммарные;
     {'REESTR',   'N', 6, 0}, ; // код (последнего) реестра;по файлу 'mo_rees'
     {'REES_NUM', 'N', 2, 0}, ; // номер отправки реестра в ТФОМСа;в реестре первый раз отправили = 1, после исправления отправили второй раз = 2, и т.д.;
     {'REES_ZAP', 'N', 6, 0}, ; // номер позиции записи в реестре;поле 'IDCASE' (и 'ZAP') в реестре случаев
     {'SCHET_NUM','N', 2, 0}, ; // номер отправки счёта в ТФОМС;в счёте первый раз отправили = 0, после отказа в оплате и исправления отправили второй раз = 1, и т.д.;
     {'SCHET_ZAP','N', 6, 0}, ;  // номер позиции записи в счете;поле 'IDCASE' (и 'ZAP') в реестре счетов;сформировать по индексу humans для schet > 0
     {'P_CEL',    'C', 4, 0} ; // Цель посещения (справочник V025)
    }
  Local human_2 := {;
     {'OSL1',     'C',  6, 0}, ; // шифр 1-ого диагноза осложнения заболевания
     {'OSL2',     'C',  6, 0}, ; // шифр 2-ого диагноза осложнения заболевания
     {'OSL3',     'C',  6, 0}, ; // шифр 3-ого диагноза осложнения заболевания
     {'NPR_DATE', 'D',  8, 0}, ; // Дата направления, выданного МО, указанной в NPR_MO
     {'PROFIL_K', 'N',  3, 0}, ; // профиль койки по справочнику V020 (стационар и дневной стационар)
     {'VMP',      'N',  1, 0}, ; // 0-нет, 1-да ВМП
     {'VIDVMP',   'C', 12, 0}, ; // вид ВМП по справочнику V018
     {'METVMP',   'N',  4, 0}, ; // метод ВМП по справочнику V019
     {'TAL_NUM',  'C', 20, 0}, ; // Номер талона на ВМП
     {'TAL_D',    'D',  8, 0}, ; // Дата выдачи талона на ВМП
     {'TAL_P',    'D',  8, 0}, ; // Дата планируемой госпитализации в соответствии с талоном на ВМП
     {'P_PER',    'N',  1, 0}, ; // Признак поступления/перевода 1-4
     {'VNR',      'N',  4, 0}, ; // вес недоношенного ребёнка (лечится ребёнок)
     {'VNR1',     'N',  4, 0}, ; // вес 1-го недоношенного ребёнка (лечится мать)
     {'VNR2',     'N',  4, 0}, ; // вес 2-го недоношенного ребёнка (лечится мать)
     {'VNR3',     'N',  4, 0}, ; // вес 3-го недоношенного ребёнка (лечится мать)
     {'PC1',      'C', 20, 0}, ; // КСЛП (в 2017 - в первом знаке 1-3 - кол-во стентов в коронарных сосудах)
     {'PC2',      'C', 10, 0}, ; // КИРО
     {'PC3',      'C', 10, 0}, ; // дополнительный критерий
     {'PC4',      'C', 10, 0}, ; // вес пациента в строковом виде N(3.1) для лечения COVID-19
     {'PC5',      'C', 10, 0}, ; // для мед. реабилитации строка вида 'vid_reab,vid_shrm'
     {'PC6',      'C', 10, 0}, ; //
     {'PN1',      'N', 10, 0}, ; // для реабилитации пациентов после кохлеарной имплантации
     {'PN2',      'N', 10, 0}, ; // для абортов
     {'PN3',      'N', 10, 0}, ; // код согласования с программами SDS/ЛИС
     {'PN4',      'N', 10, 0}, ; // двойные л/у (1-ый л/у - ссылка на 2-ой лист, (2-ой л/у - ссылка на 1-ый лист)
     {'PN5',      'N', 10, 0}, ; // модель пациента ВМП
     {'PN6',      'N', 10, 0} ;  // направление на МСЭ (0-нет, 1-да)
    }
  local mo_implant := {;  // имплантанты
    {'KOD_HUM',   'N',   7, 0}, ; // код листа учёта по файлу 'human'
    {'KOD_K',     'N',   7, 0}, ; // код по картотеке
    {'MO_HU_K',   'N',   7, 0}, ; // recno() из файла mo_hu.dbf
    {'DATE_UST',  'D',   8, 0}, ; // дата установки импланта
    {'RZN',       'N',   6, 0} ;  // Код вида медицинского изделия (номенклатурная классификация медицинских изделий справочника МинЗдрава (OID 1.2.643.5.1.13.13.11.1079))
  }

  Local mo_lek_pr := {; // Сведения о введенных лекарственных препаратах
    {'KOD_HUM',   'N',   7, 0}, ; // код листа учёта по файлу 'human'
    {'DATE_INJ',  'D',   8, 0}, ; // Дата введения лекарственного препарата
    {'SEVERITY',  'N',   5, 0}, ; // код тяжести течения заболевания по справочнику _mo_severity.dbf
    {'CODE_SH',   'C',  10, 0}, ; // Код схемы лечения пациента/код группы препарата
    {'SCHEDRUG',  'C',  10, 0}, ; // сочетание схемы лечения и группы препаратов V032
    {'REGNUM',    'C',   6, 0}, ; // Идентификатор лекарственного препарата
    {'ED_IZM',    'N',   3, 0}, ; // Единица измерения дозы лекарственного препарата
    {'DOSE_INJ',  'N',   8, 2}, ; // Доза введения лекарственного препарата
    {'METHOD_I',  'N',   3, 0}, ; // Путь введения лекарственного препарата
    {'COL_INJ',   'N',   5, 0} ;  // Количество введений в течениедня, указанного в DATA_INJ
  }

  Local mo_ser_num := {; // Сведения о серийных номерах имплантатов и кодах маркировки лекарственных препаратов
    {'TYPE_FIL',  'C',   1, 0}, ; // тип файла 'I' - имплантанты, 'L' - лекарственные препараты
    {'REC_N',     'N',   7, 0}, ; // номер записи в файлах human_im или human_lek_pr
    {'SER_NUM',   'C', 100, 0} ;  // Код маркировки лекарственного препарата или серийный номер имплантантов
  }

  Local mo_onkna := {; // онконаправления
     {'KOD'      ,   'N',     7,     0}, ; // код больного
     {'NAPR_DATE',   'D',     8,     0}, ; // Дата направления
     {'NAPR_MO',     'C',     6,     0}, ; // код другого МО, куда выписано направление
     {'NAPR_V'  ,    'N',     1,     0}, ; // Вид направления(V028):1-к онкологу, 2-на биопсию, 3-на дообследование, 4-для опр.тактики лечения
     {'MET_ISSL' ,   'N',     1,     0}, ; // Метод диагн.исследования(V029)(при NAPR_V=3):1-лаб.диагностика;2-инстр.диагностика;3-луч.диагностика;4-КТ, МРТ, ангиография
     {'U_KOD'    ,   'N',     6,     0}, ; // код услуги(V001)
     {'KOD_VR'   ,   'N',     5,     0} ;  // код врача (справочник mo_pers)
    }
  Local mo_onksl := {; // Сведения о случае лечения онкологического заболевания
     {'KOD'      ,   'N',     7,     0}, ; // код больного
     {'DS1_T'    ,   'N',     1,     0}, ; // Повод обращения(N018):0-первичное лечение;1-рецидив;2-прогрессирование;3-динам.наблюдение;4-диспанс.наблюдение;5-диагностика;6-симптоматическое лечение
     {'STAD'     ,   'N',     3,     0}, ; // Стадия заболевания(N002)обязательно при DS1_T = от 0 до 4
     {'ONK_T'    ,   'N',     3,     0}, ; // Значение Tumor(N003) обязательно для взрослых при при DS1_T=0
     {'ONK_N'    ,   'N',     3,     0}, ; // Значение Nodus(N004) обязательно для взрослых при при DS1_T=0
     {'ONK_M'    ,   'N',     3,     0}, ; // Значение Metastasis(N005) обязательно для взрослых при при DS1_T=0
     {'MTSTZ'    ,   'N',     1,     0}, ; // Признак выявления отдалённых метастазов	Подлежит заполнению значением 1 при выявлении отдалённых метастазов только при DS1_T=1, 2
     {'B_DIAG'   ,   'N',     2,     0}, ; // гистология:99-не надо, 98-сделана(результат получен), 97-сделана(результат не получен), 0-отказ, 7-не показано, 8-противопоказано
     {'SOD'      ,   'N',     6,     2}, ; // Суммарная очаговая доза	Обязательно для заполнения при проведении лучевой или химиолучевой терапии (USL_TIP=3 или USL_TIP=4)м.б.=0
     {'K_FR'     ,   'N',     2,     0}, ; // кол-во фракций проведения лучевой терапии	Обязательно для заполнения при проведении лучевой или химиолучевой терапии (USL_TIP=3 или USL_TIP=4)м.б.=0
     {'CRIT'     ,   'C',    10,     0}, ; // код схемы лек.терапии V024 (sh..., mt...)
     {'CRIT2'    ,   'C',    10,     0}, ; // доп.критерий (fr...)
     {'IS_ERR'   ,   'N',     1,     0}, ; // Признак несоблюдения схемы лекарственной терапии: 0-нормально, 1-не соблюдена
     {'WEI'      ,   'N',     5,     1}, ; // масса тела в кг	Обязательно для заполнения при проведении лекарственной или химиолучевой терапии (USL_TIP=2 или USL_TIP=4)
     {'HEI'      ,   'N',     3,     0}, ; // рост в см	Обязательно для заполнения при проведении лекарственной или химиолучевой терапии (USL_TIP=2 или USL_TIP=4)
     {'BSA'      ,   'N',     4,     2} ;  // площадь поверхности тела в кв.м.	Обязательно для заполнения при проведении лекарственной или химиолучевой терапии (USL_TIP=2 или USL_TIP=4)
    }
  Local mo_onkdi := {; // Диагностический блок
     {'KOD'      ,   'N',     7,     0}, ; // код больного
     {'DIAG_DATE',   'D',     8,     0}, ; // Дата взятия материала для проведения диагностики
     {'DIAG_TIP' ,   'N',     1,     0}, ; // Тип диагностического показателя: 1 - гистологический признак; 2 - маркёр (ИГХ)
     {'DIAG_CODE',   'N',     3,     0}, ; // Код диагностического показателя При DIAG_TIP=1 в соответствии со справочником N007 При DIAG_TIP=2 в соответствии со справочником N010
     {'DIAG_RSLT',   'N',     3,     0}, ; // Код результата диагностики При DIAG_TIP=1 в соответствии со справочником N008 При DIAG_TIP=2 в соответствии со справочником N011
     {'REC_RSLT',    'N',     1,     0} ;  // признак получения результата диагностики 1 - получен
    }
  Local mo_onkco := {; // Сведения о проведении консилиума
     {'KOD'      ,   'N',     7,     0}, ; // код больного
     {'PR_CONS'  ,   'N',     1,     0}, ; // Сведения о проведении консилиума(N019):0-отсутствует необходимость;1-определена тактика обследования;2-определена тактика лечения;3-изменена тактика лечения
     {'DT_CONS'  ,   'D',     8,     0} ;  // Дата проведения консилиума	Обязательно к заполнению при PR_CONS=1, 2, 3
    }
  Local mo_onkpr := {; // Сведения об имеющихся противопоказаниях
     {'KOD'      ,   'N',     7,     0}, ; // код больного
     {'PROT'     ,   'N',     1,     0}, ; // Код противопоказания или отказа в соответствии со справочником N001
     {'D_PROT'   ,   'D',     8,     0} ;  // Дата регистрации противопоказания или отказа
    }
  Local mo_onkus := {; // Сведения о проведённых лечениях
     {'KOD'      ,   'N',     7,     0}, ; // код больного
     {'USL_TIP'  ,   'N',     1,     0}, ; // Тип онкоуслуги в соответствии со справочником N013
     {'HIR_TIP'  ,   'N',     1,     0}, ; // Тип хирургического лечения При USL_TIP=1 в соответствии со справочником N014
     {'LEK_TIP_L',   'N',     1,     0}, ; // Линия лекарственной терапии При USL_TIP=2 в соответствии со справочником N015
     {'LEK_TIP_V',   'N',     1,     0}, ; // Цикл лекарственной терапии	При USL_TIP=2 в соответствии со справочником N016
     {'LUCH_TIP' ,   'N',     1,     0}, ; // Тип лучевой терапии	При USL_TIP=3, 4 в соответствии со справочником N017
     {'PPTR' ,       'N',     1,     0} ;  // Признак проведения профилактики тошноты и рвотного рефлекса - указывается '1' при USL_TIP=2, 4
    }
  Local mo_onkle := {; // Сведения о применённых лекарственных препаратах
     {'KOD'      ,   'N',     7,     0}, ; // код больного
     {'REGNUM',      'C',     6,     0}, ; // IDD лек.препарата N020
     {'CODE_SH',     'C',    10,     0}, ; // код схемы лек.терапии V024
     {'DATE_INJ',    'D',     8,     0} ;  // дата введения лек.препарата
    }

  Local mo_rhum := {; // список листов учёта в реестрах (т.к. можно попасть в несколько реестров)
     {'REESTR',   'N', 6, 0}, ; // код реестра;по файлу 'mo_rees'
     {'KOD_HUM',  'N', 7, 0}, ; // код листа учёта по файлу 'human'
     {'REES_ZAP', 'N', 6, 0}, ; // номер позиции записи в реестре;поле 'IDCASE' (и 'ZAP') в реестре случаев
     {'OPLATA',   'N', 1, 0} ;  // тип оплаты;сначала 0, затем из ТФОМС 1 или 2, 1 - в счет, 2 - редактирование;
    }
  Local mo_refr := {; // список отказов в реестрах и счетах по случаям и услугам
     {'TIPD',      'N', 1, 0}, ; // тип документа 1-реестр, 2-счёт
     {'KODD',      'N', 6, 0}, ; // код реестра по 'mo_rees' или счёта по 'schet'
     {'TIPZ',      'N', 1, 0}, ; // тип записи 1-по 'human', 2-по 'human_u'
     {'KODZ',      'N', 8, 0}, ; // номер записи по 'human' или 'human_u'
     {'IDENTITY',  'N', 1, 0}, ; //
     {'REFREASON', 'N', 3, 0}, ; // код причины отказа по справочнику T005
     {'SREFREASON', 'C', 12, 0} ;  // код причины отказа по справочнику Q015-Q016
    }
  Local mo_rak := {; // реестр актов контроля счетов
     {'AKT',      'N',  6, 0}, ; // код акта(номер записи)
     {'KOD_XML',  'N',  6, 0}, ; // ссылка на файл 'mo_xml', присланный из ТФ или СМО
     {'CODEA',    'N', 16, 0}, ; // код записи акта
     {'NAKT',     'C', 30, 0}, ; // номер акта контроля
     {'DAKT',     'D',  8, 0}, ; // дата акта контроля
     {'NSCHET',   'C', 15, 0}, ; // номер счета (если он один в акте)
     {'KOL_SCH',  'N',  6, 0}, ; // кол-во счетов в акте
     {'KOL_PAC',  'N',  6, 0}, ; // кол-во пациентов в акте
     {'KOL_ERR',  'N',  6, 0}, ; // кол-во пациентов с ошибкой в акте
     {'KONT',     'N',  2, 0}, ; // 1-МЭК, 2-МЭЭ, 3-ЭКМП и т.д. (из справочника F006)
     {'TYPEK',    'N',  1, 0}, ; // 1-первичный контроль, 2-повторный
     {'SKONT',    'N',  1, 0} ;  // вид экспертизы: 0-МЭК, 1-плановая, 2-целевая
    }
  Local mo_rakexp := {; // реестр актов контроля счетов + эксперты
     {'AKT',      'N',  6, 0}, ; // код акта
     {'CODE_EXP', 'C',  8, 0} ;  // код эксперта качества мед.помощи по F004
    }
  Local mo_raks := {; // реестр актов контроля + счета
     {'KOD_RAKS', 'N',  6, 0}, ; // № записи в файле (один счёт м.б. более 1 раза)
     {'AKT',      'N',  6, 0}, ; // код акта
     {'SCHET',    'N',  6, 0}, ; // код счета по БД schet.dbf
     {'KOL_PAC',  'N',  6, 0}, ; // кол-во пациентов в счете
     {'KOL_ERR',  'N',  6, 0}, ; // кол-во пациентов с ошибкой в счете
     {'PLAT',     'C',  5, 0}, ; // плательщик (СМО или ТФ) ?????????????
     {'SUMMAV',   'N', 15, 2}, ; // сумма МО, выставленная на оплату
     {'SUMMAP',   'N', 15, 2}, ; // сумма, принятая к оплате СМО или ТФ
     {'SANK_MEK', 'N', 15, 2}, ; // финансовые санкции МЭК (или SANK_SUM)
     {'SANK_MEE', 'N', 15, 2}, ; // финансовые санкции МЭЭ
     {'SANK_EKMP', 'N', 15, 2}, ; // финансовые санкции ЭКМП
     {'PENALTY',  'N', 15, 2} ;  // Сумма штрафов
    }
  Local mo_raksh := {; // реестр актов контроля + счета + листы учета
     {'KOD_RAKS', 'N',  6, 0}, ; // № записи в файле RAKS
     {'KOD_H',    'N',  7, 0}, ; // код листа учета по БД 'human'
     {'OPLATA',   'N',  1, 0}, ; // тип оплаты;1-оплата, 2-отказ, 3-част.отказ, 4-восстановление
     {'SUMP',     'N', 10, 2}, ; // сумма, принятая к оплате СМО (ТФОМС);;
     {'REFREASON', 'N',  3, 0}, ; // код причины отказа (по-старому - 2018 год)
     {'SANK_MEK', 'N', 10, 2}, ; // финансовые санкции (МЭК) (или SANK_IT)
     {'SANK_MEE', 'N', 10, 2}, ; // финансовые санкции (МЭЭ)
     {'SANK_EKMP', 'N', 10, 2}, ; // финансовые санкции (ЭКМП)
     {'PENALTY',  'N', 15, 2}, ; // Сумма штрафов
     {'IS_REPEAT', 'N',  1, 0}, ; // 0-нет, 1-повторное выставление листа учёта
     {'DATE_REP', 'D',  8, 0}, ; // дата оплаты (экспертизы)
     {'NEXT_KOD', 'N',  7, 0} ;  // ссылка на повторно выставленный лист учета
    }
  Local mo_raksherr := {; // реестр актов контроля + счета + листы учета + ошибки (по-новому - 2019 год)
     {'KOD_RAKSH', 'N',  8, 0}, ; // № записи в файле RAKSH
     {'S_CODE',   'C', 36, 0}, ; // идентификатор санкции
     {'S_SUM',    'N', 10, 2}, ; // сумма уменьшения оплаты
     {'REFREASON', 'N',  3, 0}, ; // код причины отказа (частичной) оплаты
     {'PENALTY',  'N', 15, 2}, ; // Сумма штрафов
     {'SL_ID',    'C', 36, 0}, ; // идентификатор случая (в законченном случае)
     {'SL_ID2',   'C', 36, 0} ;  // идентификатор второго случая (в законченном случае)
    }
  Local mo_os := {; // оплата, санкции, результат экспертизы счетов
     {'KOD',      'N',  7, 0}, ; // код листа учета по БД 'human'
     {'KOD_XML',  'N',  6, 0}, ; // ссылка на файл 'mo_xml', присланный из ТФ или СМО
     {'AKT',      'C', 15, 0}, ; // номер акта
     {'DATE_OPL', 'D',  8, 0}, ; // дата оплаты (экспертизы);;
     {'OPLATA',   'N',  1, 0}, ; // тип оплаты;1-оплата, 2-отказ, 3-част.отказ, 4-восстановление
     {'IS_REPEAT', 'N',  1, 0}, ; // 0-нет, 1-для оплаты=2 - повторное выставление листа учёта
     {'NEXT_KOD', 'N',  7, 0}, ; // ссылка на повторно выставленный листа учета
     {'SUMP',     'N', 10, 2}, ; // сумма, принятая к оплате СМО (ТФОМС);;
     {'SANK_MEK', 'N', 10, 2}, ; // финансовые санкции (МЭК);;
     {'SANK_MEE', 'N', 10, 2}, ; // финансовые санкции (МЭЭ);;
     {'SANK_EKMP', 'N', 10, 2}, ; // финансовые санкции (ЭКМП);;
     {'REFREASON', 'N',  3, 0} ;   // код причины отказа (частичной оплаты);по справочнику F014
    }
  Local mo_rpd := {; // реестр ПД
     {'PD',       'N',  6, 0}, ; // код ПД
     {'KOD_XML',  'N',  6, 0}, ; // ссылка на файл 'mo_xml', присланный из ТФ или СМО
     {'T_PD',     'N',  1, 0}, ; // 1-платёжное поручение, 2-письмо об уменьшении задолженности
     {'N_PD',     'C', 25, 0}, ; // номер ПД
     {'D_PD',     'D',  8, 0}, ; // дата ПД
     {'NSCHET',   'C', 15, 0}, ; // номер счета (если он один в ПД)
     {'KOL_SCH',  'N',  6, 0}, ; // кол-во счетов в ПД
     {'KOL_PAC',  'N',  6, 0}, ; // кол-во пациентов в ПД
     {'S_PD',     'N', 15, 2}, ; // сумма ПД
     {'S_ALL',    'N', 15, 2}, ; // сумма оплаты
     {'KBK',      'C', 20, 0} ;  // КБК
    }
  Local mo_rpds := {; // реестр ПД + счета
     {'KOD_RPDS', 'N',  6, 0}, ; // № записи в файле (один счёт м.б. более 1 раза)
     {'PD',       'N',  6, 0}, ; // код ПД
     {'SCHET',    'N',  6, 0}, ; // код счета по БД schet.dbf
     {'KOL_PAC',  'N',  6, 0}, ; // кол-во пациентов в счете
     {'PLAT',     'C',  5, 0}, ; // плательщик (СМО или ТФ) ?????????????
     {'S_SCH',    'N', 15, 2} ;  // суммы оплаты счёта в ПД
    }
  Local mo_rpdsh := {; // реестр ПД + счета + листы учета
     {'KOD_RPDS', 'N',  6, 0}, ; // № записи в файле RPDS
     {'KOD_H',    'N',  7, 0}, ; // код листа учета по БД 'human'
     {'S_SL',     'N', 11, 2} ;  // сумма оплаты случая в ПД
    }
  Local human_u := {;
     {'KOD'      ,   'N',     7,     0}, ; // код больного
     {'DATE_U'   ,   'C',     4,     0}, ; // дата оказания услуги
     {'U_KOD'    ,   'N',     4,     0}, ; // код услуги
     {'U_CENA'   ,   'N',    10,     2}, ; // цена услуги
     {'U_KOEF'   ,   'N',     5,     3}, ; // коэф-т индексации услуги
     {'KOD_VR'   ,   'N',     4,     0}, ; // код врача
     {'KOD_AS'   ,   'N',     4,     0}, ; // код ассистента
     {'KOL'      ,   'N',     3,     0}, ; // количество услуг
     {'STOIM'    ,   'N',    10,     2}, ; // итоговая стоимость услуги
     {'IS_EDIT'  ,   'N',     2,     0}, ; // редактировалась ли сумма
     {'OTD'      ,   'N',     3,     0}, ; // код отделения
     {'KOL_1'    ,   'N',     3,     0}, ; // оплачиваемое количество услуг
     {'STOIM_1'  ,   'N',    10,     2}, ; // оплачиваемая стоимость услуги
     {'KOL_RCP'  ,   'N',     2,     0} ;
    }
  Local human_u_ := {;
     {'date_u2',     'C', 4, 0}, ; // дата окончания оказания услуги;dtoc4()
     {'kod_diag',    'C', 6, 0}, ; // диагноз;перенести из основного диагноза
     {'ZF',          'C', 30, 0}, ; // зубная формула;для стоматологий
     {'ID_U',        'C', 36, 0}, ; // код записи об оказанной услуге;GUID оказанной услуги;создается при добавлении записи
     {'PROFIL',      'N', 3, 0}, ; // профиль;по справочнику V002
     {'PRVS',        'N', 9, 0}, ; // Специальность врача по справочнику V004, с минусом - по справочнику V015
     {'PZTIP',       'N', 1, 0}, ; // тип план-заказа от 1 до 4
     {'PZKOL',       'N', 6, 2}, ; // кол-во выполненного план-заказа
     {'OPLATA',      'N', 1, 0}, ; // тип оплаты;от 1 до 4;
     {'REES_ZAP',    'N', 8, 0}, ; // номер записи в реестре услуг файла реестра;'порядковый номер записи об услуге для всего Реестра случаев (поле ''IDSERV'')';
     {'SCHET_ZAP',   'N', 6, 0}, ;  // номер позиции записи в реестре услуг счета;'поле ''IDSERV'' в реестре счетов';сформировать по индексу humans для schet > 0 для всех услуг
     {'DATE_END',    'D', 8, 0}, ; // дата окончания выполнения многоразовой услуги
     {'PC1',         'C', 10, 0}, ; // зарезервировано
     {'PC2',         'C', 10, 0}, ; // зарезервировано
     {'PN1',         'N', 10, 0}, ; //  зарезервировано
     {'PN2',         'N', 10, 0} ;  //  зарезервировано
    }
  Local mo_hu := {;
     {'KOD'      ,   'N',     7,     0}, ; // код листа учета больного в human.dbf
     {'DATE_U'   ,   'C',     4,     0}, ; // дата оказания услуги
     {'date_u2'  ,   'C',     4,     0}, ; // дата окончания оказания услуги
     {'U_KOD'    ,   'N',     6,     0}, ; // код услуги
     {'U_CENA'   ,   'N',    10,     2}, ; // цена услуги
     {'KOD_VR'   ,   'N',     4,     0}, ; // код врача
     {'KOD_AS'   ,   'N',     4,     0}, ; // код ассистента
     {'OTD'      ,   'N',     3,     0}, ; // код отделения
     {'KOL_1'    ,   'N',     3,     0}, ; // оплачиваемое количество услуг
     {'STOIM_1'  ,   'N',    10,     2}, ; // оплачиваемая стоимость услуги
     {'kod_diag' ,   'C',     6,     0}, ; // диагноз;перенести из основного диагноза
     {'ZF'       ,   'C',    30,     0}, ; // зубная формула (для стоматологий)/ID услуги ЛИС
     {'ID_U'     ,   'C',    36,     0}, ; // код записи об оказанной услуге;GUID оказанной услуги;создается при добавлении записи
     {'PROFIL'   ,   'N',     3,     0}, ; // профиль;по справочнику V002
     {'PRVS'     ,   'N',     9,     0}, ; // Специальность врача по справочнику V004, с минусом - по справочнику V015
     {'USL_TIP'  ,   'N',     1,     0}, ; // Тип онкоуслуги в соответствии со справочником N013
     {'HIR_TIP'  ,   'N',     1,     0}, ; // Тип хирургического лечения При USL_TIP=1 в соответствии со справочником N014
     {'LEK_TIP_L',   'N',     1,     0}, ; // Линия лекарственной терапии При USL_TIP=2 в соответствии со справочником N015
     {'LEK_TIP_V',   'N',     1,     0}, ; // Цикл лекарственной терапии	При USL_TIP=2 в соответствии со справочником N016
     {'LUCH_TIP' ,   'N',     1,     0}, ; // Тип лучевой терапии	При USL_TIP=3, 4 в соответствии со справочником N017
     {'PZTIP'    ,   'N',     1,     0}, ; // тип план-заказа от 1 до 4
     {'PZKOL'    ,   'N',     6,     2}, ; // SOD - Суммарная очаговая доза - При USL_TIP=3, 4
     {'OPLATA'   ,   'N',     1,     0}, ; // тип оплаты;от 1 до 4;
     {'REES_ZAP' ,   'N',     8,     0}, ; // номер записи в реестре услуг файла реестра;'порядковый номер записи об услуге для всего Реестра случаев (поле ''IDSERV'')';
     {'SCHET_ZAP',   'N',     6,     0} ;  // номер позиции записи в реестре услуг счета;'поле ''IDSERV'' в реестре счетов';сформировать по индексу humans для schet > 0 для всех услуг
    }
  Local schet := {;
     {'KOD',        'N',      6,      0}, ;
     {'NOMER_S',    'C',     10,      0}, ;
     {'PDATE',      'C',      4,      0}, ;
     {'VZROS_REB',  'N',      1,      0}, ; // 0-взрослый, 1 -ребенок, 2-подросток
     {'RAB_NERAB',  'N',      1,      0}, ; // 0-работающий, 1-неработающий, 2-нераб.дети
     {'MI_GIT'   ,  'N',      1,      0}, ; // 0-город, 1-область, 2-иногородний
     {'RAJON_GIT',  'N',      2,      0}, ; // код района места жительства
     {'MEST_INOG',  'N',      1,      0}, ; // 0-город, 1-область, 2-иногородний
     {'RAJON',      'N',      2,      0}, ; // код района финансирования
     {'VID_MP',     'N',      1,      0}, ; // вид медицинской помощи
     {'KOL',        'N',      4,      0}, ; // кол-во и сумма
     {'SUMMA',      'N',     13,      2}, ; //     включенных в счет
     {'LPU',        'N',      3,      0}, ;
     {'KOMU',       'N',      1,      0}, ;
     {'STR_CRB',    'N',      2,      0}, ;
     {'ISMO',       'C',      6,      0}, ; // код иногородней СМО
     {'MG',         'C',      2,      0}, ; // месяц/год окончания лечения иногороднего
     {'KOL_OST',    'N',      4,      0}, ; // кол-во и сумма
     {'SUMMA_OST',  'N',     13,      2}, ; //     оставшихся еще неоплаченными
     {'KOL_OPL',    'N',      4,      0}, ; // кол-во и сумма
     {'SUMMA_OPL',  'N',     13,      2}, ; //     действительно оплаченных
     {'FLAG_OPL',   'N',      1,      0}, ; // 0 - неопл., 1 - част., 2 - полностью
     {'ZA_SMO',     'N',      2,      0} ; // ЗаСМО
    }
  Local schet_ := {;
     {'IFIN',      'N',  2, 0}, ; // источник финансирования;1-ТФОМС(СМО), 2-ФФОМС, 0 прочее;попытаться конвертировать
     {'IS_MODERN', 'N',  2, 0}, ; // является модернизацией?;0-нет, 1-да для IFIN=1;для MEST_INOG=5 и VID_MP=6
     {'IS_DOPLATA', 'N',  2, 0}, ; // является доплатой?;0-нет, 1-да для IFIN=1 или 2;для MEST_INOG=6, 7
     {'BUKVA',     'C',  1, 0}, ; // буква на конце счета
     {'CODE',      'N', 12, 0}, ; // уникальный код;номер записи+mem_beg_rees
     {'NSCHET',    'C', 15, 0}, ; // номер счета;;перенести из поля nomer_s
     {'DSCHET',    'D',  8, 0}, ; // дата формирования счета;;перенести из поля c4tod(pdate)
     {'SMO',       'C',  5, 0}, ; // код получателя;реестровый номер СМО или 34 для иногородних;
     {'NYEAR',     'N',  4, 0}, ; // отчетный год;;
     {'NMONTH',    'N',  2, 0}, ; // отчетный месяц;;
     {'NN',        'N',  4, 0}, ; // порядковый номер пакета по СМО в данном отчетном периоде (5 знаков с лидирующими нулями)
     {'NAME_XML',  'C', 26, 0}, ; // имя XML-файла без расширения (и ZIP-архива)
     {'KOD_XML',   'N',  6, 0}, ; // ссылка на файл 'mo_xml'
     {'DATE_OUT',  'D',  8, 0}, ; // дата отправки в ТФОМС;;
     {'NUMB_OUT',  'N',  2, 0}, ; // номер отправки в ТФОМС;сколько раз всего записывали файл на носитель;
     {'XML_REESTR', 'N',  6, 0}, ; // ссылка на файл РЕЕСТРА в 'mo_xml'
     {'NREGISTR',  'N',  1, 0}, ; // отметка о регистрации 0-да, 1-ещё нет, 2-отказ
     {'DREGISTR',  'D',  8, 0}, ; // дата регистрации счета в ТФОМС
     {'SREGISTR',  'C', 20, 0}, ; // причина отказа в регистрации счета в ТФОМС
     {'SUMMAP',    'N', 15, 2}, ; // сумма, принятая к оплате СМО (ТФОМС);всего;
     {'SANK_MEK',  'N', 15, 2}, ; // финансовые санкции (МЭК);суммарные;
     {'SANK_MEE',  'N', 15, 2}, ; // финансовые санкции (МЭЭ);суммарные;
     {'SANK_EKMP', 'N', 15, 2} ;  // финансовые санкции (ЭКМП);суммарные;
    }
  Local schetd := {;
     {'KOD',       'N',  6, 0}, ;
     {'KOD2',      'N',  6, 0} ;
    }
  Local mo_rees := {; // Реестр сведений об оказанной медицинской помощи, направляемый в ТФОМС 'mo_rees'
     {'KOD',         'N', 6, 0}, ; // код реестра;номер записи;
     {'CODE',        'N', 8, 0}, ; // уникальный код;номер записи+mem_beg_rees
     {'NSCHET',      'N', 6, 0}, ; // номер реестра сведений;уникален для отчетных периодов, принадлежащих одному календарному году;
     {'DSCHET',      'D', 8, 0}, ; // дата реестра сведений;;
     {'NYEAR',       'N', 4, 0}, ; // отчетный год;;
     {'NMONTH',      'N', 2, 0}, ; // отчетный месяц;;
     {'NN',          'N', 5, 0}, ; // порядковый номер пакета;номер по порядку пакета в данном отчетном периоде (2 знака с лидирующим нулем);
     {'NAME_XML',    'C', 26, 0}, ; // имя XML-файла без расширения (и ZIP-архива)
     {'KOD_XML',     'N', 6, 0}, ; // ссылка на файл 'mo_xml'
     {'DATE_OUT',    'D', 8, 0}, ; // дата отправки в ТФОМС;;
     {'NUMB_OUT',    'N', 2, 0}, ; // номер отправки в ТФОМС;сколько раз всего записывали файл на носитель;
     {'KOL',         'N', 6, 0}, ; // количество пациентов в реестре;;
     {'SUMMA',       'N', 15, 2} ;  // сумма случаев в реестре;;
    }
  Local mo_xml := {; // Список отосланных и принятых XML-файлов 'mo_xml'
     {'KOD',         'N', 6, 0}, ; // код;номер записи
     {'FNAME',       'C', 26, 0}, ; // имя файла без расширения (и ZIP-архива)
     {'FNAME2',      'C', 26, 0}, ; // имя второго файла без расширения
     {'DFILE',       'D', 8, 0}, ; // дата создания файла
     {'TFILE',       'C', 5, 0}, ; // время создания файла
     {'DREAD',       'D', 8, 0}, ; // дата чтения/записи
     {'TREAD',       'C', 5, 0}, ; // время чтения/записи
     {'TIP_IN',      'N', 2, 0}, ; // тип принимаемого файла;3-ФЛК, 4-СП, 5-РАК, пишем в каталог XML_TF
     {'TIP_OUT',     'N', 2, 0}, ; // тип высылаемого файла;1-реестр, 2-счет, пишем в каталог XML_MO
     {'DWORK',       'D', 8, 0}, ; // дата обработки файла;
     {'TWORK1',      'C', 5, 0}, ; // время начала обработки;
     {'TWORK2',      'C', 5, 0}, ; // время окончания обработки;
     {'KOL1',        'N', 6, 0}, ; // количество пациентов (oplata=1)
     {'KOL2',        'N', 6, 0}, ; // количество пациентов (oplata=2)
     {'ANSREESTR',   'C', 1, 0}, ; // номер ответа на реестр (для реестра СП и ТК)
     {'REESTR',      'N', 6, 0}, ; // код реестра (отсылаемого или обработанного ТФОМС)
     {'SCHET',       'N', 6, 0} ;  // код счета (отсылаемого или обработанного СМО)
    }
  Local mo_hod := {; // Список отосланных ходатайств
     {'KOD',         'N', 6, 0}, ; // код;номер записи
     {'NYEAR',       'N', 4, 0}, ; // отчетный год
     {'NMONTH',      'N', 2, 0}, ; // отчетный месяц
     {'NN',          'N', 4, 0}, ; // порядковый номер пакета в календарном году
     {'KOL1',        'N', 4, 0}, ; // количество пациентов Капитал
     {'KOL2',        'N', 4, 0}, ; // количество пациентов Согаз
     {'KOL3',        'N', 4, 0}, ; // количество пациентов прочих
     {'FNAME',       'C', 26, 0}, ; // имя ZIP-архива без расширения
     {'DFILE',       'D', 8, 0}, ; // дата создания файла
     {'TFILE',       'C', 5, 0}, ; // время создания файла
     {'DATE_OUT',    'D', 8, 0}, ; // дата отправки в ТФОМС
     {'NUMB_OUT',    'N', 2, 0} ;  // номер отправки в ТФОМС;сколько раз всего записывали файл на носитель;
    }
  Local mo_hod_k := {; // cписок карточек пациентов в отосланных ходатайствах
     {'KOD',         'N', 6, 0}, ; // код по файлу 'mo_hod'
     {'KOD_K',       'N', 7, 0} ;  // код по картотеке
    }
  Local slugba := {;
     {'SHIFR',      'N',      3,      0}, ;
     {'NAME',       'C',     40,      0} ;
    }
  Local uslugi := {;
     {'kod',      'N',  4, 0}, ;
     {'kod_up',   'N',  4, 0}, ;
     {'name',     'C', 65, 0}, ;
     {'shifr',    'C', 10, 0}, ;
     {'shifr1',   'C', 10, 0}, ;
     {'slugba',   'N',  3, 0}, ;
     {'cena',     'N', 10, 2}, ;
     {'cena_d',   'N', 10, 2}, ;
     {'pcena',    'N', 10, 2}, ;
     {'pcena_d',  'N', 10, 2}, ;
     {'dms_cena', 'N', 10, 2}, ;
     {'pnds',     'N', 10, 2}, ;
     {'pnds_d',   'N', 10, 2}, ;
     {'is_nul',   'L',  1, 0}, ;
     {'is_nulp',  'L',  1, 0}, ;
     {'gruppa',   'N',  1, 0}, ;
     {'zf',       'N',  1, 0}, ;
     {'full_name', 'C', 255, 0}, ;
     {'PROFIL',   'N',  3, 0} ;  // профиль;по справочнику V002
    }
  Local uslugi1 := {;
    {'kod',     'N', 4, 0}, ;   // код услуги
    {'shifr1',  'C', 10, 0}, ;
    {'date_b',  'D', 8, 0} ;    // дата начала действия
   }
  Local mo_su := {;
     {'kod',     'N', 6, 0}, ;
     {'name',    'C', 65, 0}, ;
     {'shifr',   'C', 10, 0}, ;
     {'shifr1',  'C', 20, 0}, ;
     {'tip',     'N', 1, 0}, ;  // 5-для стомат.услуг 2016 года
     {'slugba',  'N', 3, 0}, ;
     {'zf',      'N', 1, 0}, ;
     {'PROFIL',  'N', 3, 0} ;  // профиль;по справочнику V002
    }
  Local uslugi_k := {;
     {'shifr', 'C', 10, 0}, ;
     {'name',  'C', 60, 0}, ;
     {'KOD_VR', 'N', 4, 0}, ; // код врача
     {'KOD_AS', 'N', 4, 0} ;  // код ассистента
    }
  Local uslugi1k := {;
     {'shifr',  'C', 10, 0}, ;
     {'shifr1', 'C', 10, 0} ;  // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    }
  Local ns_usl := {;
     {'name',   'C', 30, 0}, ;
     {'kol',    'N', 6, 0} ;
    }
  Local ns_usl_k := {;
     {'kod',    'N', 6, 0}, ;
     {'shifr',  'C', 10, 0} ;
    }
  Local usl_otd := {;
     {'kod',   'N',  4, 0}, ;
     {'otdel', 'C', 255, 0} ;
    }
  Local usl_uva := {;
      {'SHIFR'    ,   'C',    10,     0}, ; // шифр услуги (шаблон)
      {'KOD_VR'   ,   'N',     1,     0}, ; // не вводить код врача ?
      {'KOD_AS'   ,   'N',     1,     0}, ; // не вводить код ассистента ?
      {'KOD_VRN'  ,   'N',     1,     0}, ; // не вводить код направившего врача ?
      {'KOD_ASN'  ,   'N',     1,     0}}  // не вводить код направившего ассистента ?
  Local uch_usl := {;
    {'kod',     'N', 4, 0}, ;   // код услуги
    {'vkoef_v', 'N', 7, 4}, ;   // врач - УЕТ для взрослого
    {'akoef_v', 'N', 7, 4}, ;   // асс. - УЕТ для взрослого
    {'vkoef_r', 'N', 7, 4}, ;   // врач - УЕТ для ребенка
    {'akoef_r', 'N', 7, 4}, ;   // асс. - УЕТ для ребенка
    {'koef_v',  'N', 7, 4}, ;   // итого УЕТ для взрослого
    {'koef_r',  'N', 7, 4} ;    // итого УЕТ для ребенка
   }
  Local uch_usl1 := {;
    {'kod',     'N', 4, 0}, ;   // код услуги
    {'vkoef_v', 'N', 7, 4}, ;   // врач - УЕТ для взрослого
    {'akoef_v', 'N', 7, 4}, ;   // асс. - УЕТ для взрослого
    {'vkoef_r', 'N', 7, 4}, ;   // врач - УЕТ для ребенка
    {'akoef_r', 'N', 7, 4}, ;   // асс. - УЕТ для ребенка
    {'koef_v',  'N', 7, 4}, ;   // итого УЕТ для взрослого
    {'koef_r',  'N', 7, 4}, ;   // итого УЕТ для ребенка
    {'date_b',  'D', 8, 0} ;    // дата начала действия
   }
  Local uch_pers := {;
    {'kod',     'N', 4, 0}, ;
    {'god',     'N', 4, 0}, ;
    {'mes',     'N', 2, 0}, ;
    {'m_trud',  'N', 6, 1} ;
   }
  Local u_usl_5 := {;    // группы услуг для способа оплаты = 5
    {'tip',     'N', 2, 0}, ;  // 1-врач(ОМС), 2-асс.(ОМС), 3-врач(пл.), 4-асс.(пл.), 5-м/с(пл.), 6-сан.(пл.)
    {'usl_1',   'C', 10, 0}, ;  // шифр начальной услуги
    {'usl_2',   'C', 10, 0}, ;  // шифр конечной услуги
    {'_usl_1',  'C', 20, 0}, ;  // преобразованный шифр начальной услуги
    {'_usl_2',  'C', 20, 0}, ;  // преобразованный шифр конечной услуги
    {'procent', 'N', 5, 2}, ;  // процент оплаты
    {'procent2', 'N', 5, 2}, ;  // процент для оплаты без медсестры (м.б. = 0)
    {'razryad', 'N', 2, 0}, ;  // разряд (м.б. = 0)
    {'otdal',   'N', 1, 0} ;   // признак отдаленности (м.б. = 1)
   }
  Local u_usl_7 := {;    // группы услуг для способа оплаты = 7
    {'name',      'C',  20, 0}, ;  // наименование группы услуг
    {'variant',   'N',   1, 0}, ;  // вариант расчета (0, 1)
    {'v_uet_oms', 'N',   6, 2}, ;  // стоимость УЕТ ОМС для врача
    {'a_uet_oms', 'N',   6, 2}, ;  // стоимость УЕТ ОМС для ассистента
    {'v_uet_pl',  'N',   6, 2}, ;  // стоимость УЕТ пл.услуг для врача
    {'a_uet_pl',  'N',   6, 2}, ;  // стоимость УЕТ пл.услуг для ассистента
    {'v_uet_dms', 'N',   6, 2}, ;  // стоимость УЕТ ДМС для врача
    {'a_uet_dms', 'N',   6, 2}, ;  // стоимость УЕТ ДМС для ассистента
    {'usl_ins',   'C', 110, 0}, ;  // массив настроек группы услуг
    {'usl_del',   'C', 110, 0} ;   // массив настроек группы услуг
   }
  // для стоматологий
  Local kart_delz := {; // удалённые зубы
     {'KOD'      ,   'N',     7,     0}, ; // код по картотеке
     {'ZF'       ,   'N',     2,     0}, ; // зубная формула
     {'DATE_U'   ,   'C',     4,     0}}  // дата оказания услуги
  Local kart_st := {;
     {'KOD'      ,   'N',     7,     0}, ; // код по картотеке
     {'ZF'       ,   'N',     2,     0}, ; // зубная формула
     {'KOD_DIAG' ,   'C',     5,     0}, ; // шифр болезни
     {'TIP_BD'   ,   'N',     1,     0}, ; // тип БД (1-human_u, 2-hum_p_u, 3-hum_o_u, 4-human, 5-hum_p, 6-hum_o, 7-mo_hu)
     {'REC_BD'   ,   'N',     8,     0}, ; // номер записи в этой БД
     {'DATE_U'   ,   'C',     4,     0}, ; // дата оказания услуги
     {'U_KOD'    ,   'N',     4,     0}, ; // код услуги
     {'KOD_VR'   ,   'N',     4,     0}}  // код врача
  Local humanst := {;
     {'TIP_BD'   ,   'N',     1,     0}, ; // тип БД (1-human_u, 2-hum_p_u, 3-hum_o_u, 4-human, 5-hum_p, 6-hum_o)
     {'REC_BD'   ,   'N',     8,     0}, ; // номер записи в этой БД
     {'KOD_DIAG' ,   'C',     5,     0}, ; // шифр 1-ой осн.болезни
     {'ZF'       ,   'C',    30,     0}}  // зубная формула
  Local mo_uch := {; // Учреждения 'mo_uch'
     {'KOD',       'N', 3, 0}, ; // код;;из 'l_ucher'
     {'NAME',      'C', 30, 0}, ; // наименование;сократили с 70 до 30;'из ''l_ucher'''
     {'SHORT_NAME', 'C', 5, 0}, ; // сокращенное наименование;;
     {'IS_TALON',  'N', 1, 0}, ; // учреждение работает со статталоном?;0-нет, 1-да;оставить 0, или поставить 1 в зависимости от массива UCHER_TALON (см. c_allpub.prg строка 273)
     {'IDCHIEF',   'N', 4, 0}, ; // номер записи в файле mo_pers. Ссылка на руководителя учреждения
     {'ADDRESS',  'C', 150, 0}, ; // адрес нахождения учреждения
     {'COMPET',    'C', 40, 0}, ; // документ утверждения руководителя
     {'DBEGIN',    'D', 8, 0}, ; // дата начала действия;;поставить 01.01.1993
     {'DEND',      'D', 8, 0} ;  // дата окончания действия;;поставить 31.12.2000, или оставить пустым в зависимости от массива UCHER_ARRAY (см. b_init.prg)
    }
  Local mo_otd := {; // Отделения 'mo_otd'
     {'KOD',       'N', 3, 0}, ; // код
     {'NAME',      'C', 30, 0}, ; // наименование
     {'KOD_LPU',   'N', 3, 0}, ; // код учреждения
     {'SHORT_NAME', 'C', 5, 0}, ; // сокращенное наименование
     {'DBEGIN',    'D', 8, 0}, ; // дата начала действия в задаче ОМС
     {'DEND',      'D', 8, 0}, ; // дата окончания действия в задаче ОМС
     {'DBEGINP',   'D', 8, 0}, ; // дата начала действия в задаче 'Платные услуги'
     {'DENDP',     'D', 8, 0}, ; // дата окончания действия в задаче 'Платные услуги'
     {'DBEGINO',   'D', 8, 0}, ; // дата начала действия в задаче 'Ортопедия'
     {'DENDO',     'D', 8, 0}, ; // дата окончания действия в задаче 'Ортопедия'
     {'PLAN_VP',   'N', 6, 0}, ; // план врачебных приемов
     {'PLAN_PF',   'N', 6, 0}, ; // план профилактик
     {'PLAN_PD',   'N', 6, 0}, ; // план приемов на дому
     {'PROFIL',    'N', 3, 0}, ; // профиль для данного отделения по справочнику V002, по умолчанию прописывать его в лист учета и в услугу
     {'PROFIL_K',  'N', 3, 0}, ; // профиль койки для данного отделения по справочнику V020, по умолчанию прописывать его в лист учета
     {'IDSP',      'N', 2, 0}, ; // код способа оплаты мед.помощи для данного отделения по справочнику V010
     {'IDUMP',     'N', 2, 0}, ; // код условий оказания медицинской помощи
     {'IDVMP',     'N', 2, 0}, ; // код видов медицинской помощи
     {'TIP_OTD',   'N', 2, 0}, ; // тип отд-ия: 1-приёмный покой
     {'KOD_PODR',  'C', 25, 0}, ; // код подразделения по паспорту ЛПУ
     {'TIPLU',     'N', 2, 0}, ; // тип листа учёта: 0-стандарт, 1-СМП, 2-ДДС, 3-ДВН, и т.д.
     {'CODE_DEP',  'N', 3, 0}, ; // код отделения по кодировке ТФОМС из справочника SprDep - 2018 год
     {'ADRES_PODR', 'N', 2, 0}, ; // код удалённого подразделения по массиву glob_arr_podr - 2017 год
     {'ADDRESS',  'C', 150, 0}, ; // адрес нахождения учреждения
     {'CODE_TFOMS', 'C', 6, 0}, ; // код подразделения по кодировке ТФОМС - 2017 год
     {'KOD_SOGL',  'N', 10, 0}, ; // код согласования одного отделения с программой SDS
     {'SOME_SOGL', 'C', 255, 0} ;  // код согласования нескольких отделений с программой SDS
    }
  Local mo_uchvr := {; // привязка участковых врачей к участкам
      {'uch',   'N', 2, 0}, ;
      {'is',    'N', 2, 0}, ;
      {'vrach', 'N', 4, 0}, ;
      {'vrachv', 'N', 4, 0}, ;
      {'vrachd', 'N', 4, 0} ;
    }
  Local mo_pers := {; // Персонал 'mo_pers'
     {'KOD',       'N', 4, 0}, ; // код
     {'UCH',       'N', 3, 0}, ; // код учреждения
     {'OTD',       'N', 3, 0}, ; // код отделения
     {'NAME_DOLJ', 'C', 30, 0}, ; // наименование должности
     {'KATEG',     'N', 1, 0}, ; // код категории
     {'FIO',       'C', 50, 0}, ; // ФИО
     {'STAVKA',    'N', 4, 2}, ; // ставка
     {'VID',       'N', 1, 0}, ; // вид работы;0-основной, 1-совмещение
     {'VR_KATEG',  'N', 1, 0}, ; // код врачебной категории 'kateg'
     {'DOLJKAT',   'C', 15, 0}, ; // наименование должности по категории
     {'D_KATEG',   'D', 8, 0}, ; // дата подтверждения категории
     {'SERTIF',    'N', 1, 0}, ; // наличие сертификата;0-нет, 1-да
     {'D_SERTIF',  'D', 8, 0}, ; // дата подтверждения сертификата
     {'PRVS',      'N', 9, 0}, ; // Специальность врача по справочнику V004
     {'PRVS_NEW',  'N', 4, 0}, ; // Специальность врача по справочнику V015
     {'PRVS_021',  'N', 4, 0}, ; // Специальность врача по справочнику V021
     {'PROFIL',    'N', 3, 0}, ; // профиль для данной специальности по справочнику V002
     {'TAB_NOM',   'N', 5, 0}, ; // табельный номер
     {'SVOD_NOM',  'N', 5, 0}, ; // сводный табельный номер (вводится, если у человека несколько таб.номеров, используется в сводной статистике по сотруднику)
     {'KOD_DLO',   'N', 5, 0}, ; // код врача для выписки рецептов по ДЛО
     {'UROVEN',    'N', 2, 0}, ; // уровень оплаты (от 1 до 99)
     {'OTDAL',     'N', 1, 0}, ; // признак отдаленности;0-нет, 1-да
     {'SNILS',     'C', 11, 0}, ; // СНИЛС врача
     {'DBEGIN',    'D', 8, 0}, ; // дата начала действия
     {'DEND',      'D', 8, 0} ;  // дата окончания действия
    }
  // приёмный покой
  Local mo_kpred := {;  // справочник представителей (при картотеке)
     {'KOD'      ,   'N',     7,     0}, ; // код (номер записи по БД kartotek)
     {'NN'       ,   'N',     1,     0}, ; // номер представителя
     {'FIO'      ,   'C',    50,     0}, ; // Ф.И.О.
     {'STATUS'   ,   'N',     2,     0}, ; // Cтатус сопр.лица: 0-прочий, 1-родитель, 2-опекун
     {'IS_UHOD'  ,   'N',     1,     0}, ; // 0-нет, 1-по уходу за больным
     {'IS_FOOD'  ,   'N',     1,     0}, ; // 0-нет, 1-с питанием
     {'DATE_R'   ,   'D',     8,     0}, ; // дата рождения
     {'ADRES'    ,   'C',    50,     0}, ; // адрес
     {'MR_DOL'   ,   'C',    50,     0}, ; // место работы
     {'PHONE'    ,   'C',    11,     0}, ; // контактный телефон
     {'PASPORT'  ,   'C',    15,     0}, ; // паспортные данные
     {'POLIS'    ,   'C',    25,     0} ;  // данные о страховом полисе
    }
  Local mo_ppst := {;  // справочник - столы
     {'NAME'     ,   'C',    10,     0}, ;
     {'TIP'      ,   'N',     1,     0} ;  // 0-стационар, 1-дн.стационар
    }
  Local mo_ppadd := {;  // перевод из отделения в отделение (приёмный покой)
     {'KOD'      ,   'N',     7,     0}, ; // код (номер записи по БД pp_pokoj)
     {'KOD_H'    ,   'N',     7,     0} ;  // код по БД human
    }
  Local mo_ppper := {;  // перевод из отделения в отделение (приёмный покой)
     {'KOD'      ,   'N',     7,     0}, ; // код (номер записи по БД pp_pokoj)
     {'N_DATA'   ,   'D',     8,     0}, ; // дата перевода
     {'N_TIME'   ,   'C',     5,     0}, ; // время перевода
     {'LPU'      ,   'N',     3,     0}, ; // код учреждения
     {'OTD'      ,   'N',     3,     0}, ; // код отделения (в какое отд-ие переведён)
     {'STOL'     ,   'N',     3,     0}, ; // стол
     {'DATE_VVOD',   'D',     8,     0}, ; // дата ввода данных
     {'KOD_P'    ,   'C',     1,     0} ;  // код пользователя
    }
  Local mo_ppdia := {;  // длинные строки в базе приёмного покоя
     {'KOD'      ,   'N',     7,     0}, ; // код (номер записи по БД pp_pokoj)
     {'TIP'      ,   'N',     1,     0}, ; // тип строки (1-диаг.напр.учреждения, 2-диаг.приёмного отд-ия, 3-побочное действие лекарств)
     {'NAME'     ,   'C',   100,     0} ;  // содержание строки
    }
  Local mo_pp := {;  // база данных приёмного покоя
     {'KOD'      ,   'N',     7,     0}, ; // код (номер записи)
     {'KOD_K'    ,   'N',     7,     0}, ; // код по картотеке
     {'TIP_H'    ,   'N',     1,     0}, ; // пока 1-human, 2-hum_p, 3-...
     {'KOD_H'    ,   'N',     7,     0}, ; // код по БД human
     {'REG_LECH' ,   'N',     1,     0}, ; // 1-стационарно, 2, 3, 4-дневной стационар
     {'UCH_DOC'  ,   'C',    10,     0}, ; // номер медицинской карты
     {'NOVOR'    ,   'N',     2,     0}, ; // признак новорожденного;0-нет, 1, 2 - порядковый номер новорожденного ребенка
     {'DATE_R2'  ,   'D',     8,     0}, ; // дата рождения ребенка;для NOVOR > 0;
     {'POL2'     ,   'C',     1,     0}, ; // пол ребенка;для NOVOR > 0;
     {'RAB_NERAB',   'N',    10,     0}, ; // социальный статус
     {'KATEGOR'  ,   'N',     2,     0}, ; // от 1 до ...
     {'KOMU'     ,   'N',     1,     0}, ; // от 1 до 5
     {'STR_CRB'  ,   'N',     2,     0}, ; // код стр.компании, комитета и т.п.
     {'VID_OPL'  ,   'N',     3,     0}, ; // вид оплаты (1-ОМС, 2-ДМС, 3-бюджет, 4-платные, 5-другое)
     {'KEM_NAPR' ,   'C',     6,     0}, ; // кем направлен (из справочника ЛПУ)
     {'KEM_DOST' ,   'N',     2,     0}, ; // кем доставлен (внутр.справочник)
     {'KOD_VR'   ,   'N',     4,     0}, ; // код врача
     {'SOST_OP'  ,   'N',     1,     0}, ; // 0-нет, 1-алкогольное, 2-наркотическое
     {'GOSPIT0'  ,   'N',     1,     0}, ; // 1-первичн., 2-повторн.
     {'GOSPIT1'  ,   'N',     1,     0}, ; // 0-в плановом порядке, 1-по экстренн.показаниям
     {'GOSPIT2'  ,   'N',     1,     0}, ; // 1-6часов, 2-7\24часа, 3-24часа\и\более
     {'TRAVMA'   ,   'N',     2,     0}, ; // тип травмы (внутр.справочник)
     {'LPU'      ,   'N',     3,     0}, ; // код учреждения
     {'OTD'      ,   'N',     3,     0}, ; // код отделения
     {'STOL'     ,   'N',     3,     0}, ; // стол
     {'N_DATA'   ,   'D',     8,     0}, ; // дата поступления
     {'N_TIME'   ,   'C',     5,     0}, ; // время поступления
     {'IS_GOSPIT',   'N',     1,     0}, ; // 0-госпитализирован, 1-нет
     {'PR_GOSPIT',   'N',     2,     0}, ; // почему не госпитализирован (внутр.справочник)
     {'G_DATA'   ,   'D',     8,     0}, ; // дата госпитализации
     {'G_TIME'   ,   'C',     5,     0}, ; // время госпитализации
     {'K_DATA'   ,   'D',     8,     0}, ; // дата окончания лечения
     {'K_TIME'   ,   'C',     5,     0}, ; // время выписки
     {'KOJKO_DNI',   'N',     3,     0}, ; // продолжительность госпитализации
     {'ISHOD1'   ,   'N',     1,     0}, ; // исход
     {'ISHOD2'   ,   'N',     1,     0}, ; // исход
     {'BOLNICH'  ,   'N',     1,     0}, ; // больничный (0-нет, 1-да, 2-по уходу)
     {'DATE_RODIT',  'D',     8,     0}, ; // дата рождения родителя
     {'POL_RODIT',   'C',     1,     0}, ; // пол родителя
     {'DATE_B_1' ,   'D',     8,     0}, ; // дата начала больничного
     {'DATE_B_2' ,   'D',     8,     0}, ; // дата окончания больничного
     {'DATE_VVOD',   'D',     8,     0}, ; // дата добавления листа учета
     {'KOD_P'    ,   'C',     1,     0} ;  // код пользователя
    }
  // платные услуги
  Local hum_p := {;
     {'KOD_K'    ,   'N',     7,     0}, ; // код по картотеке
     {'N_KVIT'   ,   'N',     5,     0}, ; // номер квитанционной книжки
     {'KV_CIA'   ,   'N',     6,     0}, ; // номер квитанции
     {'KOD_DIAG' ,   'C',     5,     0}, ; // шифр 1-ой осн.болезни
     {'SOPUT_B1' ,   'C',     5,     0}, ; // шифр 1-ой сопутствующей болезни
     {'SOPUT_B2' ,   'C',     5,     0}, ; // шифр 2-ой сопутствующей болезни
     {'SOPUT_B3' ,   'C',     5,     0}, ; // шифр 3-ой сопутствующей болезни
     {'SOPUT_B4' ,   'C',     5,     0}, ; // шифр 4-ой сопутствующей болезни
     {'SOPUT_B5' ,   'C',     5,     0}, ; // шифр 5-ой сопутствующей болезни
     {'LPU'      ,   'N',     3,     0}, ; // код учреждения
     {'OTD'      ,   'N',     3,     0}, ; // код отделения
     {'N_DATA'   ,   'D',     8,     0}, ; // дата начала лечения
     {'K_DATA'   ,   'D',     8,     0}, ; // дата окончания лечения
     {'KOD_VR'   ,   'N',     4,     0}, ; // код направившего врача
     {'CENA'     ,   'N',    10,     2}, ; // стоимость лечения
     {'TIP_USL'  ,   'N',     1,     0}, ; // 0-платная, 1-д/страх., 2-в/зачет
     {'PR_SMO'   ,   'N',     6,     0}, ; // код предприятия / добровольного СМО
     {'D_POLIS'  ,   'C',    25,     0}, ; // полис по добровольному страх-ию
     {'GP_NOMER' ,   'C',    16,     0}, ; // № гарантийного письма по ДМС
     {'GP_DATE'  ,   'D',     8,     0}, ; // дата гарантийного письма по ДМС
     {'GP2NOMER' ,   'C',    16,     0}, ; // № 2-го гарантийного письма по ДМС
     {'GP2DATE'  ,   'D',     8,     0}, ; // дата 2-го гарантийного письма по ДМС
     {'PDATE'    ,   'C',     4,     0}, ; // дата оплаты услуги
     {'DATE_VOZ' ,   'C',     4,     0}, ; // дата возврата
     {'SUM_VOZ'  ,   'N',    10,     2}, ; // сумма возврата
     {'SBANK'    ,   'N',    10,     2}, ; // сумма, оплаченная по банковской карте
     {'DATE_CLOSE',  'D',     8,     0}, ; // дата закрытия листа учета
     {'IS_KAS'   ,   'N',     1,     0}, ; // касса(0-без кассы, 1-чек, 2-нет чека)
     {'PLAT_FIO' ,   'C',    40,     0}, ; // ФИО плательщика
     {'PLAT_INN' ,   'C',    12,     0}, ; // ИНН плательщика
     {'FR_DATA'  ,   'C',     4,     0}, ; // дата записи  //10.05
     {'FR_TIME'  ,   'N',     5,     0}, ; // время записи //10.05
     {'KOD_OPER' ,   'N',     3,     0}, ; // код оператора //10.2011
     {'FR_zavod' ,   'C',    16,     0}, ; // зав.номер кассы //08.2017
     {'FR_TIP'   ,   'N',     1,     0}, ; // тип кассы  01.17
     {'VZFR_DATA',   'C',     4,     0}, ; // возврат дата записи  //01.17
     {'VZFR_TIME',   'N',     5,     0}, ; // возврат время записи  //01.17
     {'VZKOD_OPER',  'N',     3,     0}, ; // возврат код оператора //01.17
     {'VZFR_zavod',  'C',    16,     0}, ; // возврат зав.номер кассы //08.17
     {'VZFR_TIP' ,   'N',     1,     0}, ; // возврат тип кассы  //01.17
     {'FR_TIPKART',  'N',     1,     0}, ; // ТИП банковской карты  01.17
     {'I_POST',      'C',    30,     0} ;  // электронная почта 01.17
    }
  Local hum_p_u := {;
     {'KOD'      ,   'N',     7,     0}, ; // код листа учета (по БД hum_p)
     {'DATE_U'   ,   'C',     4,     0}, ; // дата оказания услуги
     {'U_KOD'    ,   'N',     4,     0}, ; // код услуги
     {'U_CENA'   ,   'N',    10,     2}, ; // цена услуги
     {'U_KOEF'   ,   'N',     5,     3}, ; // коэф-т индексации услуги
     {'KOD_VR'   ,   'N',     4,     0}, ; // код врача
     {'KOD_AS'   ,   'N',     4,     0}, ; // код ассистента
     {'MED1'     ,   'N',     4,     0}, ; // код медсестры
     {'MED2'     ,   'N',     4,     0}, ; // код медсестры
     {'MED3'     ,   'N',     4,     0}, ; // код медсестры
     {'SAN1'     ,   'N',     4,     0}, ; // код санитарки
     {'SAN2'     ,   'N',     4,     0}, ; // код санитарки
     {'SAN3'     ,   'N',     4,     0}, ; // код санитарки
     {'KOL'      ,   'N',     3,     0}, ; // количество услуг
     {'STOIM'    ,   'N',    10,     2}, ; // итоговая стоимость услуги
     {'T_EDIT'   ,   'N',     1,     0}, ; // редактировалась ли сумма
     {'OTD'      ,   'N',     3,     0} ;  // код отделения
    }
  Local plat_ms := {;
     {'TIP',        'N',      1,      0}, ;
     {'TAB_NOM',    'N',      5,      0}, ;
     {'FIO',        'C',     20,      0} ;
    }
  Local plat_vz := {;
     {'TIP',        'N',      1,     0}, ; // 1-добр.страх., 2-взаимозачет
     {'PR_SMO',     'N',      6,     0}, ; // код СМО/предприятия
     {'KOD_K',      'N',      7,     0}, ; // код по картотеке
     {'DATE_OPL',   'D',      8,     0}, ; // дата оплаты
     {'TIP_OPL' ,   'N',      1,     0}, ; // тип оплаты (0-б/н, 1-нал, 2-вз/з)
     {'SUMMA_OPL',  'N',     10,     2}, ; // сумма оплаты
     {'PRIM'    ,   'C',     15,     0} ;  // примечание
    }
  Local pu_cena := {;
     {'kod_date',   'N',      4,      0}, ;
     {'kod_usl',    'N',      4,      0}, ;
     {'pcena',      'N',     10,      2}, ;
     {'pcena_d',    'N',     10,      2}, ;
     {'dms_cena',   'N',     10,      2} ;
    }
  Local hum_plat := {;
     {'KOD'      ,   'N',     7,     0}, ; // код листа учета (по БД hum_p)
     {'ADRES'    ,   'C',    50,     0}, ; // Адрес плательщика
     {'PASPORT'  ,   'C',    15,     0}, ; // Паспорт плательщика
     {'I_POST'   ,   'C',    30,     0}, ; // электронная почта 01.17
     {'PHONE'    ,   'C',    11,     0}, ;  // телефон
     {'kemvyd'   ,   'N',     6,     0}, ; // кем выдан документ;'справочник ''s_kemvyd'''
     {'kogdavyd' ,   'D',     8,     0} ;  // когда выдан документ;
    }
  Local _payments := {; // файл содержащий инфрмацию о платежах платных услуг
    { 'IDCONTR',    'N', 7,  0 }, ;    // ID договора, recno() из hum_p.dbf
    { 'PAYMENT',    'N', 1,  0 }, ;    // тип платежа, 0-приход, 1-возврат прихода (по умолчанию приход)
    { 'TYPEPAYER',  'N', 1,  0 }, ;    // тип плательщика
    { 'IDPAYER',    'N', 7,  0 }, ;    // id плательщика
    { 'DATE',       'D', 8,  0 }, ;    // дата платежа/возврата
    { 'TIME',       'N', 5,  0 }, ;    // время платежа/возврата
    { 'NUMBER',     'N', 6,  0 }, ;    // номер чека, платежного документа
    { 'TYPESIGN',   'N', 1,  0 }, ;    // признак способа расчета (по умолчанию - предоплата 100%)
    { 'ITEMSIGN',   'N', 2,  0 }, ;    // признак предмета расчета (по умолчанию - услуга)
    { 'TOTAL',      'N', 10,  2 }, ;    // сумма платежа/возврата (Всего)
    { 'TOTALBANK',  'N', 10,  2 }, ;    // сумма платежа/возврата банковское (б/н, карты и т.п.)
    { 'FRNUMBER',   'C', 16,  0 }, ;    // заводской номер ККТ, при оплате/возврате через ККТ
    { 'IDUSER',     'N', 4,  0 } ;     // ID-пользователя проводившего оплату/возврат
  }
  Local _payer := { ;
    { 'NAME',       'C', 50,    0 }, ;        // Ф.И.О. плательщика
    { 'VID_UD',     'N',  2,    0 }, ;        // вид удостоверения личности
    { 'SER_UD',     'C', 10,    0 }, ;        // серия удостоверения личности
    { 'NOM_UD',     'C', 20,    0 }, ;        // номер удостоверения личности
    { 'KEMVYD',     'N',  6,    0 }, ;        // кем выдан документ из справочника s_kemvyd
    { 'KOGDAVYD',   'D',  8,    0 }, ;        // когда выдан документ
    { 'INN',        'C', 12,    0 }, ;        // ИНН плательщика
    { 'ADDRESS',    'C', 100,    0 }, ;        // адрес регистрации плательщика
    { 'PHONE',      'C', 10,    0 }, ;        // телефон плательщика
    { 'IDSPRAV',    'N',  7,    0 } ;         // ID ссылки на выданную справку
  }
  // ортопедия
  Local diag_ort := {;
     {'SHIFR'    ,   'C',     6,     0}, ; // шифр диагноза
     {'NAME'     ,   'C',    40,     0}, ;
     {'col_f39'  ,   'N',     2,     0}}  // № колонки в форме тип 39
  Local orto_uva := {;
     {'SHIFR'    ,   'C',    10,     0}, ; // шифр услуги (шаблон)
     {'KOD_VR'   ,   'N',     1,     0}, ; // не вводить код врача ?
     {'KOD_AS'   ,   'N',     1,     0}, ; // не вводить код зубного техника ?
     {'KOD_MS'   ,   'N',     1,     0}}  // не вводить код медсестры ?
  Local hum_o := {;
     {'KOD_K'    ,   'N',     7,     0}, ; // код по картотеке
     {'NAR_Z'    ,   'N',     5,     0}, ; // номер наряда-заказа
     {'DATA'     ,   'D',     8,     0}, ; // дата наряда-заказа
     {'LPU'      ,   'N',     3,     0}, ; // код учреждения
     {'OTD'      ,   'N',     3,     0}, ; // код отделения
     {'TIP_USL'  ,   'N',     1,     0}, ; // 0-платная, 1-бесплатная, 2-взаимозачет, 3-д/страх.
     {'PR_SMO'   ,   'N',     6,     0}, ; // код предприятия / добровольного СМО
     {'UCH_DOC'  ,   'C',    10,     0}, ; // вид и номер учетного документа
     {'KOD_VR'   ,   'N',     4,     0}, ; // код врача
     {'KOD_AS'   ,   'N',     4,     0}, ; // код зубного техника
     {'KOD_DIAG' ,   'C',     6,     0}, ; // шифр болезни
     {'KOD_DIAG2',   'C',     6,     0}, ; // шифр 2-ой осн.болезни
     {'KOD_DIAG3',   'C',     6,     0}, ; // шифр 3-ой осн.болезни
     {'KOD_DIAG4',   'C',     6,     0}, ; // шифр 3-ой осн.болезни
     {'KOD_DIAG5',   'C',     6,     0}, ; // шифр 3-ой осн.болезни
     {'KOD_DIAG6',   'C',     6,     0}, ; // шифр 3-ой осн.болезни
     {'KOD_DIAG7',   'C',     6,     0}, ; // шифр 3-ой осн.болезни
     {'N_DATA'   ,   'D',     8,     0}, ; // дата начала лечения
     {'K_DATA'   ,   'D',     8,     0}, ; // дата окончания лечения
     {'CENA'     ,   'N',    10,     2}, ; // стоимость лечения
     {'CENA_OPL' ,   'N',    10,     2}, ; // оплаченная стоимость лечения
     {'KOL_POS'  ,   'N',     2,     0}, ; // количество посещений
     {'N_OCH'    ,   'C',    10,     0}, ; // номер очереди (для бесплатных больных)
     {'PRICH_POL',   'N',     3,     0}, ; // причины поломки протеза
     {'KOL_MOSTP',   'N',     1,     0}, ; // количество мостовидных протезов
     {'KOL_CELNL',   'N',     1,     0}, ; // в т.ч. цельнолитых
     {'NDIAG'    ,   'C',    10,     0}, ; // орто.диагнозы   (для 39)
     {'VPROTEZ'  ,   'N',     1,     0}, ; // вид протеза     (для 39)
     {'NPROTEZ'  ,   'N',     1,     0}, ; // кол-во протезов (для 39)
     {'KOL_PR1'  ,   'N',     1,     0}, ; // количество протезов Т1
     {'KOL_PR2'  ,   'N',     1,     0}, ; // количество протезов Т2
     {'KOL_PR3'  ,   'N',     1,     0}, ; // количество протезов Т3
     {'KOL_PR4'  ,   'N',     1,     0}, ; // количество протезов Т4
     {'KOL_PR5'  ,   'N',     1,     0}, ; // количество протезов Т5
     {'KOL_PR6'  ,   'N',     1,     0}, ; // количество протезов Т6
     {'PRIM'     ,   'C',    15,     0}, ; // примечание
     {'PLAT_FIO' ,   'C',    40,     0}, ; // ФИО плательщика
     {'PLAT_INN' ,   'C',    12,     0} ;  // ИНН плательщика
    }
  Local hum_o_o := {;
     {'KOD'      ,   'N',     7,     0}, ; // код больного (листа учёта)
     {'PDATE'    ,   'C',     4,     0}, ; // дата оплаты
     {'N_KVIT'   ,   'N',     5,     0}, ; // номер квитанционной книжки
     {'KV_CIA'   ,   'N',     6,     0}, ; // номер квитанции
     {'TIP_OPL'  ,   'N',     1,     0}, ; // тип оплаты (0-аванс, 1-ок.опл., 2-напыление)
     {'TIP_USL'  ,   'N',     1,     0}, ; // 0-платная, 1-бесплатная, 2-взаимозачет, 3-д/страх.
     {'PR_SMO'   ,   'N',     6,     0}, ; // код предприятия / добровольного СМО
     {'D_POLIS'  ,   'C',    25,     0}, ; // полис по добровольному страх-ию
     {'GP_NOMER' ,   'C',    16,     0}, ; // № гарантийного письма по ДМС
     {'GP_DATE'  ,   'D',     8,     0}, ; // дата гарантийного письма по ДМС
     {'CENA_OPL' ,   'N',    10,     2}, ; // сумма оплаты
     {'SBANK'    ,   'N',    10,     2}, ; // сумма, оплаченная по банковской карте
     {'PRIM'     ,   'C',    15,     0}, ; // примечание
     {'KOD_REG'  ,   'N',     4,     0}, ; // код регистратора
     {'IS_KAS'   ,   'N',     1,     0}, ; // касса (0-без кассы, 1-чек, 2-нет чека)
     {'FR_DATA'  ,   'C',     4,     0}, ; // дата записи  //30.09
     {'FR_TIME'  ,   'N',     5,     0}, ; // время записи //30.09
     {'DATE_VOZ' ,   'C',     4,     0}, ; // дата возврата  // 05.10.12
     {'SUM_VOZ'  ,   'N',    10,     2}, ; // сумма возврата // 05.10.12
     {'FR_zavod' ,   'C',    16,     0}, ; // зав.номер кассы //08.2017
     {'FR_TIP'   ,   'N',     1,     0}, ; // тип кассы  01.17
     {'VZFR_DATA',   'C',     4,     0}, ; // возврат дата записи  //01.17
     {'VZFR_TIME',   'N',     5,     0}, ; // возврат время записи  //01.17
     {'VZKOD_OPER',  'N',     3,     0}, ; // возврат код оператора //01.17
     {'VZFR_zavod',  'C',    16,     0}, ; // возврат зав.номер кассы //08.17
     {'VZFR_TIP' ,   'N',     1,     0}, ; // возврат тип кассы  //01.17
     {'FR_TIPKART',  'N',     1,     0}, ; // ТИП банковской карты  01.17
     {'I_POST',      'C',    30,     0} ;  // электронная почта 01.17
    }
  Local hum_o_u := {;
     {'KOD'      ,   'N',     7,     0}, ; // код больного
     {'TIP_USL'  ,   'N',     1,     0}, ; // 0-платная, 1-бесплатная, 2-взаимозачет, 3-д/страх.
     {'DATE_U'   ,   'C',     4,     0}, ; // дата оказания услуги
     {'U_KOD'    ,   'N',     4,     0}, ; // код услуги
     {'U_CENA'   ,   'N',    10,     2}, ; // цена услуги
     {'U_KOEF'   ,   'N',     5,     3}, ; // коэф-т индексации услуги
     {'KOD_VR'   ,   'N',     4,     0}, ; // код врача
     {'KOD_AS'   ,   'N',     4,     0}, ; // код зубного техника
     {'KOD_MS'   ,   'N',     4,     0}, ; // код медсестры
     {'KOL'      ,   'N',     7,     3}, ; // количество услуг
     {'STOIM'    ,   'N',    10,     2}, ; // итоговая стоимость услуги
     {'T_EDIT'   ,   'N',     1,     0}, ; // редактировалась ли сумма
     {'OTD'      ,   'N',     3,     0}}  // код отделения
  Local hum_orpl := {;
     {'KOD'      ,   'N',     7,     0}, ; // код листа учета (по БД hum_o)
     {'ADRES'    ,   'C',    50,     0}, ; // Адрес плательщика
     {'PASPORT'  ,   'C',    15,     0}, ; // Паспорт плательщика
     {'I_POST'   ,   'C',    30,     0}, ;  // электронная почта 01.17
     {'PHONE'    ,   'C',    11,     0} ;  // телефон
    }
  // касса МО
  Local kas_pl := {;
     {'KOD_K'    ,   'N',     7,     0}, ; // код по картотеке
     {'N_CHEK'   ,   'N',     8,     0}, ; // номер чека
     {'SMENA'    ,   'N',     1,     0}, ; // номер смены
     {'K_DATA'   ,   'D',     8,     0}, ; // дата оплаты (начала лечения)
     {'CENA'     ,   'N',    10,     2}, ; // стоимость лечения
     {'SBANK'    ,   'N',    10,     2}, ; // сумма, оплаченная по банковской карте
     {'FR_DATA'  ,   'C',     4,     0}, ; // дата записи  //10.05
     {'FR_TIME'  ,   'N',     5,     0}, ; // время записи //10.05
     {'KOD_OPER' ,   'N',     3,     0}, ; // код оператора
     {'FR_zavod' ,   'C',    16,     0}, ; // зав.номер кассы //08.2017
     {'FR_TIP'   ,   'N',     1,     0}, ; // тип кассы  01.17
     {'VZFR_DATA',   'C',     4,     0}, ; // возврат дата записи  //01.17
     {'VZFR_TIME',   'N',     5,     0}, ; // возврат время записи  //01.17
     {'VZKOD_OPER',  'N',     3,     0}, ; // возврат код оператора //01.17
     {'VZFR_zavod',  'C',    16,     0}, ; // возврат зав.номер кассы //08.17
     {'VZFR_TIP' ,   'N',     1,     0}, ; // возврат тип кассы  //01.17
     {'FR_TIPKART',  'N',     1,     0}, ; // ТИП банковской карты  01.17
     {'I_POST',      'C',    30,     0} ;  // электронная почта 01.17
    }
  Local kas_pl_u := {;
     {'KOD'      ,   'N',     7,     0}, ; // код по БД 'kas_pl'
     {'KOD_VR'   ,   'N',     4,     0}, ; // код врача
     {'U_KOD'    ,   'N',     4,     0}, ; // код услуги
     {'U_CENA'   ,   'N',    10,     2}, ; // цена услуги
     {'KOL'      ,   'N',     3,     0}, ; // количество услуг
     {'STOIM'    ,   'N',    10,     2}}  // итоговая стоимость услуги
  Local kas_ort := {;
     {'KOD_K'    ,   'N',     7,     0}, ; // код по картотеке
     {'VID'      ,   'N',     1,     0}, ; // вид наряда (услуги)
     {'TIP_N'    ,   'N',     1,     0}, ; // тип (1-сложный, 2-простой, 0-редактирование)
     {'NOMER_N'  ,   'N',     6,     0}, ; // номер наряда
     {'YEAR_N'   ,   'N',     4,     0}, ; // год открытия наряда
     {'KOD_VR'   ,   'N',     4,     0}, ; // код врача
     {'KOD_TEX'  ,   'N',     4,     0}, ; // код техника
     {'N_CHEK'   ,   'N',     8,     0}, ; // номер чека
     {'SMENA'    ,   'N',     1,     0}, ; // номер смены
     {'k_data'   ,   'D',     8,     0}, ; // дата оплаты (открытия наряда)
     {'CENA'     ,   'N',    10,     2}, ; // сумма оплаты
     {'SUMMA'    ,   'N',    10,     2}, ; // стоимость лечения
     {'O_SUMMA'  ,   'N',    10,     2}, ; // итоговая стоимость (с б/пл.усл.)
     {'SBANK'    ,   'N',    10,     2}, ; // сумма, оплаченная по банковской карте
     {'FR_DATA'  ,   'C',     4,     0}, ; // дата записи  //10.05
     {'FR_TIME'  ,   'N',     5,     0}, ; // время записи //10.05
     {'KOD_OPER' ,   'N',     3,     0}, ; // код оператора
     {'FR_zavod' ,   'C',    16,     0}, ; // зав.номер кассы //08.2017
     {'FR_TIP'   ,   'N',     1,     0}, ; // тип кассы  01.17
     {'VZFR_DATA',   'C',     4,     0}, ; // возврат дата записи  //01.17
     {'VZFR_TIME',   'N',     5,     0}, ; // возврат время записи  //01.17
     {'VZKOD_OPER',  'N',     3,     0}, ; // возврат код оператора //01.17
     {'VZFR_zavod',  'C',    16,     0}, ; // возврат зав.номер кассы //08.17
     {'VZFR_TIP' ,   'N',     1,     0}, ; // возврат тип кассы  //01.17
     {'FR_TIPKART',  'N',     1,     0}, ; // ТИП банковской карты  01.17
     {'I_POST',      'C',    30,     0} ;  // электронная почта 01.17
    }
  Local kas_ortu := {;
     {'KOD'      ,   'N',     7,     0}, ; // код по БД 'kas_ort'
     {'VID'      ,   'N',     1,     0}, ; // вид услуги
     {'U_KOD'    ,   'N',     4,     0}, ; // код услуги
     {'U_CENA'   ,   'N',    10,     2}, ; // цена услуги
     {'KOL'      ,   'N',     3,     0}, ; // количество услуг
     {'STOIM'    ,   'N',    10,     2}}  // итоговая стоимость услуги
  Local kas_usl := {; // список услуг, по которым разрешается смена цены
     {'U_KOD'    ,   'N',     4,     0}}  // код услуги
  // // КЭК
  // Local kek_h := {; // 'mo_kekh'
  //    {'KOD_LU'   ,   'N',     7,     0}, ; // код (номер записи) в human.dbf
  //    {'IST_BOL'  ,   'C',    10,     0}, ; // вид и номер учетного документа
  //    {'USL_OK'   ,   'N',     1,     0}, ; // условия оказания (1-3)
  //    {'OTD'      ,   'N',     3,     0}, ; // код отделения
  //    {'VRACH'    ,   'N',     4,     0}, ; // код врача
  //    {'K_DATA'   ,   'D',     8,     0}, ; // дата окончания лечения
  //    {'POVOD_EKS',   'N',     1,     0}, ; // повод экспертизы
  //    {'KOJKO_DNI',   'N',     3,     0}, ; // продолжительность госпитализации
  //    {'IST_DOHOD',   'N',     2,     0}, ; // источник средств существования
  //    {'GITEL'    ,   'N',     1,     0}, ; // житель 1-6
  //    {'DIAG_POST',   'C',    60,     0}, ; // диагноз при поступлении
  //    {'DIAG_PRED',   'C',    60,     0}, ; // диагноз предварительный
  //    {'KOD_DIAG' ,   'C',     5,     0}, ; // шифр осн.болезни
  //    {'DIAG_OSN' ,   'C',    60,     0}, ; // основной диагноз
  //    {'DIAG_OSL' ,   'C',    80,     0}, ; // осложнение основного
  //    {'DIAG_SOP' ,   'C',    80,     0}, ; // сопутствующий
  //    {'DIAG_KON' ,   'C',    80,     0}, ; // конкурирующий
  //    {'PLAN_EKS' ,   'N',     1,     0}, ; // 1-плановая, 2-экстренная
  //    {'SOGLASIE' ,   'N',     1,     0}, ; // 1-4
  //    {'PUTI_POS' ,   'N',     1,     0}, ; // 1-3
  //    {'POST_ST'  ,   'N',     1,     0}, ; // 1-2
  //    {'GOSPIT'   ,   'N',     1,     0}, ; // 1-3
  //    {'ISHOD'    ,   'N',     1,     0}, ; // исход 1-5
  //    {'SHIFR3'   ,   'C',     8,     0}, ; // Критерии качества по группам заболеваний (состояний)
  //    {'KOL_EKS'  ,   'C',     3,     0} ;  // кол-во экспертиз
  //   }
  // Local kek_eks  := {; // 'mo_keke'
  //    {'KOD',        'N',      7,      0}, ;   // код человека
  //    {'TIP_EKS',    'N',      1,      0}, ;   // тип эксперта 1-3
  //    {'KOD_EKS',    'N',      3,      0}, ;   // код эксперта
  //    {'DATE_EKS',   'D',      8,      0}, ;   // дата экспертизы
  //    {'EO_1',       'N',      1,      0}, ;   // 1-4
  //    {'EO_2',       'N',      1,      0}, ;   // 1-4
  //    {'EO_3_POST',  'C',      1,      0}, ;   // А,Б,В
  //    {'EO_3_PRED',  'C',      1,      0}, ;   // А,Б,В
  //    {'EO_3_OSN',   'C',      1,      0}, ;   // А,Б,В
  //    {'EO_4',       'N',      1,      0}, ;   // 1-2
  //    {'EO_4_2_1',   'C',      1,      0}, ;   // А,Б,В
  //    {'EO_4_2_2',   'C',      1,      0}, ;   // А,Б,В
  //    {'EO_5',       'N',      1,      0}, ;   // 1-4
  //    {'EO_6',       'N',      1,      0}, ;   // 1-4
  //    {'EO_7',       'N',      1,      0}, ;   // 1-2
  //    {'EO_8',       'N',      1,      0}, ;   // 1-4
  //    {'EO_9',       'N',      1,      0}, ;   // 1-5
  //    {'EO_10',      'N',      1,      0}, ;   // 1-6
  //    {'EO_11_L_1',  'C',      1,      0}, ;   // А-Г
  //    {'EO_11_L_2',  'C',      1,      0}, ;   // А-Г
  //    {'EO_11_L_3',  'C',      1,      0}, ;   // А-Г
  //    {'EO_11_L_4',  'C',      1,      0}, ;   // А-Г
  //    {'EO_11_L_5',  'C',      1,      0}, ;   // А-Г
  //    {'EO_11_I_1',  'C',      1,      0}, ;   // А-Г
  //    {'EO_11_I_2',  'C',      1,      0}, ;   // А-Г
  //    {'EO_11_I_3',  'C',      1,      0}, ;   // А-Г
  //    {'EO_11_I_4',  'C',      1,      0}, ;   // А-Г
  //    {'EO_11_R_1',  'C',      1,      0}, ;   // А-Г
  //    {'EO_11_R_2',  'C',      1,      0}, ;   // А-Г
  //    {'EO_11_R_3',  'C',      1,      0}, ;   // А-Г
  //    {'EO_11_R_4',  'C',      1,      0}, ;   // А-Г
  //    {'EO_12',      'N',      1,      0}, ;   // 1-3
  //    {'EO_13',      'N',      1,      0}, ;   // 1-4
  //    {'EO_14',      'N',      1,      0}, ;   // 1-3
  //    {'EO_15',      'N',      1,      0}, ;   // 1-3
  //    {'EO_16',      'N',      1,      0}, ;   // 1-3
  //    {'EO_17',      'N',      1,      0}, ;   // 1-5
  //    {'EO_18',      'N',      1,      0}, ;   // 1-3
  //    {'EO_19',      'N',      1,      0}, ;   // 1-3
  //    {'EO_20',      'N',      1,      0}, ;   // 1-4
  //    {'EO_21',      'N',      1,      0}, ;   // 1-3
  //    {'EO_22',      'N',      1,      0}, ;   // 1-2
  //    {'EO_23',      'N',      1,      0}, ;   // 1-3
  //    {'EO_24',      'N',      1,      0}, ;   // 1-5
  //    {'EO_25',      'N',      1,      0}, ;   // 1-3
  //    {'EO_26',      'N',      1,      0}, ;   // 1-2
  //    {'EO_27',      'N',      1,      0}, ;   // 1-2
  //    {'EO_28',      'C',     70,      0}, ;   // паталогоанатомический диагноз
  //    {'EO_29',      'N',      1,      0}, ;   // 1-4
  //    {'EO_30',      'N',      1,      0}, ;   // 1-3
  //    {'N_ZAKLUCH',  'N',      2,      0}, ;   // кол-во строк заключения
  //    {'O_A',        'N',      5,      3}, ;   // оценка A
  //    {'O_B',        'N',      5,      3}, ;   // оценка B
  //    {'O_C',        'N',      5,      3}, ;   // оценка C
  //    {'O_D',        'N',      5,      3}, ;   // оценка D
  //    {'O_K',        'N',      5,      3}, ;   // оценка K
  //    {'O_P',        'N',      5,      3}, ;   // оценка P
  //    {'O_R',        'N',      5,      3}, ;   // оценка R
  //    {'O_E',        'N',      5,      3}, ;   // оценка E
  //    {'O_ALL',      'N',      1,      0}, ;   // итоговая оценка (2, 3, 4, 5)
  //    {'p_zapol',    'N',      3,      0} ;   // процент заполнения
  //   }
  // Local kek_eksz := {; // 'mo_kekez'
  //    {'KOD',        'N',      7,      0}, ;   // номер записи kek_eks
  //    {'STROKE',     'N',      2,      0}, ;
  //    {'NAME',       'C',     65,      0} ;
  //   }
  //
  Local mo_kfio := {; // отдельно ФИО
     {'KOD'      ,   'N',     7,     0}, ; // код человека по kartotek.dbf
     {'FAM'      ,   'C',    40,     0}, ;
     {'IM'       ,   'C',    40,     0}, ;
     {'OT'       ,   'C',    40,     0}}
  Local inog_smo := {; // иногородние страховые компании
     {'KOD'      ,   'N',     7,     0}, ; // код человека
     {'SMO_NAME' ,   'C',   100,     0}}  // наименование иногородней СМО
  Local stacDDS := {; // стационары, из которых проходит диспансеризация детей-сирот
     {'NAME'   , 'C', 250, 0}, ;
     {'ADRES'  , 'C', 250, 0}, ;
     {'vedom'  , 'N',  1, 0}, ; // Ведомственная принадлежность: 0-органы здравоохранения, 1-образования, 2-социальной защиты, 3-другое
     {'fed_kod', 'N', 10, 0}}  // код по фед.справочнику
  Local school := {; // образовательные учреждения
     {'name'   , 'C', 30, 0}, ;
     {'fname'  , 'C', 250, 0}, ;
     {'adres'  , 'C', 250, 0}, ;
     {'tip'    , 'N',  1, 0}, ; // 0-школы, 1-детсады, 2-ПТУ
     {'fed_kod', 'N', 10, 0}}  // код по фед.справочнику
  Local mo_hdisp := {;
     {'KOD'      ,   'N',     7,     0}, ; // код по БД human
     {'KS'       ,   'N',     2,     0}, ; // код строки
     {'NAME'     ,   'C',    78,     0}}  // содержание строки
  // справки для ФНС
  local mo_register_fns := { ;  // журнал выданных справок для ФНС
    { 'KOD',     'N',     7,   0 }, ; // recno()
    { 'DATE',    'D',     8,   0 }, ; // дата составления
    { 'KOD_K',   'N',     7,   0 }, ; // код по картотеке
    { 'NYEAR',   'N',     4,   0 }, ; // отчетный год
    { 'NUM_S',   'N',     7,   0 }, ; // номер справки
    { 'VERSION', 'N',     3,   0 }, ; // номер корректировки
    { 'ATTRIBUT','N',     1,   0 }, ; // признак 0 - налогоплательщик и пациент не являются одним лицом; 1 - налогоплательщик и пациент являются одним лицом.
    { 'INN',     'C',    12,   0 }, ; // ИНН плательщика
    { 'PLAT_FIO','C',    50,   0 }, ; // ФИО налогоплательщика
    { 'PLAT_DOB','D',     8,   0 }, ; // дата рождения налогоплательщика
    { 'VIDDOC',  'N',     2,   0 }, ; // вид документа налогоплательщика
    { 'SER_NUM', 'C',    20,   0 }, ; // серия и номер документа налогоплательщика
    { 'DATEVYD', 'D',     8,   0 }, ; // дата выдачи документа налогоплательщика
    { 'SUM1',    'N',    16,   2 }, ; // сумма 1
    { 'SUM2',    'N',    16,   2 }, ; // сумма 2
    { 'PRED_RUK','N',     1,   0 }, ; // признак 1 - представитель руководитель МО; 2 - представитель, сотрудник МО
    { 'PREDST',  'C',    50,   0 }, ; // представитель организации
    { 'PRED_DOC','C',    50,   0 }, ; // документ представителя
    { 'KOD_XML', 'N',     6,   0 } ; // ссылка на файл 'mo_xml_fns', для отправки в ФНС или число -1 если печатная форма, 0 - если xml файл не формировался
  }
  local mo_reg_fns_link := { ;  // ссылки на документы в справке ФНС
    { 'KOD_SPR', 'N',     7,   0 }, ; // код справки по 'register_fns'
    { 'TYPE',    'N',     2,   0 }, ; // тип источника для справки ( 1 - платные услуги, 2 - касса ЛПУ, 3 - ортопедия )
    { 'KOD_REC', 'N',     7,   0 }, ; // номер записи в соответствующем файле 
    { 'SUM_OPL', 'N',    10,   2 }, ; // сумма оплаты по чеку
    { 'SUM_VOZ', 'N',    10,   2 } ;  // сумма возврата по чеку
  }
  Local mo_xml_fns := { ; // Список сформированных XML-файлов 'reg_xml_fns' для ФНС
    { 'KOD',    'N',     6,   0 }, ; // код; recNo()
    { 'FNAME',  'C',    26,   0 }, ; // имя файла без расширения (и ZIP-архива)
    { 'FNAME2', 'C',    26,   0 }, ; // имя второго файла без расширения
    { 'DFILE',  'D',     8,   0 }, ; // дата создания файла
    { 'TFILE',  'C',     5,   0 }, ; // время создания файла
    { 'KOL1',   'N',     6,   0 } ; // количество справок в файле
  }
  local mo_xml_fns_link := { ;  // ссылки на справки в файле для ФНС
    { 'KOD_XML','N',     6,   0 }, ; // код указывающий на запись в 'reg_xml_fns'
    { 'KOD_SPR', 'N',    7,   0 } ; // код справки по 'register_fns'
  }
  //
  f_init_r01() // инициализация всех файлов инф.сопровождения по диспансеризации
  // f_init_d01() // инициализация всех файлов инф.сопровождения по диспансерному наблюдению
  if !is_local_version .or. hb_FileExists(dir_server + 'base1' + sdbf)
    reconstruct(dir_server + 'base1', base1, , , .t.)
    reconstruct(dir_server + 'mo_oper', mo_oper, 'index_base("mo_oper")', , .t.)
    reconstruct(dir_server + 'mo_opern', mo_opern, 'index_base("mo_opern")', , .t.)
    reconstruct(dir_server + 'roles', roles, , , .t.)
  endif
  // простые справочники
  reconstruct(dir_server + 's_adres', {{'name', 'C', 40, 0}}, 'index_base("s_adres")', , .t.)
  reconstruct(dir_server + 's_kemvyd', {{'name', 'C', 150, 0}}, 'index_base("s_kemvyd")', , .t.)
  reconstruct(dir_server + 's_mr', {{'name', 'C', 50, 0}}, , , .t.)
  reconstruct(dir_server + 'mo_kfio', mo_kfio, , , .t.)
  reconstruct(dir_server + 'mo_kismo', inog_smo, , , .t.)
  reconstruct(dir_server + 'mo_hismo', inog_smo, , , .t.)
  reconstruct(dir_server + 'mo_stdds', stacDDS, , , .t.)
  reconstruct(dir_server + 'mo_schoo', school, , , .t.)
  // услуги
  reconstruct(dir_server + 'slugba', slugba, 'index_base("slugba")', , .t.)
  reconstruct(dir_server + 'mo_su', mo_su, 'index_base("mo_su")', , .t.)
  reconstruct(dir_server + 'uslugi', uslugi, 'index_base("uslugi")', , .t.)
  reconstruct(dir_server + 'uslugi1', uslugi1, 'index_base("uslugi1")', , .t.)
  reconstruct(dir_server + 'uch_usl', uch_usl, 'index_base("uch_usl")', , .t.)
  reconstruct(dir_server + 'uch_usl1', uch_usl1, 'index_base("uch_usl1")', , .t.)
  reconstruct(dir_server + 'uch_pers', uch_pers, 'index_base("uch_pers")', , .t.)
  reconstruct(dir_server + 'uslugi_k', uslugi_k, 'index_base("uslugi_k")', , .t.)
  reconstruct(dir_server + 'uslugi1k', uslugi1k, 'index_base("uslugi1k")', , .t.)
  reconstruct(dir_server + 'ns_usl', ns_usl, , , .t.)
  reconstruct(dir_server + 'ns_usl_k', ns_usl_k, 'index_base("ns_usl_k")', , .t.)
  reconstruct(dir_server + 'usl_uva', usl_uva, 'index_base("usl_uva")', , .t.)
  reconstruct(dir_server + 'usl_otd', usl_otd, 'index_base("usl_otd")', , .t.)
  reconstruct(dir_server + 'u_usl_5', u_usl_5, , , .t.)
  reconstruct(dir_server + 'u_usl_7', u_usl_7, , , .t.)
  // для стоматологий
  reconstruct(dir_server + 'kartdelz', kart_delz, 'index_base("kartdelz")', , .t.)
  reconstruct(dir_server + 'kart_st', kart_st, 'index_base("kart_st")', , .t.)
  reconstruct(dir_server + 'humanst', humanst, 'index_base("humanst")', , .t.)
  //
  reconstruct(dir_server + 'kartotek', kartotek, 'index_base("kartotek")', 'картотеке', .t.)
  reconstruct(dir_server + 'kartote_', kartotek_, , 'картотеке1', .t.)
  reconstruct(dir_server + 'kartote2', kartotek2, , 'картотеке2', .t.)
  reconstruct(dir_server + 'kart_et', _kart_et, , 'картотеке', .t.)
  reconstruct(dir_server + 'kart_inv', _kart_inv, , 'картотеке', .t.)
  reconstruct(dir_server + 'kart_etk', _kart_etk, , 'картотеке', .t.)
  reconstruct(dir_server + 'k_prim1', k_prim1, 'index_base("k_prim1")', 'картотеке', .t.)
  reconstruct(dir_server + 'mo_regi', mo_regi, 'index_base("mo_regi")', 'регистрации', .t.)
  reconstruct(dir_server + 'mo_kpred', mo_kpred, 'index_base("mo_kpred")', , .t.)
  reconstruct(dir_server + 'mo_kinos', mo_kinos, 'index_base("mo_kinos")', , .t.)
  reconstruct(dir_server + 'msek', msek, 'index_base("msek")', 'МСЭК', .t.)
  reconstruct(dir_server + 'p_priem', {{'NAME', 'C', 25, 0}}, , , .t.)
  reconstruct(dir_server + 'mo_kartp', mo_kartp, 'index_base("mo_kartp")', , .t.)
  reconstruct(dir_server + 'mo_krtp', mo_krtp, , , .t.)
  reconstruct(dir_server + 'mo_krte', mo_krte, , , .t.)
  reconstruct(dir_server + 'mo_krtr', mo_krtr, , , .t.)
  reconstruct(dir_server + 'mo_krto', mo_krto, , , .t.)
  reconstruct(dir_server + 'mo_krtf', mo_krtf, , , .t.)
  //
  reconstruct(dir_server + 'mo_sprav', spr_OMS, , , .t.)
  reconstruct(dir_server + 'human', human, 'index_base("human")', 'пролеченным больным', .t.)
  reconstruct(dir_server + 'human_', human_, , 'пролеченным больным1', .t.)
  reconstruct(dir_server + 'human_2', human_2, , 'пролеченным больным2', .t.)
  reconstruct(dir_server + 'human_im', mo_implant, 'index_base("human_im")', 'установленным имплантам', .t.)
  reconstruct(dir_server + 'human_lek_pr', mo_lek_pr, 'index_base("human_lek_pr")', 'введенным лекарственным препратам', .t.)
  reconstruct(dir_server + 'human_ser_num', mo_ser_num, 'index_base("human_ser_num")', 'введенным лекарственным препратам', .t.)
  reconstruct_double_sl()
  reconstruct(dir_server + 'mo_rhum', mo_rhum, , 'реестру случаев', .t.)
  reconstruct(dir_server + 'mo_refr', mo_refr, 'index_base("mo_refr")', 'списку отказов', .t.)
  reconstruct(dir_server + 'mo_os', mo_os, , 'оплате и санкциям', .t.)
  reconstruct(dir_server + 'mo_hu', mo_hu, 'index_base("mo_hu")', 'пролеченным больным5', .t.)
  reconstruct(dir_server + 'human_u', human_u, 'index_base("human_u")', 'пролеченным больным3', .t.)
  reconstruct(dir_server + 'human_u_', human_u_, , 'пролеченным больным4', .t.)
  reconstruct(dir_server + 'mo_hdisp', mo_hdisp, , 'диспансеризациям', .t.)
  reconstruct(dir_server + 'mo_hod', mo_hod, , 'ходатайствам', .t.)
  reconstruct(dir_server + 'mo_hod_k', mo_hod_k, , 'ходатайствам1', .t.)
  reconstruct(dir_server + 'mo_rak', mo_rak, , 'актам контроля', .t.)
  reconstruct(dir_server + 'mo_rakexp', mo_rakexp, , 'актам контроля4', .t.)
  reconstruct(dir_server + 'mo_raks', mo_raks, , 'актам контроля2', .t.)
  reconstruct(dir_server + 'mo_raksh', mo_raksh, , 'актам контроля3', .t.)
  reconstruct(dir_server + 'mo_raksherr', mo_raksherr, , 'актам контроля5', .t.)
  reconstruct(dir_server + 'mo_rpd', mo_rpd, , 'платёжным документам', .t.)
  reconstruct(dir_server + 'mo_rpds', mo_rpds, , 'платёжным документам2', .t.)
  reconstruct(dir_server + 'mo_rpdsh', mo_rpdsh, , 'платёжным документам3', .t.)
  reconstruct(dir_server + 'mo_onkna', mo_onkna, 'index_base("mo_onkna")', 'онкологии1', .t.)
  reconstruct(dir_server + 'mo_onksl', mo_onksl, 'index_base("mo_onksl")', 'онкологии2', .t.)
  reconstruct(dir_server + 'mo_onkdi', mo_onkdi, 'index_base("mo_onkdi")', 'онкологии3', .t.)
  reconstruct(dir_server + 'mo_onkpr', mo_onkpr, 'index_base("mo_onkpr")', 'онкологии4', .t.)
  reconstruct(dir_server + 'mo_onkus', mo_onkus, 'index_base("mo_onkus")', 'онкологии5', .t.)
  reconstruct(dir_server + 'mo_onkco', mo_onkco, 'index_base("mo_onkko")', 'онкологии5', .t.)
  reconstruct(dir_server + 'mo_onkle', mo_onkle, 'index_base("mo_onkle")', 'онкологии5', .t.)
  //
  reconstruct(dir_server + 'mo_rees', mo_rees, , 'реестрам случаев', .t.)
  reconstruct(dir_server + 'mo_xml', mo_xml, , 'принятым файлам', .t.)
  reconstruct(dir_server + 'schet', schet, 'index_base("schet")', 'счетам', .t.)
  reconstruct(dir_server + 'schet_', schet_, , 'счетам', .t.)
  reconstruct(dir_server + 'schetd', schetd, , , .t.)
  //
  reconstruct(dir_server + 'mo_uch', mo_uch, , 'учреждениям', .t.)
  reconstruct(dir_server + 'mo_otd', mo_otd, , 'отделениям', .t.)
  reconstruct(dir_server + 'mo_uchvr', mo_uchvr, , 'участковым врачам', .t.)
  reconstruct(dir_server + 'mo_pers', mo_pers, 'index_base("mo_pers")', 'персоналу', .t.)
  //
  reconstruct(dir_server + 'mo_ppst', mo_ppst, , , .t.)
  reconstruct(dir_server + 'mo_pp', mo_pp, 'index_base("mo_pp")', 'приемному покою', .t.)
  reconstruct(dir_server + 'mo_ppdia', mo_ppdia, 'index_base("mo_ppdia")', , .t.)
  reconstruct(dir_server + 'mo_ppper', mo_ppper, 'index_base("mo_ppper")', , .t.)
  reconstruct(dir_server + 'mo_ppadd', mo_ppadd, , , .t.)
  //
  reconstruct(dir_server + 'hum_p', hum_p, 'index_base("hum_p")', 'пролеченным больным6', .t.)
  reconstruct(dir_server + 'hum_p_u', hum_p_u, 'index_base("hum_p_u")', 'пролеченным больным7', .t.)
  reconstruct(dir_server + 'plat_ms', plat_ms, 'index_base("plat_ms")', , .t.)
  reconstruct(dir_server + 'plat_vz', plat_vz, 'index_base("plat_vz")', , .t.)
  reconstruct(dir_server + 'hum_plat', hum_plat, 'index_base("hum_plat")', 'плательщикам', .t.)
  reconstruct(dir_server + 'payments', _payments, 'index_base("payments")', 'платежам платных услуг', .t.)
  reconstruct(dir_server + 'payer', _payer, 'index_base("payer")', , .t.)
  reconstruct(dir_server + 'pu_cena', pu_cena, 'index_base("pu_cena")', , .t.)
  reconstruct(dir_server + 'pu_date', {{'data', 'D', 8, 0}}, 'index_base("pu_date")', , .t.)
  init_base(dir_server + 'p_pr_vz', , get_DMS(), 0, , .t.)
  init_base(dir_server + 'p_d_smo', , get_DMS(), 0, , .t.)
  //
  reconstruct(dir_server + 'ortoped', {{'NAME', 'C', 80, 0}, ;
                                    {'kod' , 'N', 1, 0}, ;
                                    {'kod1' , 'N', 1, 0}}, , , .t.)
  reconstruct(dir_server + 'ortoped1', {{'kod_ort', 'N', 4, 0}, ;
                                     {'kod_menu', 'N', 4, 0}, ;
                                     {'massa', 'N', 7, 3}}, , , .t.)
  reconstruct(dir_server + 'ortoped2', {{'kod_tip', 'N', 4, 0}, ;
                                     {'kod_usl', 'N', 4, 0}}, ;
              'index_base("ortoped2")', 'материалам', .t.)
  reconstruct(dir_server + 'diag_ort', diag_ort, 'index_base("diag_ort")', 'диагнозам', .t.)
  reconstruct(dir_server + 'ort_brk', {{'NAME', 'C', 40, 0}}, , , .t.)
  reconstruct(dir_server + 'orto_uva', orto_uva, 'index_base("orto_uva")', , .t.)
  reconstruct(dir_server + 'hum_ort', hum_o, 'index_base("hum_ort")', 'пролеченным больным8', .t.)
  reconstruct(dir_server + 'hum_oro', hum_o_o, 'index_base("hum_oro")', 'пролеченным больным9', .t.)
  reconstruct(dir_server + 'hum_oru', hum_o_u, 'index_base("hum_oru")', 'пролеченным больным10', .t.)
  reconstruct(dir_server + 'hum_orpl', hum_orpl, 'index_base("hum_orpl")', 'плательщикам', .t.)
  init_base(dir_server + 'tip_orto', , gmenutorto, 0, , .t.)
  //
  reconstruct(dir_server + 'kas_pl', kas_pl, 'index_base("kas_pl")', 'кассе-1', .t.)
  reconstruct(dir_server + 'kas_pl_u', kas_pl_u, 'index_base("kas_pl_u")', 'кассе-2', .t.)
  reconstruct(dir_server + 'kas_ort', kas_ort, 'index_base("kas_ort")', 'кассе-3', .t.)
  reconstruct(dir_server + 'kas_ortu', kas_ortu, 'index_base("kas_ortu")', 'кассе-4', .t.)
  reconstruct(dir_server + 'kas_usl', kas_usl, , 'кассе-5', .t.)
  reconstruct(dir_server + 'kas_usld', kas_usl, , 'кассе-6', .t.)
  //
  reconstruct(dir_server + 'register_fns', mo_register_fns, 'index_base( "register_fns" )', 'журнал ФНС', .t.)
  reconstruct(dir_server + 'reg_link_fns', mo_reg_fns_link, 'index_base( "reg_link_fns" )', 'ссылки для справок ФНС', .t.)
  reconstruct(dir_server + 'reg_xml_fns', mo_xml_fns, 'index_base( "reg_xml_fns" )', 'файлы XML для ФНС', .t.)
  reconstruct(dir_server + 'reg_xml_link_fns', mo_xml_fns_link, 'index_base( "reg_xml_fns_link" )', 'ссылки на справки для файла XML для ФНС', .t.)
  //
  //  reconstruct(dir_server + 'mo_kekez', kek_eksz, 'index_base("mo_kekez")', 'экспертизам', .t.)
  //  reconstruct(dir_server + 'mo_kekh', kek_h, 'index_base("mo_kekh")', 'экспертизам2', .t.)
  //  reconstruct(dir_server + 'mo_keke', kek_eks, 'index_base("mo_keke")', 'экспертизам3', .t.)
  //
  init_base(dir_server + 'komitet', , get_komitet(), 2, , .t.)
  init_base(dir_server + 'str_komp', , get_strah(), 2, , .t.)
  init_base(dir_server + 'organiz', , get_struct_organiz(), 0, , .t.)
  use_base("organiz")
  if lastrec() == 0
    AddRecN()
    org->kod_tfoms := glob_mo[_MO_KOD_TFOMS]
    org->name_tfoms := glob_mo[_MO_SHORT_NAME]
    org->uroven := get_uroven()
  endif
  use
  if glob_mo[_MO_KOD_TFOMS] == kod_VOUNC
    vounc_Reconstruct_DB()
  endif
  return NIL

*****
Function vounc_Reconstruct_DB()
  Local vouncmnn := {;
    {'NAME',       'C', 60, 0}, ;
    {'NAME_LAT',   'C', 60, 0}, ;
    {'TIP_MNN',    'N', 1, 0} ;  // тип МНН
  }
  Local vounctrn := {;
    {'NAME',       'C', 60, 0}, ;
    {'NAME_LAT',   'C', 60, 0}, ;
    {'doza',       'N', 6, 1}, ; // дозировка
    {'C_LF',       'N', 1, 0}, ; // 0-мг, 1-мг/мл
    {'N_LF',       'N', 4, 0}, ; // количество в упаковке
    {'MNN',        'N', 5, 0} ;
  }
  Local vouncnaz := {;
    {'KOD_K',   'N',   7, 0}, ; // код по картотеке
    {'DATE_NAZ', 'D',   8, 0}, ; // Дата назначения
    {'KOD_DIAG', 'C',   5, 0}, ; // Код заболевания (по МКБ-10)
    {'TOVAR',   'N',   5, 0}, ; // код ТРН
    {'KOL_NAZ', 'N',   6, 1}, ; // количество назначенного препарата в сутки
    {'KOL_UP',  'N',   2, 0}, ; // количество упаковок
    {'DATE_E' , 'C',   4, 0}, ; // дата добавления
    {'KOD_P'  , 'C',   1, 0} ;  // код пользователя, добавившего
  }
  Local vouncrec := {;
    {'KOD_K',   'N',   7, 0}, ; // код по картотеке
    {'KOD_DIAG', 'C',   5, 0}, ; // Код заболевания (по МКБ-10)
    {'NUMBER_R', 'N',   6, 0}, ; // номер рецепта
    {'DATE_R',  'D',   8, 0}, ; // Дата выписки рецепта
    {'TOVAR',   'N',   5, 0}, ; // код ТРН
    {'VRACH',   'N',   4, 0}, ; // код врача по 'mo_pers'
    {'KOL_NAZ', 'N',   6, 1}, ; // количество назначенного препарата в сутки
    {'KOL_UP',  'N',   2, 0}, ; // количество упаковок
    {'ANNUL',   'N',   1, 0}, ; // 1-аннулирован, 0-обычный
    {'D_ANNUL', 'D',   8, 0}, ; // Дата аннулирования рецепта
    {'DATE_E' , 'C',   4, 0}, ; // дата добавления
    {'KOD_P'  , 'C',   1, 0}, ; // код пользователя, добавившего
    {'DATE_E2', 'C',   4, 0}, ; // дата редактирования
    {'KOD_P2' , 'C',   1, 0} ;  // код пользователя, исправившего
  }
  reconstruct(dir_server + 'vouncmnn', vouncmnn, , , .t.)
  reconstruct(dir_server + 'vounctrn', vounctrn, , , .t.)
  reconstruct(dir_server + 'vouncnaz', vouncnaz, , , .t.)
  reconstruct(dir_server + 'vouncrec', vouncrec, , , .t.)
  return NIL

** 02.03.23
Function reconstruct_double_sl()
  Local human_3 := {;
     {'KOD'      ,   'N',     7,     0}, ; // код (номер записи)
     {'KOD2'     ,   'N',     7,     0}, ; // код (номер записи)
     {'KOD_DIAG' ,   'C',     5,     0}, ; // шифр 1-ой осн.болезни
     {'N_DATA'   ,   'D',     8,     0}, ; // дата начала лечения
     {'K_DATA'   ,   'D',     8,     0}, ; // дата окончания лечения
     {'USL_OK'   ,   'N',     2,     0}, ; // условия оказания медицинской помощи по справочнику V006
     {'VIDPOM'   ,   'N',     4,     0}, ; // вид помощи по справочнику V008
     {'CENA_1'   ,   'N',    10,     2}, ; // оплачиваемая сумма лечения
     {'RSLT_NEW',    'N',     3,     0}, ; // результат обращения/госпитализации по справочнику V009
     {'ISHOD_NEW',   'N',     3,     0}, ; // исход заболевания по справочнику V012
     {'VNR1',        'N',     4,     0}, ; // вес 1-го недоношенного ребёнка (лечится мать)
     {'VNR2',        'N',     4,     0}, ; // вес 2-го недоношенного ребёнка (лечится мать)
     {'VNR3',        'N',     4,     0}, ; // вес 3-го недоношенного ребёнка (лечится мать)
     {'DATE_E'   ,   'C',     4,     0}, ; // дата добавления листа учета
     {'KOD_P'    ,   'C',     1,     0}, ; // код пользователя, добавившего л/у
     {'PZTIP'    ,   'N',     3,     0}, ; // тип план-заказа от 1 до 99
     {'PZKOL'    ,   'N',     6,     2}, ; // кол-во выполненного план-заказа
     {'ST_VERIFY',   'N',     1,     0}, ; // стадия проверки: 0-после редактирования; от 5 до 9-проверено
     {'KOD_UP',      'N',     7,     0}, ; // номер предыдущей записи (в случае повторного выставления в другом счёте)
     {'OPLATA',      'N',     1,     0}, ; // тип оплаты;0, 1 или 2, 1 - в счет, 2 - ред-ие; 9-счёт не оплачен и сделана копия л/у
     {'SUMP',        'N',    10,     2}, ; // сумма, принятая к оплате СМО (ТФОМС);всего;
     {'SANK_MEK',    'N',    10,     2}, ; // финансовые санкции (МЭК);суммарные;
     {'SANK_MEE',    'N',    10,     2}, ; // финансовые санкции (МЭЭ);суммарные;
     {'SANK_EKMP',   'N',    10,     2}, ; // финансовые санкции (ЭКМП);суммарные;
     {'REESTR',      'N',     6,     0}, ; // код (последнего) реестра;по файлу 'mo_rees'
     {'REES_NUM',    'N',     2,     0}, ; // номер отправки реестра в ТФОМСа;в реестре первый раз отправили = 1, после исправления отправили второй раз = 2, и т.д.;
     {'REES_ZAP',    'N',     6,     0}, ; // номер позиции записи в реестре;поле 'IDCASE' (и 'ZAP') в реестре случаев
     {'SCHET'    ,   'N',     6,     0}, ; // код счета
     {'SCHET_NUM',   'N',     2,     0}, ; // номер отправки счёта в ТФОМС;в счёте первый раз отправили = 0, после отказа в оплате и исправления отправили второй раз = 1, и т.д.;
     {'SCHET_ZAP',   'N',     6,     0}, ; // номер позиции записи в счете;поле 'IDCASE' (и 'ZAP') в реестре счетов;сформировать по индексу humans для schet > 0
     {'ID_C',        'C',    36,     0} ;  // код случая оказания;GUID для двойного вложенного случая; создается в случае пересечения дат входящих случаев при формировнии двойного случая - добавлении записи
    }
  reconstruct(dir_server + 'human_3', human_3, 'index_base("human_3")', 'пролеченным больным3', .t.)
  return NIL