***** mo_init.prg
#include "set.ch"
#include "inkey.ch"
#include "dbstruct.ch"
#include "..\_mylib_hbt\function.ch"
#include "..\_mylib_hbt\edit_spr.ch"
#include "chip_mo.ch"

***** вернуть строку с номером версии
Function fs_version(aVersion)
// aVersion - трехмерный массив чисел
return lstr(aVersion[1])+"."+lstr(aVersion[2])+"."+lstr(aVersion[3])

***** контроль версии базы данных
Function ControlBases(tip_oper,aVersion)
// tip_oper  - тип операции
//    1 - после запуска программы считать версию БД из файла
//    2 - подтвердить разрешение на реконструкцию (из reconstruct)
//    3 - записать код новой версии БД (после инициализации)
// aVersion - версия БД, соответствующая данной сборке программы
//            обязательна для первого вызова (массив из трёх элементов)
Static sl_reconstr, snversion, sl_smena, nfile := "ver_base"
Local ret_value, ver__base
DEFAULT sl_reconstr TO .t., sl_smena TO .f.
do case
  case tip_oper == 1
    DEFAULT snversion TO int(aVersion[1]*10000 + aVersion[2]*100 + aVersion[3])
    if hb_FileExists(dir_server+nfile+sdbf)
      R_Use(dir_server+nfile)
      ret_value := ver__base := FIELD->version
      Use
      if snversion < ver__base
        func_error("Вы запустили старую версию программы. Работа запрещена!")
        f_end()
      else
        sl_smena := (snversion != ver__base)
        sl_reconstr := .T.
      endif
    else
      sl_smena := .t.
    endif
    ret_value := sl_smena
  case tip_oper == 2
    if !sl_reconstr
      func_error("Вы запустили старую версию программы. Работа запрещена!")
      f_end()
    endif
    ret_value := sl_reconstr
  case tip_oper == 3 .and. sl_smena
    reconstruct(dir_server+nfile,{{"version","N",10,0}},,,.t.)
    G_Use(dir_server+nfile)
    if lastrec() == 0
      AddRecN()
    else
      G_RLock(forever)
    endif
    replace version with snversion
    Use
endcase
return ret_value

***** 06.08.17 условное индексирование цен на услуги в 2017 году
Function f_index_uslc()
if is_adres_podr
  return (codemo == glob_mo[_MO_KOD_TFOMS] .or. codemo == glob_podr_2)
else
  return (codemo == glob_mo[_MO_KOD_TFOMS])
endif
return .t.

***** 26.04.20 начальная инициализация программы (до входа в Reconstruct_BD)
Function Init_first()
Local buf := save_maxrow()
mywait()
// инициализировать массив DBF-файлов базы данных
init_array_files_DB()
// инициализировать все mem (public) - переменные
Public stm_kategor2 := {}
init_all_mem_public()
//
Public glob_schet_akt := 3  // 1-по всем случаям, 2-за вычетом снятий, 3-за вычетом повторно выставленных
Public glob_schet := -2
Public glob_perso := 0    // код по БД human
Public glob_kartotek := 0 // код по БД kartotek
Public glob_k_fio := ""   // глобальное ФИО
Public glob_uch := {0,""} // глобальное учреждение
Public glob_otd := {0,"",0,0} // глобальное отделение
Public sys1_date := sys_date
Public c4sys_date := dtoc4(sys1_date)
Public glob_human := {0,"",0,0,0,"",0,0}
Public glob_komu := 1
Public glob_all := {0,""}
Public glob_strah := {0,""}
Public glob_komitet := {0,""}
Public glob_pr_vz := {0,""}
Public glob_d_smo := {0,""}
Public glob_priem := {0,""}
Public glob_r_mu := {0,"",""}
Public st_a_otd, st_a_uch, st_a_uchast
Public glob_Q017 := {;
  {"001F","Нарушение ссылочной целостности"},;
  {"001K","Нарушение обязательности заполнения элемента (элемент не заполнен или отсутствует)"},;
  {"002F","Нарушение доменной целостности"},;
  {"002K","Нарушение семантической целостности"},;
  {"003F","Нарушение условий заполнения элемента"},;
  {"003K","Нарушения, связанные с оформлением и предъявлением на оплату счетов и реестров счетов"},;
  {"004F","Нарушение формата заполнения элемента"},;
  {"005F","Нарушение ссылочной целостности (проверка регионального уровня)"},;
  {"006F","Нарушение семантической целостности"};
}
Public glob_MGI := {;
  {"60.9.1", 12,26,25},; // Молекулярно-генетическое исследование мутаций в генах BRCA1 и BRCA2 в крови
  {"60.9.13", 5,12,11},; // Молекулярно-генетическое исследование мутаций в гене EGFR в биопсийном (операционном) материале
  {"60.9.31", 1, 2, 1},; // Определение амплификации гена HER2 методом флюоресцентной гибридизации in situ (FISH)
  {"60.9.32", 1, 2, 1},; // Определение амплификации гена HER2 методом хромогенной гибридизации in situ (CISH)
  {"60.9.5",  4,10, 9},; // Молекулярно-генетическое исследование мутаций в гене KRAS в биопсийном (операционном) материале
  {"60.9.6",  4,10, 9},; // Молекулярно-генетическое исследование мутаций в гене NRAS в биопсийном (операционном) материале
  {"60.9.7",  2, 5, 4};  // Молекулярно-генетическое исследование мутаций в гене BRAF в биопсийном (операционном) материале
}  // второй эл-т массива - код по справочнику N010
Public glob_NMIC := {;
  {" медицинская организация Волгограда (Волгоградской области)"               , 0},;
  {" 1 НМИЦ онкологии им.Н.Н.Блохина"                                          , 1},;
  {" 2 НМИЦ им.В.А.Алмазова"                                                   , 2},;
  {" 3 НМИЦ сердечно-сосудистой хирургии им.А.Н.Бакулева"                      , 3},;
  {" 4 НМИЦ здоровья детей"                                                    , 4},;
  {" 5 НМИЦ акушерства, гинекологии и перинатологии им.академика В.И.Кулакова" , 5},;
  {" 6 НМИЦ радиологии"                                                        , 6},;
  {" 7 НМИЦ детской гематологии, онкологии и иммунологии им.Дмитрия Рогачева"  , 7},;
  {" 8 НМИЦ психиатрии и наркологии им.В.П.Сербского"                          , 8},;
  {" 9 НМИЦ кардиологии"                                                       , 9},;
  {"10 НМИЦ им.академика Е.Н.Мешалкина"                                        ,10},;
  {"11 НМИЦ эпидемиологии и микробиологии им.почетного академика Н.Ф.Гамалеи"  ,11},;
  {"12 НМИЦ профилактической медицины"                                         ,12},;
  {"13 НМИЦ эндокринологии"                                                    ,13},;
  {"14 НМИЦ онкологии им.Н.Н.Петрова"                                          ,14},;
  {"15 НМИЦ реабилитации и курортологии"                                       ,15},;
  {"16 НМИЦ гематологии"                                                       ,16},;
  {"17 НМИЦ психиатрии и неврологии им.В.М.Бехтерева"                          ,17},;
  {"18 НМИЦ нейрохирургии им.академика Н.Н.Бурденко"                           ,18},;
  {"19 НМИЦ травматологии и ортопедии им.Н.Н.Приорова"                         ,19},;
  {"20 НМИЦ трансплантологии и искусственных органов им.академика В.И.Шумакова",20},;
  {"21 НМИЦ хирургии им.А.В.Вишневского"                                       ,21},;
  {'22 НМИЦ МНТК "Микрохирургия глаза" им.академика С.Н.Федорова'              ,22},;
  {'23 НМИЦ фтизиопульмонологии и инфекционных заболеваний'                    ,23},;
  {'24 НМИЦ глазных болезней имени Гельмгольца'                                ,24},;
  {'25 ФГАОУ ВО "Сеченовский Университет"'                                     ,25},;
  {'26 НМИЦ им Н.И. Пирогова'                                                  ,26},;
  {'27 ФГБОУ Московский гос.медико-стоамтологический ун-т им.А.И.Евдокимова'   ,27},;
  {'28 ФГБОУ Санкт-Петербургский гос.педиатрический медицинский университет'   ,28},;
  {'29 НМИЦ травматологии и ортопедии имени Р.Р. Вредена'                      ,29},;
  {'30 НМИЦ травматологии и ортопедии имени академика Г.А. Илизарова'          ,30},;
  {'31 НМИЦ детской травматологии и ортопедии имени Г.И. Турнера'              ,31},;
  {'32 НМИЦ онкологии'                                                         ,32},;
  {'33 НМИЦ стоматологии и челюстно-лицевой хирургии'                          ,33},;
  {'34 НМИЦ Лечебно-реабилитационный центр'                                    ,34},;
  {'35 НМИЦ колопроктологии им. А.Н. Рыжих'                                    ,35},;
  {'36 НМИЦ оториноларингологии ФМБА'                                          ,36};
}
Public mm_komu := {{"СМО/ТФОМС (ОМС)",0},;
                   {"Прочие компании",1},;
                   {"Комитеты/МО    ",3},;
                   {"Личный счёт    ",5}}
Public glob_arr_smo := {;
  {'ООО "Капитал МС"',      34007,1},;
  {'ОАО "СОГАЗ-Мед"',       34002,1},;
  {'АО ВТБ Мед.страхование',34003,0},;  // не работает
  {'ООО "ВСК-Милосердие"',  34004,0},;  // не работает
  {'КапиталЪ Медстрах',     34001,0},;
  {'ООО "МСК-Максимус"',    34006,0},;
  {'ТФОМС (иногородние)' ,  34   ,1};
 }
// 1-код,2-имя,3-ИНН,4-КПП,5-ОГРН,6-адрес,7-банк,8-р.счет,9-БИК
Public arr_rekv_smo := {;
  {"34001",;
   'ФИЛИАЛ ЗАКРЫТОГО АКЦИОНЕРНОГО ОБЩЕСТВА "КАПИТАЛ МЕДИЦИНСКОЕ СТРАХОВАНИЕ" В ГОРОДЕ ВОЛГОГРАДЕ',;
   "7709028619",;
   "344343001",;
   "1028601441274",;
   "400075 Волгоградская обл., г.Волгоград, ул.Историческая, д.122",;
   "",;
   "",;
   "";
  },;
  {"34002",;
   'ВОЛГОГРАДСКИЙ ФИЛИАЛ АКЦИОНЕРНОГО ОБЩЕСТВА "СТРАХОВАЯ КОМПАНИЯ "СОГАЗ - МЕД"',;
   "7728170427",;
   "344343001",;
   "1027739008440",;
   "400105 Волгоградская обл., г.Волгоград, ул.Штеменко, д.5",;
   "",;
   "",;
   "";
  },;
  {"34003",;
   'АКЦИОНЕРНОЕ ОБЩЕСТВО ВТБ МЕДИЦИНСКОЕ СТРАХОВАНИЕ',;
   "7704103750",;
   "774401001",;
   "1027739815245",;
   "400005 Волгоградская обл., г.Волгоград, ул.Мира, д.19",;
   "",;
   "",;
   "";
  },;
  {"34004",;
   'ВОЛГОГРАДСКИЙ ФИЛИАЛ ОБЩЕСТВА С ОГРАНИЧЕННОЙ ОТВЕТСТВЕННОСТЬЮ "СТРАХОВАЯ КОМПАНИЯ ВСК МИЛОСЕРДИЕ"',;
   "7730519137",;
   "775001001",;
   "1057746135325",;
   "400131 Волгоградская обл., г.Волгоград, ул.Коммунистическая, д.32",;
   "",;
   "",;
   "";
  },;
  {"34006",;
   'ФИЛИАЛ ОБЩЕСТВА С ОГРАНИЧЕННОЙ ОТВЕТСТВЕННОСТЬЮ "МЕДИЦИНСКАЯ СТРАХОВАЯ КОМПАНИЯ "МАКСИМУС" В Г.ВОЛГОГРАДЕ',;
   "6161056686",;
   "344445001",;
   "1106193000022",;
   "400074 Волгоградская обл., г.Волгоград, ул.Ковровская, д.24",;
   "",;
   "",;
   "";
  },;
  {"34007",;
   'ФИЛИАЛ ОБЩЕСТВА С ОГРАНИЧЕННОЙ ОТВЕТСТВЕННОСТЬЮ "КАПИТАЛ МЕДИЦИНСКОЕ СТРАХОВАНИЕ" В ВОЛГОГРАДСКОЙ ОБЛАСТИ',;
   "7813171100",;
   "344303001",;
   "1027806865481",;
   "400074 Волгоградская обл., г.Волгоград, ул.Рабоче-Крестьянская, д.30А",;
   "",;
   "",;
   "";
  },;
  {"34   ",;
   'ГОСУДАРСТВЕННОЕ УЧРЕЖДЕНИЕ "ТЕРРИТОРИАЛЬНЫЙ ФОНД ОБЯЗАТЕЛЬНОГО МЕДИЦИНСКОГО СТРАХОВАНИЯ ВОЛГОГРАДСКОЙ ОБЛАСТИ"',;
   "          ",;
   "         ",;
   "1023403856123",;
   "400005 г.Волгоград, проспект Ленина, 56а",;
   "",;
   "",;
   "";
  };
 }
//
Public mm_month := {"январь","февраль","март","апрель","май","июнь",;
                    "июль","август","сентябрь","октябрь","ноябрь","декабрь"}
Public mm_monthR := {"январе","феврале","марте","апреле","мае","июне",;
                     "июле","августе","сентябре","октябре","ноябре","декабре"}
//
Public tmp_ini := "TMP"+sini
Public tools_ini := dir_server+"TOOLS"+sini
Public local_tools_ini := "LOCTOOLS"+sini
Public f_stat_com := dir_exe+"stat_com"+sfrm
Public f_stat_lpu := dir_server+"stat_lpu"+sini
Public file_uchast := dir_server+"prik_uch"+smem
Public mm_danet := {{"нет",0},{"да ",1}}
Public mm_vid_polis := {{"старый",1},{"врем. ",2},{"новый ",3}}
Public mm_gorod_selo := {{"город",1},{"село",2},{"р/поселок",3}}
Public menu_vzros := {{"взрослый ",0},{"ребёнок  ",1},{"подросток",2}}
Public menupol := {"М","Ж"}
Public menu_rab := {{"работающий  ",0},;
                    {"неработающий",1},;
                    {"обучающ.ОЧНО",2}}
Public menu_predst := {{"родитель",1},;
                       {"опекун  ",2},;
                       {"прочий  ",0}}
Public mm_ekst := {{"в плановом порядке",0},;
                   {"по экст.показаниям",1},;
                   {"неотложная помощь ",2}}
Public mm_vskrytie := {{"не проводилось",0},;
                       {"паталого-анатомическое",1},;
                       {"судебно-медицинское",2}}
Public mm_ekst_smp := {{"неотложная",0},;
                       {"экстренная",1}}
Public mm_tip_school := {{"дошкольные учреждения",1},;
                         {"общие образовательные",0},;
                         {"професс., специальные",2}}
Public mm_vid_reab := {{"- не вводился -",0},;
                       {"без наличия системы кохлеарной имплантации у пациента",1},;
                       {"после кохлеарной имплантации, за исключением замены речевого процессора",2},;
                       {"после замены речевого процессора",3}}
Public garr_par_org := {; // перечень парных органов
  {"1 Правая нижняя конечность",1},;
  {"2 Левая нижняя конечность",2},;
  {"3 Правая верхняя конечность",3},;
  {"4 Левая верхняя конечности",4},;
  {"5 Правая молочная железа",5},;
  {"6 Левая молочная железа",6},;
  {"7 Правый глаз, придатки глаза",7},;
  {"8 Левый глаз, придатки глаза",8},;
  {"9 Правая сторона",9},;
  {"10 Левая сторона",10},;
  {"11 Таз (правая сторона)",11},;
  {"12 Таз (левая сторона)",12},;
  {"13 Грудная клетка (правая сторона)",13},;
  {"14 Грудная клетка (левая сторона)",14},;
  {"15 Верхняя челюсть",15},;
  {"16 Нижняя челюсть",16},;
  {"17 Позвоночник",17},;
  {"18 Грудина",18}}

Public glob_V025 := {; // Цели посещения
 {"1.0-Посещение по заболеванию",            1,"1.0"},;
 {"1.1-Посещениe в неотложной форме",        2,"1.1"},;
 {"1.2-Aктивное посещение",                  3,"1.2"},;
 {"1.3-Диспансерное наблюдение",             4,"1.3"},;
 {"2.1-Медицинский осмотр",                  5,"2.1"},;
 {"2.2-Диспансеризация",                     6,"2.2"},;
 {"2.3-Комплексное обследование",            7,"2.3"},;
 {"2.5-Патронаж",                            8,"2.5"},;
 {"2.6-Посещение по другим обстоятельствам", 9,"2.6"},;
 {"3.0-Обращение по заболеванию",           10,"3.0"},;
 {"3.1-Обращение с профилактической целью", 11,"3.1"},;
}
Public mm_prich_inv := {; // Причина инвалидности
  {"общее заболевание",1},;
  {"трудовое увечье",2},;
  {"профессиональное заболевание",3},;
  {"инвалидность с детства",4},;
  {"инвалидность с детства вследствие ранения (боевые действия в период ВОВ)",5},;
  {"военная травма",6},;
  {"заболевание получено в период военной службы",7},;
  {"заболевание радиационное (при исполнении военной службы) на Чернобыльской АЭС",8},;
  {"заболевание связано с катастрофой на Чернобыльской АЭС",9},;
  {"заболевание (иные обязанности исполнения военной службы) на Чернобыльской АЭС",10},;
  {'заболевание связано с аварией на ПО "Маяк"',11},;
  {'заболевание (иные обязанности исполнения военной службы) на ПО "Маяк"',12},;
  {"заболевание связано с последствиями радиационных воздействий",13},;
  {"заболевание радиационное (при исполнении военной службы) подразд.особого риска",14},;
  {"заболевание (ранение) при обслуживавании в/ч ВС СССР и РФ, воюющих за рубежом",15},;
  {"иные причины, установленные законодательством РФ",16}}
Public menu_vidud := {}
aadd(menu_vidud, {"Паспорт гражд.СССР",1,1,"ПАСПОРТ"})
aadd(menu_vidud, {"Загранпасп.гражд.СССР",2,0,"ЗГПАСПОРТ"})
aadd(menu_vidud, {"Свид-во о рождении (РФ)",3,1,"св-во о рож.РФ"})
aadd(menu_vidud, {"Уд-ние личности офицера",4,0,"УДОСТ ОФИЦЕРА"})
aadd(menu_vidud, {"Справка об освобождении",5,1,"СПРАВКА ОБ ОСВ"})
aadd(menu_vidud, {"Паспорт Минморфлота",6,0,"ПАСПОРТ МОРФЛТ"})
aadd(menu_vidud, {"Военный билет",7,0,"ВОЕННЫЙ БИЛЕТ"})
aadd(menu_vidud, {"Дипл.паспорт гражд.РФ",8,0,"ДИППАСПОРТ РФ"})
aadd(menu_vidud, {"Иностранный паспорт",9,1,"ИНОСТР ПАСПОРТ"})
aadd(menu_vidud, {"Свидетельство...беженца",10,0,"СВИД БЕЖЕНЦА"})
aadd(menu_vidud, {"Вид на жительство",11,1,"ВИД НА ЖИТЕЛЬ"})
aadd(menu_vidud, {"Удост-ие беженца в РФ",12,1,"УДОСТ БЕЖЕНЦА"})
aadd(menu_vidud, {"Врем.уд.личн.гражд.РФ",13,1,"ВРЕМ УДОСТ"})
aadd(menu_vidud, {"Паспорт гражд.России",14,1,"паспорт России"})
aadd(menu_vidud, {"Загранпасп.гражд.РФ",15,1,"ЗПАСПОРТ РФ"})
aadd(menu_vidud, {"Паспорт моряка",16,0,"ПАСПОРТ МОРЯКА"})
aadd(menu_vidud, {"Военный билет оф.запаса",17,0,"ВОЕН БИЛЕТ ОЗ"})
aadd(menu_vidud, {"Иные документы",18,1,"ПРОЧЕЕ"})
aadd(menu_vidud, {"Док-т инос.гражданина",21,0,"ИНОСТР ГРАЖДАН"})
aadd(menu_vidud, {"Док-т лица без гражданства",22,0,"ЛИЦО БЕЗ ГРАЖД"})
aadd(menu_vidud, {"Разр-ие на врем.проживание",23,0,"РАЗР НА ВР.ПР."})
aadd(menu_vidud, {"Свид-во о рожд.(не в РФ)",24,0,"св.о рож.не РФ"})
//
Public menu_osn_preb_RF := {; // Основания пребывания в РФ
  {"ВЖ (вид на жительство)",1},;
  {"РВП (разрешение на временнное пребывание)",0},;
  {"Миграционная карта",2},;
  {"Туристическая виза",3},;
  {"Медицинская виза",4},;
  {"Гостевая виза",5},;
  {"Деловая виза",6},;
  {"Транзитная виза",7},;
  {"Студенческая виза",8},;
  {"Рабочая виза",9},;
  {"Другая виза",10};
}
//
Public mm_bukva := {;
  {"A-амбулаторно-поликлиническая помощь (A)"    ,"A"},;
  {"B-СМП с тромболитической терапией"           ,"B"},;
  {"D-диспансеризация детей-сирот (стационарных)","D"},;
  {"E-скорая медицинская помощь"                 ,"E"},;
  {"F-профилактический осмотр несовершеннолетних","F"},;
  {"G-дерматовенерологическая помощь"            ,"G"},;
  {"H-высокотехнологичная медицинская помощь"    ,"H"},;
  {"I-периодический осмотр несовершеннолетних"   ,"I"},;
  {"J-амбулаторно-поликлиническая помощь (J)"    ,"J"},;
  {"K-отдельные медицинские услуги"              ,"K"},;
  {"M-законченный случай в стационаре (1.7.*)"   ,"M"},;
  {"N-стационарная помощь/дополнительные объёмы" ,"N"},;
  {"O-диспансеризация взрослого населения"       ,"O"},;
  {"R-профилактика взрослого населения"          ,"R"},;
  {"S-стационарная помощь"                       ,"S"},;
  {"T-стоматологическая помощь"                  ,"T"},;
  {"U-диспансеризация детей-сирот (под опекой)"  ,"U"},;
  {"V-предварительный осмотр несовершеннолетних" ,"V"},;
  {"Z-дневной стационар"                         ,"Z"};
 }
Public stm_kategor := {;  // код категории льготы
  {"инвалиды войны",1,1},;
  {"участники Великой Отечественной войны",2,2},;
  {'ветераны боевых действий (закон №5-ФЗ от 12.01.95г. "О ветеранах")',8,3},;
  {"военнослужащие не из действующей армии (период 22.06.41-03.09.45)",5,4},;
  {'лица, награждённые знаком "Жителю блокадного Ленинграда"',4,5},;
  {"лица, работавшие в период ВОВ на объектах ПВО и т.п.",14,6},;
  {"члены семей погибших (умерших) инвалидов войны, УВОВ, ветеранов...",3,7},;
  {"инвалиды",6,8},;
  {"дети-инвалиды",7,9},;
  {"Подв.рад.облуч.",9,0},;
  {"Подв.рад.облуч.(ЧАЭС)",91,0},;
  {"Подв.рад.обл.(Сем.п.)",92,0},;
  {"Подв.рад.облуч.(др.)",93,0},;
  {"Реабилитированный",10,0},;
  {"Подросток",11,0},;
  {"Ребенок до года",12,0},;
  {"прочие",13,13}}
Public stm_povod := {;
  {"Лечебно-диагностический",1},;
  {"Консультативный",2},;
  {"Диспансерное наблюдение",3},;
  {"Профилактический",4},;
  {"Профессиональный осмотр",5},;
  {"Реабилитационный",6},;
  {"Зубопротезный",7},;
  {"Протезно-ортопедический",8},;
  {"Прочий",9}}
Public stm_travma := {;
  {"__ нет __",0},;
  {"Промышленная",1},;
  {"Сельскохозяйственная",2},;
  {"Строительная",3},;
  {"Дорожно-транспортная пр-венная",4},;
  {"Прочая производственная",5},;
  {"Бытовая",6},;
  {"Уличная",7},;
  {"Дор.трансп., не связанная с пр-вом",8},;
  {"Школьная",9},;
  {"Спортивная",10},;
  {"Прочая, не связанная с пр-вом",11}}
Public rule_section := ;
  {"СПИСОК ОСТРЫХ ЗАБОЛЕВАНИЙ - ВСЕГДА ПЕРВИЧНЫЕ",;
   "СПИСОК ЗАБОЛЕВАНИЙ, ПО КОТОРЫМ ДОЛЖНА БЫТЬ ДИСПАНСЕНРИЗАЦИЯ",;
   "СПИСОК ОГРАНИЧЕНИЙ ДИАГНОЗОВ ПО ПОЛОВОМУ ПРИЗНАКУ",;
   "СПИСОК ДИАГНОЗОВ, КОТОРЫЕ ВООБЩЕ НЕ ДОЛЖНЫ ВВОДИТЬСЯ",;
   "ДАННЫЕ БУКВЫ У ОДНОГО БОЛЬНОГО ВСТРЕЧАЮТСЯ ТОЛЬКО РАЗ В ГОДУ",;
   "ТОЛЬКО ОДНА ИЗ ДАННЫХ БУКВ У БОЛЬНОГО ВСТРЕЧАЕТСЯ РАЗ В ГОД"}
Public mm1ist_fin :=  {{"бюджет",      I_FIN_BUD},;   // 1
                       {"расчеты с МО",I_FIN_LPU},;   // 2
                       {"платные",     I_FIN_PLAT},;  // 0
                       {"ДМС",         I_FIN_DMS},;   // 5
                       {"не оплачен",  I_FIN_NEOPL},; // 3
                       {"за свой счёт",I_FIN_OWN}}    // 4
Public mm_ist_fin := aclone(mm1ist_fin)
Ins_Array(mm_ist_fin,1,{"ОМС",         I_FIN_OMS})
// прочие компании
Public gmenu_strah := {}
aadd(gmenu_strah, {"name","C",30,0,NIL,NIL,;
                   space(30),NIL,"Название"})
aadd(gmenu_strah, {"fname","C",70,0,NIL,NIL,;
                   space(70),NIL,"Полное наименование"})
aadd(gmenu_strah, {"inn","C",20,0,NIL,NIL,;
                   space(20),NIL,"ИНН/КПП"})
aadd(gmenu_strah, {"adres","C",50,0,NIL,NIL,;
                   space(50),NIL,"Адрес"})
aadd(gmenu_strah, {"telefon","C",8,0,NIL,NIL,;
                   "  -  -  ",NIL,"Телефон"})
aadd(gmenu_strah, {"bank","C",70,0,NIL,NIL,;
                   space(70),NIL,"Банк"})
aadd(gmenu_strah, {"smfo","C",10,0,NIL,NIL,space(10),NIL,;
                   "БИК"})
aadd(gmenu_strah, {"r_schet","C",45,0,NIL,NIL,space(45),NIL,;
                   "Расчетный счет"})
aadd(gmenu_strah, {"k_schet","C",20,0,NIL,NIL,space(20),NIL,;
                   "Корр.счет"})
aadd(gmenu_strah, {"okonh","C",15,0,NIL,NIL,space(15),NIL,;
                   "Код по ОКОНХ"})
aadd(gmenu_strah, {"okpo","C",15,0,NIL,NIL,space(15),NIL,;
                   "Код по ОКПО"})
aadd(gmenu_strah, {"tfoms","N",2,0,NIL,NIL,0,NIL,;
                   "Код ТФОМС",,{||.f.}})
aadd(gmenu_strah, {"parakl","N",1,0,NIL,;
                   {|x|menu_reader(x,mm_danet,A__MENUVERT)},;
                   0,{|x|inieditspr(A__MENUVERT,mm_danet,x)},;
                   'Включать ПАРАКЛИНИКУ в сумму счета по данной компании:'})
aadd(gmenu_strah, {"ist_fin","N",1,0,NIL,;
                   {|x|menu_reader(x,mm1ist_fin,A__MENUVERT)},;
                   0,{|x|inieditspr(A__MENUVERT,mm1ist_fin,x)},;
                  'Источник финансирования:'})
// комитеты/МО
Public gmenu_komit := {}
aadd(gmenu_komit, {"name","C",30,0,NIL,NIL,;
                   space(30),NIL,"Название"})
aadd(gmenu_komit, {"fname","C",70,0,NIL,NIL,;
                   space(70),NIL,"Полное наименование"})
aadd(gmenu_komit, {"inn","C",20,0,NIL,NIL,;
                   space(20),NIL,"ИНН/КПП"})
aadd(gmenu_komit, {"adres","C",50,0,NIL,NIL,;
                   space(50),NIL,"Адрес"})
aadd(gmenu_komit, {"telefon","C",8,0,NIL,NIL,;
                   "  -  -  ",NIL,"Телефон"})
aadd(gmenu_komit, {"bank","C",70,0,NIL,NIL,;
                   space(70),NIL,"Банк"})
aadd(gmenu_komit, {"smfo","C",10,0,NIL,NIL,space(10),NIL,;
                   "БИК"})
aadd(gmenu_komit, {"r_schet","C",45,0,NIL,NIL,space(45),NIL,;
                   "Расчетный счет"})
aadd(gmenu_komit, {"k_schet","C",20,0,NIL,NIL,space(20),NIL,;
                   "Корр.счет"})
aadd(gmenu_komit, {"okonh","C",15,0,NIL,NIL,space(15),NIL,;
                   "Код по ОКОНХ"})
aadd(gmenu_komit, {"okpo","C",15,0,NIL,NIL,space(15),NIL,;
                   "Код по ОКПО"})
aadd(gmenu_komit, {"parakl","N",1,0,NIL,;
                   {|x|menu_reader(x,mm_danet,A__MENUVERT)},;
                   0,{|x|inieditspr(A__MENUVERT,mm_danet,x)},;
                   'Включать ПАРАКЛИНИКУ в сумму счета по данному комитету (МО):'})
aadd(gmenu_komit, {"ist_fin","N",1,0,NIL,;
                   {|x|menu_reader(x,mm1ist_fin,A__MENUVERT)},;
                   0,{|x|inieditspr(A__MENUVERT,mm1ist_fin,x)},;
                   'Источник финансирования:'})
// ДСМО и предприятия по взаимозачёту для платных услуг
Public gmenu_pl_d_smo := {}
aadd(gmenu_pl_d_smo, {"name","C",30,0,NIL,NIL,;
                      space(30),NIL,"Название"})
aadd(gmenu_pl_d_smo, {"fname","C",70,0,NIL,NIL,;
                      space(70),NIL,"Полное наименование"})
aadd(gmenu_pl_d_smo, {"inn","C",20,0,NIL,NIL,;
                      space(20),NIL,"ИНН/КПП"})
aadd(gmenu_pl_d_smo, {"adres","C",100,0,NIL,NIL,;
                      space(100),NIL,"Адрес"})
aadd(gmenu_pl_d_smo, {"telefon","C",8,0,NIL,NIL,;
                      "  -  -  ",NIL,"Телефон"})
aadd(gmenu_pl_d_smo, {"bank","C",100,0,NIL,NIL,;
                      space(100),NIL,"Банк"})
aadd(gmenu_pl_d_smo, {"smfo","C",10,0,NIL,NIL,space(10),NIL,;
                      "БИК"})
aadd(gmenu_pl_d_smo, {"r_schet","C",45,0,NIL,NIL,space(45),NIL,;
                      "Расчетный счет"})
aadd(gmenu_pl_d_smo, {"k_schet","C",20,0,NIL,NIL,space(20),NIL,;
                      "Корр.счет"})
aadd(gmenu_pl_d_smo, {"n_dog","C",30,0,NIL,NIL,space(30),NIL,;
                      "Номер договора"})
aadd(gmenu_pl_d_smo, {"d_dog","D",8,0,NIL,NIL,ctod(""),NIL,;
                      "Дата договора"})
// Ваша организация
Public gmenu_organ := {},;
       mm_filial_tf := {{"Волгоградский",1},;
                        {"Заволжский",2},;
                        {"Северный",3},;
                        {"Медведицкий",4},;
                        {"Хопёрский",5},;
                        {"Южный",6}}
aadd(gmenu_organ, {"kod_tfoms","C",8,0,NIL,NIL,;
                   space(8),NIL,;
                   'Регистрационный код МО в ТФОМС',;
                   {|g| valid_kod_tfoms(g) },;
                   {|| tip_polzovat==0}})
aadd(gmenu_organ, {"name_tfoms","C",60,0,NIL,,'',,'Наименование (в ТФОМС)',,{||.f.}})
aadd(gmenu_organ, {"uroven","N",1,0,NIL,,0,,'Уровень цен Вашей МО',,{||.f.}})
aadd(gmenu_organ, {"name","C",130,0,NIL,NIL,;
                   space(130),NIL,"Название"})
aadd(gmenu_organ, {"name_schet","C",130,0,NIL,NIL,;
                   space(130),NIL,"Название для счёта"})
aadd(gmenu_organ, {"name_xml","C",255,0,NIL,NIL,;
                   space(255),NIL,"Название для портала МЗ РФ"})
aadd(gmenu_organ, {"inn","C",20,0,NIL,NIL,;
                   space(20),NIL,"ИНН/КПП"})
aadd(gmenu_organ, {"adres","C",70,0,NIL,NIL,;
                   space(70),NIL,"Адрес"})
aadd(gmenu_organ, {"telefon","C",20,0,NIL,NIL,;
                   space(20),NIL,"Телефон"})
aadd(gmenu_organ, {"bank","C",130,0,NIL,NIL,;
                   space(130),NIL,"Банк"})
aadd(gmenu_organ, {"smfo","C",10,0,NIL,NIL,space(10),NIL,;
                   "БИК"})
aadd(gmenu_organ, {"r_schet","C",45,0,NIL,NIL,space(45),NIL,;
                   "Расчетный счет"})
aadd(gmenu_organ, {"k_schet","C",20,0,NIL,NIL,space(20),NIL,;
                   "Корр.счет"})
aadd(gmenu_organ, {"okonh","C",15,0,NIL,NIL,space(15),NIL,;
                   "Код по ОКОНХ"})
aadd(gmenu_organ, {"okpo","C",15,0,NIL,NIL,space(15),NIL,;
                   "Код по ОКПО"})
aadd(gmenu_organ, {"e_1","C",1,0,NIL,NIL,;
                   space(1),NIL,"Банковские реквизиты для перечисления доплат из средств субсидий ФФОМС:",,;
                   {||.f.}})
aadd(gmenu_organ, {"name2","C",130,0,NIL,NIL,;
                   space(130),NIL,space(5)+"- название"})
aadd(gmenu_organ, {"bank2","C",130,0,NIL,NIL,;
                   space(130),NIL,space(5)+"- банк"})
aadd(gmenu_organ, {"smfo2","C",10,0,NIL,NIL,space(10),NIL,;
                   space(5)+"- БИК"})
aadd(gmenu_organ, {"r_schet2","C",45,0,NIL,NIL,space(45),NIL,;
                   space(5)+"- расчетный счет"})
aadd(gmenu_organ, {"k_schet2","C",20,0,NIL,NIL,space(20),NIL,;
                   space(5)+"- корр.счет"})
aadd(gmenu_organ, {"ogrn","C",15,0,,,space(15),,;
                   "ОГРН ЛПУ"})
aadd(gmenu_organ, {"ruk_fio","C",60,0,,,space(60),,;
                   "Ф.И.О. главного врача"})
aadd(gmenu_organ, {"ruk","C",20,0,,,space(20),,;
                   "Фамилия и инициалы главного врача (им.падеж)"})
aadd(gmenu_organ, {"ruk_r","C",20,0,,,space(20),,;
                   "Фамилия и инициалы главного врача (род.падеж)"})
aadd(gmenu_organ, {"bux","C",20,0,,,space(20),,;
                   "Фамилия и инициалы главного бухгалтера"})
aadd(gmenu_organ, {"ispolnit","C",20,0,,,space(20),,;
                   "Ф.И.О. исполнителя для счетов ОМС"})
aadd(gmenu_organ, {"name_d","C",32,0,,,space(32),,;
                   "Наименование орг-ии (для договора)"})
aadd(gmenu_organ, {"filial_h","N",1,0,NIL,;
                   {|x|menu_reader(x,mm_filial_tf,A__MENUVERT)},;
                   0,{|x|inieditspr(A__MENUVERT,mm_filial_tf,x)},;
                   "Филиал ТФОМС, в который отправляется файл с ходатайствами"})
R_Use(dir_server+"organiz",,"ORG")
fl := (fieldnum("name_xml") == 0)
use
if fl
  init_base(dir_server+"organiz",,gmenu_organ,0,,.t.)
endif
//
Public mm_ortispol := {{"Техник",0},;
                       {"Врач",1}}
Public gmenutorto := {}
aadd(gmenutorto, {"name","C",65,0,NIL,NIL,;
                  space(65),NIL,"Наименование материала"})
aadd(gmenutorto, {"tip","N",1,0,NIL,;
                  {|x|menu_reader(x,mm_ortispol,A__MENUVERT)},;
                  0,{|x|inieditspr(A__MENUVERT,mm_ortispol,x)},;
                  'Исполнитель услуги'})
// приёмный покой
Public glob_perso_pp := 0 // код по БД mo_pp
Public pict_time := "99:99"
Public mmpp_regim := {; // ИСПРАВЛЕННОЕ меню режима лечения
  {"стационар круглосуточного пребывания",1},;   // 1
  {"дневной стационар при больнице",2},;   // 3
  {"дневной стационар при поликлинике",3},;   // 3
  {"дневной стационар на дому",4}}    // 3
Public mmpp_rab := {; // ИСПРАВЛЕННОЕ меню социального статуса (битовое)
  {"Дошкольник",1},;  //
  {"Организован",2},;  //
  {"Неорганизован",3},;  //
  {"Учащийся",4},;  //
  {"Призывник",11},;  //
  {"Работает",5},;     // 0
  {"Не работает",6},;  // 1
  {"БОМЖ",7},;  //
  {"Пенсионер",8},;  //
  {"Военнослужащий",9},;  // еще ?? какой-то код
  {"Член семьи воен-го",10}}
Public mmpp_kategor := {;  // ИСПРАВЛЕННОЕ меню категорий
  {"Инвалид ВОВ",1,1},;
  {"Участник ВОВ",2,2},;
  {"Воин-интернационалист",3,8},;
  {"Участник боевых действий",12,8},;
  {"Лицо, подвергшееся рад.облуч",4,9},;
  {"в т.ч. подв.рад.облуч.(ЧАЭС)",5,91},;
  {"Инвалид I группы",6,6},;
  {"Инвалид II группы",7,6},;
  {"Инвалид III группы",8,6},;
  {"Ребенок-инвалид",9,7},;
  {"Инвалид с детства",10,6},;
  {"Прочие",11,13}}
Public mmpp_travma := {;   // ИСПРАВЛЕННОЕ меню видов травм
  {"--",0},;
  {"Промышленная",1},;
  {"Транспортная производственная",2},;
  {"  в т.ч. ДТП производственная",3},;
  {"Сельскохозяйственная",4},;
  {"Прочая производственная",5},;
  {"Бытовая",6},;
  {"Уличная",7},;
  {"Трансп., не связанная с пр-ством",8},;
  {"  в т.ч. ДТП непроизводственная",9},;
  {"Школьная",10},;
  {"Спортивная",11},;
  {"Противоправная травма",12},;
  {"Прочая, не связанная с пр-ством",13}}
Public menu_stdnst:= {{"стационар ",0},;
                      {"днев.стац.",1}}
Public menu_sost_op:= {{"--            ",0},;
                       {"алкогольного  ",1},;
                       {"наркотического",2}}
Public menu0gospit := {{"первично",0},;
                       {"повторно",1}}
Public menu2gospit := {{"в первые 6 часов",1},;
                       {"в теч.7-24 часов",2},;
                       {"позднее 24 часов",0}}
Public menu_vid_opl := {{"ОМС",1},;  //  (битовое)
                        {"Бюджет",2},;
                        {"Пл.услуги",3},;
                        {"ДМС",4},;
                        {"Другое",5}}
Public mmpp_kem_dost := {{"самостоятельно",0},;
                         {"скорой помощью",1},;
                         {"скорой помощью (транспорт)",2},;
                         {"прочее",99}}
Public mmpp_pr_gospit := {{"отказался от госпитализации",1},;
                          {"карантин в отделении       ",2},;
                          {"отказ по сопутс.заболеванию",3},;
                          {"нет показаний для госпит-ии",4},;
                          {"направлен в другое МО      ",5},;
                          {"оказана амб.пом. в пр.покое",99}}
Public mmpp1ishod := {{"выписан",1},;
                      {"в т.ч. в дневной стационар",2},;
                      {"в круглосуточный стационар",3},;
                      {"переведен в другой стационар",4}}
Public mmpp2ishod := {{"выздоровление",1},;
                      {"улучшение",2},;
                      {"без перемен",3},;
                      {"ухудшение",4},;
                      {"здоров",5},;
                      {"умер",6}}
Public mm_err_csv_prik := {;
  {"Неверная команда",1},;
  {"Отсутствует единый номер полиса для полиса ОМС единого образца",2},;
  {'Длина временного номера полиса не равна 9',3},;
  {'Длина нового номера полиса не равна 16 (неверная контрольная сумма)',4},;
  {"Недопустимые знаки или сочетания знаков в фамилии",5},;
  {"Недопустимые знаки или сочетания знаков в имени",6},;
  {"Недопустимые знаки или сочетания знаков в отчестве",7},;
  {"Не указана дата рождения",10},;
  {"Ошибка в дате рождения (указана нереальная дата)",11},;
  {"Указан некорректный СНИЛС",12},;
  {"В строке имеются недопустимые символы",13},;
  {"Неверный порядковый номер файла",19},;
  {"Дата актуализации больше текущей даты",20},;
  {"Ошибка в значении СНИЛС",21},;
  {"Ошибка в контрольном числе СНИЛС",22},;
  {"Неверный код территории",24},;
  {"Отсутствует серия и номер для полиса ОМС старого образца или номер для временного свидетельства",25},;
  {"Ошибка в заголовке метаданных файла",38},;
  {"Ошибка в формате даты прикрепления",46},;
  {"Не указана дата актуализации",86},;
  {"Дата прикрепления больше даты актуализации",87},;
  {"Формат единого номера полиса неверен",102},;
  {"Неверная версия формата",183},;
  {"Не указан СНИЛС медицинского работника",239},;
  {"Не указан код способа прикрепления к МО",242},;
  {"Недопустимый код способа прикрепления к МО",243},;
  {"Дата прикрепления не заполнена",245},;
  {"Ошибка в дате прикрепления",246},;
  {"Реестровый номер МО не указан",264},;
  {"Реестровый номер МО не найден",265},;
  {"Неверный формат реестрового номера МО",300},;
  {"По предоставленным данным застрахованное лицо не найдено в регистре застрахованных лиц",404},;
  {"Единый номер полиса не найден в регистре застрахованных лиц",500},;
  {"Невозможно идентифицировать застрахованное лицо в едином регистре застрахованных лиц",522},;
  {"Единый номер полиса не соответствует указанному документу, подтверждающему факт страхования",525},;
  {"МО не работает на территории",541},;
  {'Застрахованное лицо не прикреплено к МО (для операции "И" не найдена действующая запись о прикреплении)',542},;
  {"Медработник не найден в Федеральном реестре медработников",543},;
  {"Медработник не работает в указанной МО",544},;
  {"Указан второй медработник с той же должностью",545},;
  {"Указан третий медработник (более двух прикреплений)",546},;
  {"Дата прикрепления к медработнику меньше даты прикрепления к МО или предыдущему медработнику",547},;
  {"В реестре отсутствуют сведения по прикреплению указанного лица к МО",548},;
  {"Для лица, не идентифицированного в реестре застрахованных, не указан ЕНП",555},;
  {"Дата заявления, указанная в файле, меньше имеющейся в СРЗ даты прикрепления",600},;
  {"Прикрепление в течение одного года к этой же МО (некорректное прикрепление)",701},;
  {"Прикрепление в течение одного года к другой МО (некорректное прикрепление)",702},;
  {"На указанную дату прикрепления ЗЛ не имеет действующего страхования в Волгоградской области",703},;
  {"Дата прикрепления больше даты смерти",704},;
  {"Неверный способ прикрепления",705},;
  {"Застрахованный умер",706},;
  {"Неверный код способа прикрепления или прикрепление без изменения места жительства в одном году",707},;
  {'Неверная дата прикрепления или неверно указана категория врача',708},;
  {"ЗЛ уже прикреплено к Вашей организации по данным РС СРЗ",709},;
  {"Ошибка в дате открепления",746},;
  {"Обработка данных ЗЛ не выполнялась (направить повторно)",801},;
  {"ЗЛ не найдено в РС СРЗ (проверить данные и направить повторно)",802},;
  {"Наличие ошибок ФЛК, прикладной обработки (проверить данные и направить повторно)",803},;
  {"В программе обработки возникла исключительная ситуация",99};
 }
Public mm_reason_annul := {; // список причин не госпитализации пациента
  {"1-отсутствие показаний для госпитализации",1},;
  {"2-непредставление необходимого пакета документов (отказ стационара)",2},;
  {"3-инициативный отказ от госпитализации пациентом",3},;
  {"4-отказ от госпитализации по эпидемиологическим показаниям",4},;
  {"5-карантин в стационарном отделении",5},;
  {"6-направление застрахованного лица не по профилю заболевания",6},;
  {"7-неявка пациента на госпитализацию",7},;
  {"8-смерть до госпитализации",8},;
  {"9-прочие причины",9};
 }
rest_box(buf)
return NIL

*

***** 05.05.19 инициализация программы
Function Init_Program()
Public mm_kdp2 := {{"в МО",0},{"КДП2",1},{"РДЛ ",2}}
Public mm_vokod := {{"в МО ",0},{"ВОКОД",3}}
Public glob_arr_usl_LIS := {;
  "4.11.136",;//   "Клинический анализ крови (развёрнутый)"
  "4.11.137",;//   "Клинический анализ крови (3 показателя)"
  "4.12.169",;//   "Исследование уровня глюкозы в крови"
  "4.12.170",;//   "Определение гликированного гемоглобина крови"
  "4.12.171",;//   "Тест на толерантность к глюкозе"
  "4.12.172",;//   "Биохимический общетерапевтическ.анализ крови"
  "4.12.173",;//   "Исследование липидного спектра крови"
  "4.12.174",;//   "Исследование крови на общий холестерин"
  "4.14.66",;//    "Кровь на простат-специфический антиген"
  "4.14.67" ,;//   "пролактин (гормон)"
  "4.14.68" ,;//   "фолликулостимулирующий гормон"
  "4.14.69" ,;//   "лютеинизирующий гормон"
  "4.14.70" ,;//   "эстрадиол (гормон)"
  "4.14.71" ,;//   "прогестерон (гормон)"
  "4.14.72" ,;//   "тиреотропный гормон"
  "4.14.73" ,;//   "трийодтиронин (гормон)"
  "4.14.74" ,;//   "тироксин (гормон)"
  "4.14.75" ,;//   "соматотропный гормон"
  "4.14.76" ,;//   "кортизол (гормон)"
  "4.14.77" ; //   "тестостерон (гормон)"
}
InitSpravFFOMS()
// инициализация справочника специальностей в виде DBF-файла
init_tmp_prvs(,.t.)
InitSpravOthers()
// диспансеризация детей-сирот
Public dds_arr_osmotr_KDP2 := {;  // замена на врачебные приёмы без гематологии
  {"2.83.1" ,"2.83.25"},; // пульмонолог
  {"2.83.2" ,"2.83.26"},; // дерматовенеролог
  {"2.83.3" ,"2.83.27"},; // ревматолог
  {"2.83.4" ,"2.83.28"},; // аллерголог-иммунолог
  {"2.83.5" ,"2.83.29"},; // детский кардиолог
  {"2.83.6" ,"2.83.30"},; // гастроэнтеролог
  {"2.83.7" ,"2.83.31"},; // нефролог
  {"2.83.8" ,"2.83.32"},; // гематолог
  {"2.83.9" ,"2.83.33"},; // инфекционист
  {"2.83.10","2.83.34"},; // детский онколог
  {"2.83.11","2.83.35"},; // нейрохирург
  {"2.83.12","2.83.36"},; // колопроктолог
  {"2.83.13","2.83.37"},; // сердечно-сосудистый хирург
  {"2.83.14","2.83.38"},; // педиатр
  {"2.83.15","2.83.39"},; // врач общей практики
  {"2.83.16","2.83.40"},; // акушер-гинеколог (девочки)
  {"2.83.17","2.83.41"},; // детский уролог-андролог (мальчики)
  {"2.83.18","2.83.42"},; // детский хирург
  {"2.83.19","2.83.43"},; // травматолог-ортопед
  {"2.83.20","2.83.44"},; // невролог
  {"2.83.21","2.83.45"},; // офтальмолог
  {"2.83.22","2.83.46"},; // оториноларинголог
  {"2.83.23","2.83.47"},; // детский стоматолог
  {"2.83.24","2.83.48"};  // детский эндокринолог
}
Public dds_arr_osm1 := {;
  {"офтальмолог","",0,17,{65},{1112},{"2.83.21"}},;
  {"оториноларинголог","",0,17,{162,64},{1111,111101},{"2.83.22"}},;
  {"детский хирург","",0,17,{20},{1135},{"2.83.18"}},;
  {"травматолог-ортопед","",0,17,{100},{1123},{"2.83.19"}},;
  {"акушер-гинеколог (девочки)","Ж",0,17,{136,2},{1101},{"2.83.16"}},;
  {"детский уролог-андролог (мальчики)","М",0,17,{19},{112603,113502},{"2.83.17"}},;
  {"детский стоматолог","",3,17,{86},{1401,140102},{"2.83.23"}},;
  {"детский эндокринолог","",5,17,{21},{1127,112702,113402},{"2.83.24"}},;
  {"невролог","",0,17,{53},{1109},{"2.83.20"}},;
  {"психиатр","",0,17,{72},{1115},{"2.4.1"}},;
  {"педиатр","",0,17,{68,57},{1134,1110},{"2.83.14","2.83.15"}};
 }
Public count_dds_arr_osm1 := len(dds_arr_osm1)
//
Public dds_arr_osm2 := {;
  {"пульмонолог","",0,17,{75},{113413,112208,112501},{"2.83.1"}},;
  {"дерматовенеролог","",0,17,{16},{1104},{"2.83.2"}},;
  {"ревматолог","",0,17,{77},{113414,112209},{"2.83.3"}},;
  {"аллерголог-иммунолог","",0,17,{4},{113405,112214},{"2.83.4"}},;
  {"детский кардиолог","",0,17,{17},{113403},{"2.83.5"}},;
  {"гастроэнтеролог","",0,17,{11},{113407,112201},{"2.83.6"}},;
  {"нефролог","",0,17,{56},{113412,112207},{"2.83.7"}},;
  {"гематолог","",0,17,{12},{113408,112202},{"2.83.8","2.3.1"}},;
  {"инфекционист","",0,17,{28},{1106},{"2.83.9"}},;
  {"детский онколог","",0,17,{18},{113401,112801,113501},{"2.83.10","2.3.1"}},;
  {"нейрохирург","",0,17,{54},{112602,113504},{"2.83.11"}},;
  {"колопроктолог","",0,17,{30},{112601,113503},{"2.83.12"}},;
  {"сердечно-сосудистый хирург","",0,17,{81},{112604,113505},{"2.83.13"}},;
  {"педиатр","",0,17,{68,57},{1134,1110},{"2.83.14","2.83.15"}};
 }
Public count_dds_arr_osm2 := len(dds_arr_osm2)
//
Public dds_arr_iss := {;
  {"Клинический анализ мочи","",0,17,{34},{1107,1301,1402,1702,1801,2011,2013},{"4.2.153"}},;
  {"Клинический анализ крови","",0,17,{34},{1107,1301,1402,1702,1801,2011,2013},{"4.11.136"}},;
  {"Исследование уровня глюкозы в крови","",0,17,{34},{1107,1301,1402,1702,1801,2011,2013},{"4.12.169"}},;
  {"Электрокардиография","",0,17,{111},{110103,110303,110906,111006,111905,112212,112611,113418,113509,180202,2021},{"13.1.1"}},;
  {"Флюорография легких (с 15 лет)","",15,17,{78},{1118,1802,2020},{"7.61.3"}},;
  {"УЗИ головного мозга (нейросонография) (до 1 года)","",0,0,{106},{110101,111004,111802,111903,112211,112610,113416,113508,180203},{"8.1.1"}},;
  {"УЗИ щитовидной железы (с 7 лет)","",7,17,{106},{110101,111004,111802,111903,112211,112610,113416,113508,180203},{"8.1.2"}},;
  {"УЗИ сердца","",0,17,{106},{110101,111004,111802,111903,112211,112610,113416,113508,180203},{"8.1.3"}},;
  {"УЗИ тазобедренных суставов (до 1 года)","",0,0,{106},{110101,111004,111802,111903,112211,112610,113416,113508,180203},{"8.1.4"}},;
  {"УЗИ органов брюшной полости комплексное профилактическое","",0,17,{106},{110101,111004,111802,111903,112211,112610,113416,113508,180203},{"8.2.1"}},;
  {"УЗИ органов репродуктивной системы","",7,17,{106},{110101,111004,111802,111903,112211,112610,113416,113508,180203},{"8.2.2","8.2.3"}};
 }
Public count_dds_arr_iss := len(dds_arr_iss)
// диспансеризация взрослого населения
Public arr_vozrast_DVN := {21,24,27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99}
Public arr2m_vozrast_DVN := {49,53,55,59,61,65,67,71,73} // 1 раз в 2 года все
Public arr2g_vozrast_DVN := {50,52,56,58,62,64,68,70}    // 1 раз в 2 года женщины
Public dvn_arr_usl18 := {; // Услуги на экран для ввода
  {"Измерение внутриглазного давления","3.4.9",1,0,1,;
    {60,63,66,69,72,75,78,81,84,87,90,93,96,99},;
    {60,63,66,69,72,75,78,81,84,87,90,93,96,99},;
    1,1,65,{1112};
   },;
  {"Исследование крови на общий холестерин","4.12.174",{1,3},0,1,;
    {21,24,27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84},;
    {21,24,27,30,33,36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84},;
    1,1,34,{1107,1301,1402,1702,1801,2011,2013};
   },;
  {"Исследование уровня глюкозы в крови","4.12.169",{1,3},0,1,;
    1,1,1,1,34,{1107,1301,1402,1702,1801,2011,2013};
   },;
  {"Клинический анализ крови (3 показателя)","4.11.137",3,0,1,0,0,;
    1,1,34,{1107,1301,1402,1702,1801,2011,2013};
   },;
  {"Исследование кала на скрытую кровь","4.8.4",{1,3,4},0,1,;
    {51,57,63,69},;
    {51,57,63,69},;
    {46,98},{46,98},34,{1107,1301,1402,1702,1801,2011,2013},,arr2m_vozrast_DVN,arr2m_vozrast_DVN;
   },;
  {"Кровь на простат-специфический антиген","4.14.66",1,0,1,;
    {45,51},;
    0,;
    1,0,34,{1107,1301,1402,1702,1801,2011,2013};
   },;
  {"Осмотр акушеркой, взятие мазка (соскоба)","4.1.12",1,0,1,; // женщины
    0,;
    {30,33,36,39,42,45,48,51,54,57,60},;
    1,1,{3,42,136},{2003,2002,1101};
   },;
  {"Иссл-е взятого цитологического материала","4.20.1",1,0,1,; // если невозможна
    0,;                                                        // 4.1.12,
    {30,33,36,39,42,45,48,51,54,57,60},;     // то очистить
    1,1,34,{1107,1301,1402,1702,1801,2011,2013};               // эту услугу
   },;
  {"Маммография обеих молочных желез","7.57.3",{1,3,4},0,1,; // женщины
    0,;
    {39,42,45,48,54,60,66},;
    0,{40,74},78,{1118,1802,2020},,0,arr2g_vozrast_DVN;
   },;
  {"Флюорография лёгких","7.61.3",{1,3},0,1,;
    1,1,1,1,78,{1118,1802,2020};
   },;
  {"Электрокардиография (в покое)","13.1.1",1,0,1,;
    {36,39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99},; // для мужчин обязательно с 36 лет
    {45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99},; // для женщин обязательно с 45 лет
    1,1,111,{110103,110303,110906,111006,111905,112212,112611,113418,113509,180202,2021};
   },;
  {"Спирометрия","16.1.717",2,0,1,; // "2.84.11"
    1,1,1,1,111,{110103,110303,110906,111006,111905,112212,112611,113418,113509,180202,2021};
   },;
  {"Дуплексное сканир-ие брахиоцефальных артерий","8.23.706",2,0,1,; // "2.84.1"
    1,1,1,1,106,{110101,111004,111802,111903,112211,112610,113416,113508,180203};
   },;
  {"Ректосигмоколоноскопия диагностическая","10.6.710",{2,5},0,1,; // "2.84.6"
    1,1,1,1,123,{110104,111007,112221,112609,113419,113511},,arr2m_vozrast_DVN,arr2m_vozrast_DVN;
   },;
  {"Углубленное профилактическое консультирование","56.1.723",2,0,1,;
    1,1,1,1,{97,57,42},{1122,1110,2002};
   },;
  {"Приём врача невролога","2.84.1",2,1,0,;
    1,1,1,1,53,{1109};
   },;
  {"Приём врача офтальмолога","2.84.3",2,1,0,;
    1,1,1,1,65,{1112};
   },;
  {"Приём врача оториноларинголога","2.84.8",2,1,0,;
    1,1,1,1,162,{1111};
   },;
  {"Приём врача уролога (хирурга)","2.84.10",2,1,0,;
    1,1,1,0,{108,112},{112603,1126};
   },;
  {"Приём врача акушера-гинеколога","2.84.5",{2,5},1,0,;
    1,1,0,1,136,{1101},,0,arr2g_vozrast_DVN;
   },;
  {"Приём врача колопроктолога (хирурга)","2.84.6",{2,5},1,0,;
    1,1,1,1,{30,30,112},{112601,113503,1126},,arr2m_vozrast_DVN,arr2m_vozrast_DVN;
   },;
  {"Приём врача терапевта",{"2.3.5","2.84.11","2.3.2","2.3.6","2.84.11"},{1,2,3,4,5},1,0,;
    1,1,1,1,{97,57,42},{1122,1110,2002},;
    {{"2.3.2",57},{"2.3.2",97},{"2.3.3",42},{"2.3.5",57},{"2.3.5",97},{"2.3.6",57},{"2.3.6",97},;
     {"2.84.11",57},{"2.84.11",97}},1,1;
   };
 }
Public dvn_arr_usl := aclone(dvn_arr_usl18)
Public count_dvn_arr_usl := len(dvn_arr_usl)
//
Public dvn_2_etap := {; // обязательное сочетание услуг второго этапа
   {{"2.84.1"}, {"8.23.706"},45,90},; // невролог
   {{"2.84.11"},{"8.23.706"},45,90},; // терапевт
   {{"2.84.6"}, {"10.6.710","10.4.701"},40,75};  // колопроктолог
 }
//
Public dvn_arr_umolch18 := {; // услуги, записываемые всегда по умолчанию
  {"Опрос (анкетирование)","56.1.16",{1,3},1,1,1,1,0},;
  {"Измерение артериального давления","3.1.5",{1,3},1,1,1,1,0},;
  {"Антропометрия","3.1.19",{1,3},1,1,1,1,0},;
  {"Определение относительного суммарного сердечно-сосудистого риска","56.1.18",1,{21,39},{21,39},1,1,1},;
  {"Определение абсолютного суммарного сердечно-сосудистого риска","56.1.19",1,{42,63},{42,63},1,1,1},;
  {"Индивидуальное профилактическое консультирование","56.1.21",1,1,1,1,1,1},; // new
  {"Определение группы состояния здоровья","56.1.13",3,1,1,1,1,1},;
  {"Краткое профилактическое консультирование","56.1.14",3,1,1,1,1,1},;
  {"Определение суммарного сердечно-сосудистого риска","56.1.17",3,1,1,{18,65},{18,65},1};
 }
Public dvn_arr_umolch := aclone(dvn_arr_umolch18)
Public count_dvn_arr_umolch := len(dvn_arr_umolch)
//
Public dvn_700 := {; // какие услуги с ценой добавить к нулевым услугам
  {"2.3.5"   ,"2.90.3"  },; //приём терапевта дисп-ия 1 этап (1 раз в 3 года)
  {"2.3.6"   ,"2.90.4"  },; //приём терапевта дисп-ия 1 этап (1 раз в 2 года)
  {"2.3.3"   ,"2.90.2"  },; //посещение к фельдшеру
  {"3.4.9"   ,"3.4.709" },; //"Измерение внутриглазного давления"
  {"4.12.174","4.12.774"},; //"Исследование крови на общий холестерин"
  {"4.12.169","4.12.769"},; //"Исследование уровня глюкозы в крови"
  {"4.8.4"   ,"4.8.704" },; //"Исследование кала на скрытую кровь"
  {"4.14.66" ,"4.14.766"},; //"Кровь на простат-специфический антиген",
  {"4.1.12"  ,"4.1.712" },; //"Осмотр акушеркой, взятие мазка (соскоба)"
  {"4.20.1"  ,"4.20.701"},; //"Иссл-е взятого цитологического материала"
  {"7.57.3"  ,"7.57.703"},; //"Маммография"
  {"7.61.3"  ,"7.61.703"},; //"Флюорография лёгких"
  {"13.1.1"  ,"13.1.701"},; //"Электрокардиография"
  {"3.1.5"   ,"3.1.705" },; //"Измерение артериального давления"
  {"3.1.19"  ,"3.1.719" },; //"Антропометрия"
  {"56.1.16" ,"56.1.716"},; //"Опрос (анкетирование)"
  {"56.1.18" ,"56.1.718"},; //"Определение относительного суммарного сердечно-сосудистого риска"
  {"56.1.19" ,"56.1.719"},; //"Определение абсолютного суммарного сердечно-сосудистого риска"
  {"56.1.21" ,"56.1.721"};  //"Индивидуальное профилактическое консультирование"
 }
Public dvn_85 := {; // кол-во услуг, составляющих 85% - диспансеризация
  {7,6},{8,7},{9,8},{10,9},{11,9},{12,10},{13,11},{14,12},{15,13},{16,13},{17,14};
 }
Public prof_vn_85 := {; // кол-во услуг, составляющих 85% - профилактика
  {9,8},{10,9},{11,10},{12,11},{13,11},{14,12},{15,13},{16,14};
 }
// профилактика несовершеннолетних
Public np_arr_osmotr_KDP2 := {;  // замена на врачебные приёмы без гематологии
  {"2.85.1" ,"2.85.25","2.3.1",""       },;//   , "пульмонолог", 75, {113413,112208,112501} },;
  {"2.85.2" ,"2.85.26","2.3.1",""       },;//   , "дерматовенеролог", 16, {1104} },;
  {"2.85.3" ,"2.85.27","2.3.1",""       },;//   , "ревматолог", 77, {113414,112209} },;
  {"2.85.4" ,"2.85.28","2.3.1",""       },;//   , "аллерголог-иммунолог", 4, {113405,112214} },;
  {"2.85.5" ,"2.85.29","2.3.1",""       },;//   , "детский кардиолог", 17, {113403} },;
  {"2.85.6" ,"2.85.30","2.3.1",""       },;//   , "гастроэнтеролог", 11, {113407,112201} },;
  {"2.85.7" ,"2.85.31","2.3.1",""       },;//   , "нефролог", 56, {113412,112207} },;
  {"2.85.8" ,"2.85.32","2.3.1",""       },;//   , "гематолог", 12, {113408,112202} },;
  {"2.85.9" ,"2.85.33","2.3.1",""       },;//   , "инфекционист", 28, {1106} },;
  {"2.85.10","2.85.34","2.3.1",""       },;//   , "детский онколог", 18, {113401,112801,113501} },;
  {"2.85.11","2.85.35","2.3.1",""       },;//   , "нейрохирург", 54, {112602,113504} },;
  {"2.85.12","2.85.36","2.3.1",""       },;//   , "колопроктолог", 30, {112601,113503} },;
  {"2.85.13","2.85.37","2.3.1",""       },;//   , "сердечно-сосудистый хирург", 81, {112604,113505} },;
  {"2.85.14","2.85.38","2.3.2","2.91.1" },;//  "педиатр", 68,{1134}},;
  {"2.85.15","2.85.39","2.3.2","2.91.1" },;//  "врач общей практики", 57,{1110}},;
  {"2.85.16","2.85.40","2.3.1","2.91.8" },;//"Ж", "акушер-гинеколог", 136, {1101} },;
  {"2.85.17","2.85.41","2.3.1","2.91.9" },;//"М", "детский уролог-андролог", 19, {112603,113502} },;
  {"2.85.18","2.85.42","2.3.1","2.91.3" },;//   , "детский хирург", 20, {1135} },;
  {"2.85.19","2.85.43","2.3.1","2.91.6" },;//   , "травматолог-ортопед", 100, {1123} },;
  {"2.85.20","2.85.44","2.3.1","2.91.2" },;//   , "невролог", 53, {1109} },;
  {"2.85.21","2.85.45","2.3.1","2.91.4" },;//   , "офтальмолог", 65, {1112} },;
  {"2.85.22","2.85.46","2.3.1","2.91.7" },;//   , "отоларинголог", 162, {1111,111101} },;
  {"2.85.23","2.85.47","2.3.1","2.91.5" },;//   , "детский стоматолог", 86, {140102} },;
  {"2.85.24","2.85.48","2.3.1","2.91.10"}; //   , "детский эндокринолог", 21, {1127,112702,113402} },;
 }
Public np_arr_not_zs := {;  // замена на услуги с ценой (нет законченного случая)
  {"3.5.4",   "3.5.704",},;//
  {"4.2.153", "4.2.753",},;//
  {"4.11.136","4.11.736",},;//
  {"8.1.1",   "8.1.701",},;//
  {"8.1.3",   "8.1.703",},;//
  {"8.1.4",   "8.1.704",},;//
  {"8.1.6",   "8.1.706",},;//
  {"8.2.1",   "8.2.701",},;//
  {"13.1.1",  "13.1.701",};//
 }
Public np_arr_not_zs1 := {;  // замена на услуги с ценой (нет законченного случая)
  { 68,"2.91.1",},;//
  { 57,"2.91.1",},;//
  { 53,"2.91.2" },;//
  { 20,"2.91.3" },;//
  { 65,"2.91.4" },;//
  { 86,"2.91.5" },;//
  {100,"2.91.6" },;//
  {162,"2.91.7" },;//
  {136,"2.91.8" },;//
  { 19,"2.91.9" },;//
  { 21,"2.91.10"};//
 }
Public np_arr_osmotr := {;
  {"2.85.1" ,   , "пульмонолог", 75, {113413,112208,112501} },;
  {"2.85.2" ,   , "дерматовенеролог", 16, {1104} },;
  {"2.85.3" ,   , "ревматолог", 77, {113414,112209} },;
  {"2.85.4" ,   , "аллерголог-иммунолог", 4, {113405,112214} },;
  {"2.85.5" ,   , "детский кардиолог", 17, {113403} },;
  {"2.85.6" ,   , "гастроэнтеролог", 11, {113407,112201} },;
  {"2.85.7" ,   , "нефролог", 56, {113412,112207} },;
  {"2.85.8" ,   , "гематолог", 12, {113408,112202} },;
  {"2.85.9" ,   , "инфекционист", 28, {1106} },;
  {"2.85.10",   , "детский онколог", 18, {113401,112801,113501} },;
  {"2.85.11",   , "нейрохирург", 54, {112602,113504} },;
  {"2.85.12",   , "колопроктолог", 30, {112601,113503} },;
  {"2.85.13",   , "сердечно-сосудистый хирург", 81, {112604,113505} },;
  {"2.85.16","Ж", "акушер-гинеколог", 136, {1101} },;
  {"2.85.17","М", "детский уролог-андролог", 19, {112603,113502} },;
  {"2.85.18",   , "детский хирург", 20, {1135} },;
  {"2.85.19",   , "травматолог-ортопед", 100, {1123} },;
  {"2.85.20",   , "невролог", 53, {1109} },;
  {"2.85.21",   , "офтальмолог", 65, {1112} },;
  {"2.85.22",   , "отоларинголог", 162, {1111,111101} },;
  {"2.85.23",   , "детский стоматолог", 86, {1401,140102} },;
  {"2.85.24",   , "детский эндокринолог", 21, {1127,112702,113402} },;
  {"2.4.1"  ,   , "психиатр", {72,73}, {1115,111504} },;
  {"2.4.2"  ,   , "скрининг на выявление психич.развития", {68,57,72,73}, {1134,1110,1115,111504} };
 }
//"2.85.14"  педиатр 68,{1134}
//"2.85.15"  врач общей практики 57,{1110}
Public count_pn_arr_osm := len(np_arr_osmotr)
Public np_arr_issled := {;
  {"3.5.4"   ,   , "Аудиологический скрининг",0,{68,96,162},{1134,111101,1111} },;
  {"4.2.153" ,   , "Клинический анализ мочи",0,34,{1107,1301,1402,1702,1801,2011,2013} },;
  {"4.11.136",   , "Клинический анализ крови",0,34,{1107,1301,1402,1702,1801,2011,2013} },;
  {"4.26.1"  ,   , "Неонатальный скрининг на гипотиреоз",0,34,{1107,1301,1402,1702,1801,2011,2013} },;
  {"4.26.2"  ,   , "Неонатальный скрининг на фенилкетонурию",0,34,{1107,1301,1402,1702,1801,2011,2013} },;
  {"4.26.3"  ,   , "Неонатальный скрининг на адреногенитальный синдром",0,34,{1107,1301,1402,1702,1801,2011,2013} },;
  {"4.26.4"  ,   , "Неонатальный скрининг на муковисцидоз",0,34,{1107,1301,1402,1702,1801,2011,2013} },;
  {"4.26.5"  ,   , "Неонатальный скрининг на галактоземию",0,34,{1107,1301,1402,1702,1801,2011,2013} },;
  {"8.1.1"   ,   , "УЗИ головного мозга (нейросонография)",0,106,{110101,111004,111802,111903,112211,112610,113416,113508,180203} },;
  {"8.1.3"   ,   , "УЗИ сердца (эхокардиография)",0,106,{110101,111004,111802,111903,112211,112610,113416,113508,180203} },;
  {"8.1.4"   ,   , "УЗИ тазобедренных суставов",0,106,{110101,111004,111802,111903,112211,112610,113416,113508,180203} },;
  {"8.1.6"   ,   , "УЗИ почек",0,106,{110101,111004,111802,111903,112211,112610,113416,113508,180203} },;
  {"8.2.1"   ,   , "УЗИ органов брюшной полости (комплексное)",0,106,{110101,111004,111802,111903,112211,112610,113416,113508,180203} },;
  {"13.1.1"  ,   , "Электрокардиография",0,111,{110103,110303,110906,111006,111905,112212,112611,113418,113509,180202,2021} };
 }
Public count_pn_arr_iss := len(np_arr_issled)
Public np_arr_1_etap := {}
// 1-номер периода
// 2-начальный возраст {лет,месяцев} ( >= )
// 3-конечный возраст {лет,месяцев} ( < )
// 4-осмотры
// 5-исследования {шифр,N} при N=0 - обязательно, при N=1 - необязательно
aadd(np_arr_1_etap, { 1,{0,0},{0,1},;
                     {},;
                     {"4.26.1","4.26.2","4.26.3","4.26.4","4.26.5","3.5.4"}})
aadd(np_arr_1_etap, { 2,{0,1},{0,2},;
                     {"2.85.18","2.85.20","2.85.21","2.85.23"},;
                     {"8.1.1","8.1.3","8.1.4","8.1.6","8.2.1","3.5.4"}})
aadd(np_arr_1_etap, { 3,{0,2},{0,3},;
                     {},;
                     {"4.2.153","4.11.136"}})
aadd(np_arr_1_etap, { 4,{0,3},{0,4},;
                     {"2.85.19"},;
                     {"3.5.4"}})
aadd(np_arr_1_etap, { 5,{0,4},{0,5},;
                     {},;
                     {}})
aadd(np_arr_1_etap, { 6,{0,5},{0,6},;
                     {},;
                     {}})
aadd(np_arr_1_etap, { 7,{0,6},{0,7},;
                     {},;
                     {}})
aadd(np_arr_1_etap, { 8,{0,7},{0,8},;
                     {},;
                     {}})
aadd(np_arr_1_etap, { 9,{0,8},{0,9},;
                     {},;
                     {}})
aadd(np_arr_1_etap, {10,{0,9},{0,10},;
                     {},;
                     {}})
aadd(np_arr_1_etap, {11,{0,10},{0,11},;
                     {},;
                     {}})
aadd(np_arr_1_etap, {12,{0,11},{1,0},;
                     {},;
                     {}})
aadd(np_arr_1_etap, {13,{1,0},{1,1},;
                     {"2.85.18","2.85.19","2.85.20","2.85.21","2.85.22"},; // "2.85.21" с 1 сентября
                     {"4.2.153","4.11.136","13.1.1"}})
aadd(np_arr_1_etap, {14,{1,3},{1,4},;
                     {},;
                     {}})
aadd(np_arr_1_etap, {15,{1,6},{1,7},;
                     {},;
                     {}})
aadd(np_arr_1_etap, {16,{1,11},{2,1},;  // не позднее 31 декабря
                     {"2.85.23","2.4.1","2.4.2"},;
                     {}})
aadd(np_arr_1_etap, {17,{2,11},{4,0},;  // не позднее 31 декабря
                     {"2.85.20","2.85.18","2.85.23","2.85.21","2.85.22","2.85.16","2.85.17"},;
                     {"4.2.153","4.11.136"}})
aadd(np_arr_1_etap, {18,{4,0},{5,0},;
                     {"2.85.23"},;
                     {}})
aadd(np_arr_1_etap, {19,{5,0},{6,0},;
                     {"2.85.23"},;
                     {}})
aadd(np_arr_1_etap, {20,{6,0},{7,0},;
                     {"2.85.20","2.85.18","2.85.23","2.85.24","2.85.19","2.85.21","2.85.22","2.4.1","2.85.16","2.85.17"},;
                     {"4.2.153","4.11.136","8.2.1","8.1.3","8.1.6","13.1.1"}})
aadd(np_arr_1_etap, {21,{7,0},{8,0},;
                     {"2.85.20","2.85.23","2.85.21","2.85.22"},;
                     {"4.2.153","4.11.136"}})
aadd(np_arr_1_etap, {22,{8,0},{9,0},;
                     {"2.85.23"},;
                     {}})
aadd(np_arr_1_etap, {23,{9,0},{10,0},;
                     {"2.85.23"},;
                     {}})
aadd(np_arr_1_etap, {24,{10,0},{11,0},;
                     {"2.85.20","2.85.23","2.85.24","2.85.19","2.85.21"},;
                     {"4.2.153","4.11.136"}})
aadd(np_arr_1_etap, {25,{11,0},{12,0},;
                     {"2.85.23"},;
                     {}})
aadd(np_arr_1_etap, {26,{12,0},{13,0},;
                     {"2.85.23"},;
                     {}})
aadd(np_arr_1_etap, {27,{13,0},{14,0},;
                     {"2.85.23","2.85.21"},;
                     {}})
aadd(np_arr_1_etap, {28,{14,0},{15,0},;
                     {"2.85.23","2.85.16","2.85.17","2.4.1"},;
                     {}})
aadd(np_arr_1_etap, {29,{15,0},{16,0},;
                     {"2.85.18","2.85.23","2.85.17","2.85.24","2.85.20","2.85.19","2.85.21","2.85.22","2.85.16","2.4.1"},;
                     {"4.2.153","4.11.136","8.2.1","8.1.6","13.1.1"}})
aadd(np_arr_1_etap, {30,{16,0},{17,0},;
                     {"2.85.18","2.85.23","2.85.17","2.85.24","2.85.20","2.85.19","2.85.21","2.85.22","2.85.16","2.4.1"},;
                     {"4.2.153","4.11.136"}})
aadd(np_arr_1_etap, {31,{17,0},{18,0},;
                     {"2.85.18","2.85.23","2.85.17","2.85.24","2.85.20","2.85.19","2.85.21","2.85.22","2.85.16","2.4.1"},;
                     {"4.2.153","4.11.136","13.1.1"}})
Init_Program_old_func()
return NIL


***** 27.01.18 инициализация программы
Function Init_Program_old_func()
// диспансеризация взрослого населения 2013 год
Public dvn_arr_usl13 := {; // Услуги на экран для ввода
  {"Измерение внутриглазного давления","3.4.9",1,0,1,;
    {39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99},;
    {39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99},;
    1,1,65,{1112};
   },;
  {"Исследование крови на общий холестерин","4.12.174",{1,3},0,1,;
    {21,24,27,30,33,36,42,48,54,60,66,72,78,84,90,96},;
    {21,24,27,30,33,36,42,48,54,60,66,72,78,84,90,96},;
    1,1,34,{1107,1301,1402,1702,1801,2011,2013};
   },;
  {"Исследование уровня глюкозы в крови","4.12.169",{1,3},0,1,;
    {21,24,27,30,33,36,42,48,54,60,66,72,78,84,90,96},;
    {21,24,27,30,33,36,42,48,54,60,66,72,78,84,90,96},;
    1,1,34,{1107,1301,1402,1702,1801,2011,2013};
   },;
  {"Клинический анализ мочи","4.2.153",1,0,1,;
    1,1,1,1,34,{1107,1301,1402,1702,1801,2011,2013};
   },;
  {"Клинический анализ крови (3 показателя)","4.11.137",{1,3},0,1,;
    {21,24,27,30,33,36,42,48,54,60,66,72,78,84,90,96},;
    {21,24,27,30,33,36,42,48,54,60,66,72,78,84,90,96},;
    1,1,34,{1107,1301,1402,1702,1801,2011,2013};
   },;
  {"Клинический анализ крови (развёрнутый)","4.11.136",1,0,1,;
    {39,45,51,57,63,69,75,81,87,93,99},;
    {39,45,51,57,63,69,75,81,87,93,99},;
    1,1,34,{1107,1301,1402,1702,1801,2011,2013};
   },;
  {"Биохимический общетерапевтическ.анализ крови","4.12.172",1,0,1,;
    {39,45,51,57,63,69,75,81,87,93,99},;
    {39,45,51,57,63,69,75,81,87,93,99},;
    1,1,34,{1107,1301,1402,1702,1801,2011,2013};
   },;
  {"Кровь на простат-специфический антиген","4.14.66",1,0,1,;
    {51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99},;
    0,;
    1,1,34,{1107,1301,1402,1702,1801,2011,2013};
   },;
  {"Исследование кала на скрытую кровь","4.8.4",{1,3},0,1,;
    {45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99},;
    {45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99},;
    {46,98},{46,98},34,{1107,1301,1402,1702,1801,2011,2013};
   },;
  {"Иссл-е взятого цитологического материала","4.20.1",1,0,1,;
    0,1,1,1,34,{1107,1301,1402,1702,1801,2011,2013};
   },;
  {"Маммография","7.57.3",{1,3},0,1,;
    0,;
    {39,42,45,48,51,54,57,60,63,66,69,72,75,78,81,84,87,90,93,96,99},;
    0,{40,98},78,{1118,1802,2020};
   },;
  {"Флюорография лёгких","7.61.3",{1,3},0,1,;
    1,1,1,1,78,{1118,1802,2020};
   },;
  {"УЗИ органов брюшной полости","8.2.1",1,0,1,;
    {39,45,51,57,63,69,75,81,87,93,99},;
    {39,45,51,57,63,69,75,81,87,93,99},;
    1,1,106,{110101,111004,111802,111903,112211,112610,113416,113508,180203};
   },;
  {"Электрокардиография","13.1.1",1,0,1,;
    -36,; // для мужчин обязательно с 36 лет
    -45,; // для женщин обязательно с 45 лет
    1,1,111,{110103,110303,110906,111006,111905,112212,112611,113418,113509,180202,2021};
   },;
  {"Определение гликированного гемоглобина крови","4.12.170",2,0,1,; // "2.84.2"
    1,1,1,1,34,{1107,1301,1402,1702,1801,2011,2013};
   },;
  {"Тест на толерантность к глюкозе","4.12.171",2,0,1,; // "2.84.2"
    1,1,1,1,34,{1107,1301,1402,1702,1801,2011,2013};
   },;
  {"Исследование липидного спектра крови","4.12.173",2,0,1,; // "2.84.2"
    1,1,1,1,34,{1107,1301,1402,1702,1801,2011,2013};
   },;
  {"Дуплексное сканир-ие брахиоцефальных артерий","8.23.6",2,0,1,; // "2.84.1"
    1,1,1,1,106,{110101,111004,111802,111903,112211,112610,113416,113508,180203};
   },;
  {"Фиброэзофагогастродуоденоскопия","10.3.13",2,0,1,; // "2.84.2"
    1,1,1,1,123,{110104,111007,112221,112609,113419,113511};
   },;
  {"Ректоскопия диагностическая","10.4.1",2,0,1,; // "2.84.6"
    1,1,1,1,123,{110104,111007,112221,112609,113419,113511};
   },;
  {"Ректосигмоколоноскопия диагностическая","10.6.10",2,0,1,; // "2.84.6"
    1,1,1,1,123,{110104,111007,112221,112609,113419,113511};
   },;
  {"Приём врача невролога",{"2.3.1","2.84.1"},{1,2},1,0,;
    {51,57,63,69,75,81,87,93,99},;
    {51,57,63,69,75,81,87,93,99},;
    1,1,53,{1109},;
    {{"2.3.1",53},{"2.84.1",53}};
   },;
  {"Приём врача офтальмолога","2.84.3",2,1,0,;
    1,1,1,1,65,{1112};
   },;
  {"Приём врача уролога (хирурга)","2.84.4",2,1,0,;
    1,1,1,0,{108,112},{112603,1126};
   },;
  {"Приём врача акушера-гинеколога","2.84.5",2,1,0,;
    1,1,0,1,136,{1101};
   },;
  {"Приём врача колопроктолога (хирурга)","2.84.6",2,1,0,;
    1,1,1,1,{30,30,112},{112601,113503,1126};
   },;
  {"Приём врача терапевта",{"2.3.1","2.84.2","2.3.1"},{1,2,3},1,0,;
    1,1,1,1,{97,57,42},{1122,1110,2002},;
    {{"2.3.1",97},{"2.3.2",57},{"2.84.2",97},{"2.84.2",57},{"2.84.7",97},{"2.84.7",57},{"2.3.3",42}};
   };
 }
Public count_dvn_arr_usl13 := len(dvn_arr_usl13)
//
Public dvn_2_etap13 := {; // обязательное сочетание услуг второго этапа
   {"2.84.1",{"8.23.6"}},;
   {"2.84.2",{"4.12.170","4.12.171","4.12.173","10.3.13"}},;
   {"2.84.6",{"10.4.1","10.6.10"}};
 }
//
Public dvn_arr_umolch13 := {; // услуги, записываемые всегда по умолчанию
  {"Опрос (анкетирование)","56.1.16",{1,3},1,1,1,1,0},;
  {"Измерение артериального давления","3.1.5",{1,3},1,1,1,1,0},;
  {"Антропометрия","3.1.19",{1,3},1,1,1,1,0},;
  {"Определение группы состояния здоровья,...","56.1.13",{1,2,3},1,1,1,1,1},;
  {"Краткое профилактическое консультирование","56.1.14",{1,3},1,1,1,1,1},; //!
  {"Развернутое профилактическое консультирование","56.1.15",2,1,1,1,1,1},; //!
  {"Определение суммарного сердечно-сосудистого риска","56.1.17",{1,3},;
    {21,24,27,30,33,36,39,42,45,48,51,54,57,60,63},;
    {21,24,27,30,33,36,39,42,45,48,51,54,57,60,63},;
    {18,65},{18,65},1;
   };
 }
Public count_dvn_arr_umolch13 := len(dvn_arr_umolch13)
//
Public dvn_85_13 := {; // кол-во услуг, составляющих 85%
  {9,8},{10,9},{11,10},{12,11},{13,11},{14,12},{15,13},{16,14};
 }
// предварительные осмотры несовершеннолетних
Public npred_arr_osmotr_KDP2 := {;  // замена на врачебные приёмы без гематологии
  {"2.86.1" ,"2.86.25"},;//   , "пульмонолог", 75, {113413,112208,112501} },;
  {"2.86.2" ,"2.86.26"},;//   , "дерматовенеролог", 16, {1104} },;
  {"2.86.3" ,"2.86.27"},;//   , "ревматолог", 77, {113414,112209} },;
  {"2.86.4" ,"2.86.28"},;//   , "аллерголог-иммунолог", 4, {113405,112214} },;
  {"2.86.5" ,"2.86.29"},;//   , "детский кардиолог", 17, {113403} },;
  {"2.86.6" ,"2.86.30"},;//   , "гастроэнтеролог", 11, {113407,112201} },;
  {"2.86.7" ,"2.86.31"},;//   , "нефролог", 56, {113412,112207} },;
  {"2.86.8" ,"2.86.32"},;//   , "гематолог", 12, {113408,112202} },;
  {"2.86.9" ,"2.86.33"},;//   , "инфекционист", 28, {1106} },;
  {"2.86.10","2.86.34"},;//   , "детский онколог", 18, {113401,112801,113501} },;
  {"2.86.11","2.86.35"},;//   , "нейрохирург", 54, {112602,113504} },;
  {"2.86.12","2.86.36"},;//   , "колопроктолог", 30, {112601,113503} },;
  {"2.86.13","2.86.37"},;//   , "сердечно-сосудистый хирург", 81, {112604,113505} },;
  {"2.86.14","2.86.38"},;//  "педиатр", 68,{1134}},;
  {"2.86.15","2.86.39"},;//  "врач общей практики", 57,{1110}},;
  {"2.86.16","2.86.40"},;//"Ж", "акушер-гинеколог", 136, {1101} },;
  {"2.86.17","2.86.41"},;//"М", "детский уролог-андролог", 19, {112603,113502} },;
  {"2.86.18","2.86.42"},;//   , "детский хирург", 20, {1135} },;
  {"2.86.19","2.86.43"},;//   , "травматолог-ортопед", 100, {1123} },;
  {"2.86.20","2.86.44"},;//   , "невролог", 53, {1109} },;
  {"2.86.21","2.86.45"},;//   , "офтальмолог", 65, {1112} },;
  {"2.86.22","2.86.46"},;//   , "отоларинголог", 162, {1111,111101} },;
  {"2.86.23","2.86.47"},;//   , "детский стоматолог", 86, {1401,140102} },;
  {"2.86.24","2.86.48"}; //   , "детский эндокринолог", 21, {1127,112702,113402} },;
 }
Public npred_arr_osmotr := {;
  {"2.86.1" ,   , "пульмонолог", 75, {113413,112208,112501} },;
  {"2.86.2" ,   , "дерматовенеролог", 16, {1104} },;
  {"2.86.3" ,   , "ревматолог", 77, {113414,112209} },;
  {"2.86.4" ,   , "аллерголог-иммунолог", 4, {113405,112214} },;
  {"2.86.5" ,   , "детский кардиолог", 17, {113403} },;
  {"2.86.6" ,   , "гастроэнтеролог", 11, {113407,112201} },;
  {"2.86.7" ,   , "нефролог", 56, {113412,112207} },;
  {"2.86.8" ,   , "гематолог", 12, {113408,112202} },;
  {"2.86.9" ,   , "инфекционист", 28, {1106} },;
  {"2.86.10",   , "детский онколог", 18, {113401,112801,113501} },;
  {"2.86.11",   , "нейрохирург", 54, {112602,113504} },;
  {"2.86.12",   , "колопроктолог", 30, {112601,113503} },;
  {"2.86.13",   , "сердечно-сосудистый хирург", 81, {112604,113505} },;
  {"2.86.16","Ж", "акушер-гинеколог", 136, {1101} },;
  {"2.86.17","М", "детский уролог-андролог", 19, {112603,113502} },;
  {"2.86.18",   , "детский хирург", 20, {1135} },;
  {"2.86.19",   , "травматолог-ортопед", 100, {1123} },;
  {"2.86.20",   , "невролог", 53, {1109} },;
  {"2.86.21",   , "офтальмолог", 65, {1112} },;
  {"2.86.22",   , "отоларинголог", 162, {1111,111101} },;
  {"2.86.23",   , "детский стоматолог", 86, {1401,140102} },;
  {"2.86.24",   , "детский эндокринолог", 21, {1127,112702,113402} },;
  {"2.4.1"  ,   , "психиатр", 72, {1115} };
 }
//"2.86.14"  педиатр 68,{1134}
//"2.86.15"  врач общей практики 57,{1110}
Public count_predn_arr_osm := len(npred_arr_osmotr)
Public npred_arr_issled := {;
  {"4.2.153" ,   , "Общий анализ мочи",0,34,{1107,1301,1402,1702,1801,2011,2013} },;
  {"4.11.136",   , "Клинический анализ крови",0,34,{1107,1301,1402,1702,1801,2011,2013} },;
  {"4.12.169",   , "Иссл-ние уровня глюкозы в крови",0,34,{1107,1301,1402,1702,1801,2011,2013} },;
  {"4.8.12"  ,   , "Анализ кала на яйца глистов",0,34,{1107,1301,1402,1702,1801,2011,2013} },;
  {"7.61.3"  ,   , "Флюорография легких в 1-й проекции",0,78,{1118,1802,2020} },;
  {"8.1.2"   ,   , "УЗИ щитовидной железы",0,106,{110101,111004,111802,111903,112211,112610,113416,113508,180203} },;
  {"8.1.3"   ,   , "УЗИ сердца",0,106,{110101,111004,111802,111903,112211,112610,113416,113508,180203} },;
  {"8.2.1"   ,   , "УЗИ органов брюшной полости",0,106,{110101,111004,111802,111903,112211,112610,113416,113508,180203} },;
  {"8.2.2"   ,"М", "УЗИ органов репродуктивной системы",0,106,{110101,111004,111802,111903,112211,112610,113416,113508,180203} },;
  {"8.2.3"   ,"Ж", "УЗИ органов репродуктивной системы",0,106,{110101,111004,111802,111903,112211,112610,113416,113508,180203} },;
  {"13.1.1"  ,   , "Электрокардиография",0,111,{110103,110303,110906,111006,111905,112212,112611,113418,113509,180202,2021} },;
  {"56.1.13" ,   , "Определение группы состояния здоровья,...",2,0,{1,2} };
 }
Public count_predn_arr_iss := len(npred_arr_issled)
Public npred_arr_1_etap := {}
// 1-номер периода
// 2-начальный возраст
// 3-конечный возраст
// 4-осмотры
// 5-исследования {шифр,N} при N=0 - обязательно, при N=1 - необязательно
// 6-наименование периода
aadd(npred_arr_1_etap, {1,0,17,;
                       {"2.86.16","2.86.17","2.86.18","2.86.20","2.86.21","2.86.22","2.86.23","2.4.1"},;
                       {"4.2.153","4.11.136","4.12.169","4.8.12"},;
                       "ДОУ"})
aadd(npred_arr_1_etap, {0,0,17,;
                       {"2.86.16","2.86.17","2.86.18","2.86.19","2.86.20","2.86.21","2.86.22","2.86.23","2.4.1"},;
                       {"4.2.153","4.11.136","4.12.169","4.8.12","8.1.2","8.1.3","8.2.1","8.2.2","8.2.3","13.1.1"},;
                       "ООУ"})
aadd(npred_arr_1_etap, {2,0,14,;
                       {"2.86.16","2.86.17","2.86.18","2.86.19","2.86.20","2.86.21","2.86.22","2.86.23","2.86.24","2.4.1"},;
                       {"4.2.153","4.11.136","4.12.169","8.1.2","8.1.3","8.2.1","8.2.2","8.2.3","13.1.1"},;
                       "ОУ НПО, ВПО, СОУ,...0-14 лет"})
aadd(npred_arr_1_etap, {2,15,17,;
                       {"2.86.16","2.86.17","2.86.18","2.86.19","2.86.20","2.86.21","2.86.22","2.86.23","2.86.24","2.4.1"},;
                       {"4.2.153","4.11.136","4.12.169","8.1.2","8.1.3","8.2.1","8.2.2","8.2.3","13.1.1","7.61.3"},;
                       "ОУ НПО, ВПО, СОУ,...15-17 лет"})
// периодические осмотры несовершеннолетних
//"2.3.1"  педиатр 68,{1134}
//"2.3.2"  врач общей практики 57,{1110}
Public nper_arr_issled := {;
  {"4.2.153" ,   , "Общий анализ мочи",0,34,{1107,1301,1402,1702,1801,2011,2013} },;
  {"4.11.136",   , "Клинический анализ крови",0,34,{1107,1301,1402,1702,1801,2011,2013} },;
  {"16.1.16" ,   , "Анализ окиси углерода выдыхаем.воздуха",0,34,{1107,1301,1402,1702,1801,2011,2013} };
 }
Public count_pern_arr_iss := len(nper_arr_issled)
Public nper_arr_1_etap := {}
// 1-номер периода
// 2-начальный возраст
// 3-конечный возраст
// 4-осмотры
// 5-исследования {шифр,N} при N=0 - обязательно, при N=1 - необязательно
// 6-наименование периода
aadd(nper_arr_1_etap, {1,0,17,;
                      {},;
                      {"4.2.153","4.11.136"},;
                      "ДОУ"})
aadd(nper_arr_1_etap, {0,0,17,;
                      {},;
                      {"4.2.153","4.11.136","16.1.16"},;
                      "ООУ и ОУ НПО, ВПО, СОУ"})
return NIL

*

***** 09.06.15 функция проверки лицензии на диспансеризацию/профилактику
Function license_for_dispans(_tip,_n_data,_ta)
// список учреждений с датой лицензии на диспансеризацию
Static arr_date_disp := {;
  {101003,1,0,20130726},;  // 101003;ГБУЗ "ВОКБ № 3";+;;26.07.2013
  {114504,1,0,20130705},;  // 114504;ГУЗ "Поликлиника № 4";+;;05.07.2013
  {114506,1,0,20130704},;  // 114506;ГУЗ "Поликлиника № 6";+;;04.07.2013
  {115506,0,1,20130718},;  // 115506;ГУЗ "Детская поликлиника № 6";;+;18.07.2013
  {115510,0,1,20130719},;  // 115510;ГУЗ "ДП № 10";;+;19.07.2013
  {121018,1,1,20130806},;  // 121018;ГУЗ "Больница № 18";+;+;06.08.2013
  {124501,1,1,20130829},;  // 124501;ГУЗ "Гумракская амбулатория";+;+;29.08.2013
  {124528,1,1,20130805},;  // 124528;ГУЗ "Клиническая поликлиника № 28";+;+;05.08.2013
  {124530,1,1,20130703},;  // 124530;ГУЗ "Поликлиника № 30";+;+;03.07.2013
  {125505,0,1,20130719},;  // 125505;ГУЗ "Детская поликлиника № 5";;+;19.07.2013
  {131020,0,1,20130718},;  // 131020;ГУЗ "КДЦ для детей № 1";;+;18.07.2013
  {134505,1,0,20130719},;  // 134505;ГУЗ "Поликлиника № 5";+;;19.07.2013
  {134510,1,0,20130729},;  // 134510;ГУЗ "Поликлиника № 10";+;;29.07.2013
  {135509,0,1,20130805},;  // 135509;ГУЗ "Детская поликлиника № 9";;+;05.08.2013
  {141016,1,0,20130725},;  // 141016;ГУЗ "Больница № 16";+;;25.07.2013
  {141022,1,0,20130726},;  // 141022;ГУЗ "Больница №22";+;;26.07.2013
  {141023,1,0,20130712},;  // 141023;ГУЗ "КБСМП № 15";+;;12.07.2013
  {141024,1,0,20130712},;  // 141024;ГУЗ "Больница № 24";+;;12.07.2013
  {145516,0,1,20130729},;  // 145516;ГУЗ "Детская поликлиника № 16";;+;29.07.2013
  {145526,0,1,20130727},;  // 145526;ГУЗ "Детская поликлиника № 26";;+;27.07.2013
  {154602,1,0,20130701},;  // 154602;ГУЗ "Поликлиника № 2";+;;01.07.2013
  {154608,1,0,20130729},;  // 154608;ГУЗ "Поликлиника № 8";+;;29.07.2013
  {154620,1,0,20130802},;  // 154620;ГУЗ "Поликлиника № 20";+;;02.08.2013
  {155502,0,1,20130730},;  // 155502;ГУЗ "Детская поликлиника № 2";;+;30.07.2013
  {155601,0,1,20130729},;  // 155601;ГУЗ "Детская поликлиника № 1";;+;29.07.2013
  {161007,1,0,20130725},;  // 161007;ГУЗ "КБ СМП № 7";+;;25.07.2013
  {161015,1,0,20130801},;  // 161015;ГУЗ "Клиническая больница № 11";+;;01.08.2013
  {165525,0,1,20130802},;  // 165525;ГУЗ "Детская поликлиника № 25";;+;02.08.2013
  {165531,0,1,20130801},;  // 165531;ГУЗ "ДКП № 31";;+;01.08.2013
  {174601,1,0,20130718},;  // 174601;ГУЗ КП № 1;+;;18.07.2013
  {175603,0,1,20130725},;  // 175603;ГУЗ "Детская поликлиника № 3";;+;25.07.2013
  {175617,0,1,20130729},;  // 175617;ГУЗ "ДП № 17";;+;29.07.2013
  {175627,0,1,20130806},;  // 175627;ГУЗ "Детская поликлиника № 27";;+;06.08.2013
  {175709,1,0,20130624},;  // 175709;ГУЗ "Клиническая поликлиника № 9";+;;24.06.2013
  {184512,1,0,20130701},;  // 184512;ГУЗ "Клиническая поликлиника № 12";+;;01.07.2013
  {184603,1,0,20130701},;  // 184603;ГУЗ "Клиническая поликлиника №3";+;;01.07.2013
  {185515,0,1,20130730},;  // 185515;ГУЗ "ДКП № 15";;+;30.07.2013
  {251001,1,1,20130713},;  // 251001;ГБУЗ "ГКБ № 1 им. С.З.Фишера";+;;13.07.2013
  {251002,1,0,20130705},;  // 251002;ГБУЗ "ГКБ №3";+;;05.07.2013
  {251003,1,0,20130730},;  // 251003;ГБУЗ "Городская больница № 2";+;;30.07.2013
  {251008,0,1,20130805},;  // 251008;ГБУЗ "Городская детская больница";;+;05.08.2013
  {254504,1,0,20130705},;  // 254504;ГБУЗ "Поликлиника № 4";+;;05.07.2013
  {254505,1,0,20130711},;  // 254505;ГБУЗ "Городская поликлиника №5";+;;11.07.2013
  {254506,0,1,20130809},;  // 254506;ГБУЗ "Городская поликлиника № 6";;+;09.08.2013
  {255601,0,1,20130802},;  // 255601;ГБУЗ "ГДП № 1";;+;02.08.2013
  {255627,0,1,20130730},;  // 255627;ГБУЗ "ГДП №2";;+;30.07.2013
  {255802,1,0,20130703},;  // 255802;ГБУЗ "Городская поликлиника № 3";+;;03.07.2013
  {301001,1,1,20130730},;  // 301001;ГБУЗ "Алексеевская ЦРБ";+;+;30.07.2013
  {311001,1,1,20130813},;  // 311001;ГБУЗ "Быковская ЦРБ";+;+;13.08.2013
  {321001,1,1,20130802},;  // 321001;ГБУЗ "Городищенская ЦРБ";+;+;02.08.2013
  {331001,1,1,20130709},;  // 331001;ГБУЗ "Даниловская ЦРБ";+;+;09.07.2013
  {341001,1,1,20130802},;  // 341001;ГБУЗ "ЦРБ Дубовского муниципального района";+;+;02.08.2013
  {351001,1,1,20130730},;  // 351001;ГБУЗ Еланская ЦРБ;+;+;30.07.2013
  {361001,1,1,20130801},;  // 361001;ГУЗ "Жирновская ЦРБ";+;+;01.08.2013
  {371001,1,1,20130805},;  // 371001;ГБУЗ "Иловлинская ЦРБ";+;+;05.08.2013
  {381001,1,1,20130829},;  // 381001;ГБУЗ "Калачевская ЦРБ";+;+;29.08.2013
  {391001,1,0,20130802},;  // 391001;ГБУЗ г.Камышина "Городская больница № 1";+;;02.08.2013
  {391002,1,0,20130802},;  // 391002;ГБУЗ ЦГБ;+;;02.08.2013
  {391003,0,1,20130805},;  // 391003;ГБУЗ "КДГБ";;+;05.08.2013
  {391015,0,1,20131114},;  //+391015;ЦРБ Камышинского р-на;;+;14.11.2013
  {395501,0,1,20130809},;  // 395501;ГБУЗ "Детская поликлиника Камышинского муниципального района Волгоградской области
  {401001,1,1,20130801},;  // 401001;ГБУЗ "Киквидзенская ЦРБ";+;+;01.08.2013
  {411001,1,1,20130713},;  // 411001;ГБУЗ "ЦРБ Клетского муниципального района";+;+;13.07.2013
  {421001,1,1,20130806},;  // 421001;ГБУЗ "Котельниковская ЦРБ";+;+;06.08.2013
  {431001,1,1,20130809},;  // 431001;ГБУЗ ЦРБ Котовского муниципального района;+;+;09.08.2013
  {441001,1,1,20130809},;  // 441001;ГБУЗ "Ленинская ЦРБ";+;+;09.08.2013
  {451001,1,0,20130805},;  // 451001;ГБУЗ "МЦРБ";+;;05.08.2013
  {451002,0,1,20130717},;  // 451002;ГБУЗ "МГДБ";;+;17.07.2013
  {461001,1,1,20130718},;  // 461001;ГБУЗ "Нехаевская ЦРБ";+;+;18.07.2013
  {471001,1,1,20130717},;  // 471001;ГБУЗ "Николаевская ЦРБ";+;+;17.07.2013
  {481001,1,1,20130801},;  // 481001;ГБУЗ "Новоаннинская ЦРБ";+;+;01.08.2013
  {491001,1,1,20130802},;  // 491001;ГБУЗ "Новониколаевская ЦРБ";+;+;02.08.2013
  {501001,1,1,20130806},;  // 501001;ГБУЗ "Октябрьская ЦРБ";+;+;06.08.2013
  {511001,1,1,20130809},;  // 511001;ГБУЗ "ЦРБ Ольховского муниципального района";+;+;09.08.2013
  {521001,1,1,20130716},;  // 521001;ГБУЗ "Палласовская ЦРБ";+;+;16.07.2013
  {531001,1,1,20130724},;  // 531001;ГБУЗ "Кумылженская ЦРБ";+;+;24.07.2013
  {541001,1,1,20130813},;  // 541001;ГБУ "ЦРБ Руднянского муниципального района";+;+;13.08.2013
  {551001,1,1,20130809},;  // 551001;ГБУЗ "Светлоярская ЦРБ";+;+;09.08.2013
  {561001,1,1,20130717},;  // 561001;ГБУЗ "Серафимовичская ЦРБ";+;+;17.07.2013
  {571001,1,1,20130802},;  // 571001;ГБУЗ "Среднеахтубинская ЦРБ";+;+;02.08.2013
  {571002,1,0,20130829},;  // 571002;ГБУЗ "Краснослободская городская больница";+;;29.08.2013
  {581001,1,1,20130711},;  // 581001;ГБУЗ "Старополтавская ЦРБ";+;+;11.07.2013
  {591001,1,1,20130730},;  // 591001;ГБУЗ "ЦРБ Суровикинского муниципального района";+;+;30.07.2013
  {601001,1,1,20130809},;  // 601001;ГБУЗ Урюпинская ЦРБ;+;+;09.08.2013
  {611001,1,1,20130802},;  // 611001;ГБУЗ "Фроловская ЦРБ";+;+;02.08.2013
  {621001,1,1,20130805},;  // 621001;ГБУЗ "Чернышковская ЦРБ";+;+;05.08.2013
  {711001,1,0,20130731};   // 711001;НУЗ "Отделенческая клиническая больница на ст. Волгоград-1 ОАО "РЖД";+;;31.07.2013
 }
Static mm_tip := {"диспансеризацию/профилактику взрослых",;
                  "профилактику несовершеннолетних"}
Local i
if valtype(arr_date_disp[1,1]) == "N" // для первого запуска
  for i := 1 to len(arr_date_disp)
    arr_date_disp[i,1] := lstr(arr_date_disp[i,1])
    arr_date_disp[i,4] := stod(lstr(arr_date_disp[i,4]))
  next
endif
if (i := ascan(arr_date_disp, {|x| x[1] == glob_mo[_MO_KOD_TFOMS] })) > 0
  if arr_date_disp[i,_tip+1] == 0
    aadd(_ta,'У Вашей МО нет лицензии на '+mm_tip[_tip])
  elseif arr_date_disp[i,4] > _n_data
    aadd(_ta,'У Вашей МО лицензия на '+mm_tip[_tip]+' с '+date_8(arr_date_disp[i,4])+'г.')
  endif
else
  aadd(_ta,'У Вашей МО нет лицензии на '+mm_tip[_tip])
endif
return NIL

*

***** 25.08.13 если услуга из 1 этапа
Function is_issled_PerN(ausl,_period,arr,_pol)
// ausl := {lshifr,mdate,hu_->profil,hu_->PRVS}
Local i, s := "", fl := .f., lshifr := alltrim(ausl[1])
for i := 1 to count_pern_arr_iss
  if nper_arr_issled[i,1] == lshifr
    s := '"'+lshifr+'.'+nper_arr_issled[i,3]+'"'
    fl := .t.
    exit
  endif
next
if fl .and. nper_arr_issled[i,4] < 2
  if nper_arr_issled[i,5] != ausl[3]
    aadd(arr,'Не тот профиль в иссл-ии '+s)
  endif
  /*if ascan(nper_arr_issled[i,6],ausl[4]) == 0
    aadd(arr,'Не та специальность врача в иссл-ии '+s)
    aadd(arr,' у Вас: '+lstr(ausl[4])+', разрешено: '+print_array(nper_arr_issled[i,6]))
  endif*/
endif
return fl

*

***** 19.08.13 если услуга из 1 этапа
Function is_1_etap_PredN(ausl,_period,_etap)
// ausl := {lshifr,mdate,hu_->profil,hu_->PRVS}
Local i, s, fl := .f., lshifr := alltrim(ausl[1])
for i := 1 to count_predn_arr_osm
  if _etap == 1
    if npred_arr_osmotr[i,4] == ausl[3]
      lshifr := npred_arr_osmotr[i,1] // искусственно
      fl := .t. ; exit
    endif
  else
    if npred_arr_osmotr[i,1] == lshifr
      fl := .t. ; exit
    endif
  endif
next
if fl
  fl := (ascan(npred_arr_1_etap[_period,4],lshifr) > 0)
endif
return fl

***** 13.02.17
Function is_osmotr_PredN(ausl,_period,arr,_etap,_pol)
// ausl := {lshifr,mdate,hu_->profil,hu_->PRVS}
Local i, s, fl := .f., lshifr := alltrim(ausl[1])
if _etap == 2 .and. (j := ascan(npred_arr_osmotr_KDP2,{|x| x[2] == lshifr})) > 0
  lshifr := npred_arr_osmotr_KDP2[j,1]
endif
for i := 1 to count_predn_arr_osm
  if _etap == 1
    if npred_arr_osmotr[i,4] == ausl[3]
      lshifr := npred_arr_osmotr[i,1] // искусственно
      fl := .t. ; exit
    endif
  else
    if npred_arr_osmotr[i,1] == lshifr
      fl := .t. ; exit
    endif
  endif
next
if fl
  s := '"'+lshifr+'.'+npred_arr_osmotr[i,3]+'"'
  if _etap == 1 .and. ascan(npred_arr_1_etap[_period,4],lshifr) == 0
    aadd(arr,'Некорректный возрастной период пациента для '+s)
  endif
  if !empty(npred_arr_osmotr[i,2]) .and. !(npred_arr_osmotr[i,2] == _pol)
    aadd(arr,'Несовместимость по полу в услуге '+s)
  endif
  if npred_arr_osmotr[i,4] != ausl[3]
    aadd(arr,'Не тот профиль в услуге '+s)
  endif
  /*if ascan(npred_arr_osmotr[i,5],ausl[4]) == 0
    aadd(arr,'Не та специальность врача в услуге '+s)
    aadd(arr,' у Вас: '+lstr(ausl[4])+', разрешено: '+print_array(npred_arr_osmotr[i,5]))
  endif*/
endif
return fl

***** 19.08.13
Function is_issled_PredN(ausl,_period,arr,_pol)
// ausl := {lshifr,mdate,hu_->profil,hu_->PRVS}
Local i, s := "", fl := .f., lshifr := alltrim(ausl[1])
for i := 1 to count_predn_arr_iss
  if npred_arr_issled[i,1] == lshifr
    s := '"'+lshifr+'.'+npred_arr_issled[i,3]+'"'
    if valtype(npred_arr_issled[i,2]) == "C" .and. !(npred_arr_issled[i,2] == _pol)
      aadd(arr,'Несовместимость по полу в услуге '+s)
    endif
    fl := .t.
    exit
  endif
next
if fl .and. npred_arr_issled[i,4] < 2
  if ascan(npred_arr_1_etap[_period,5],lshifr) == 0
    aadd(arr,'Некорректный возрастной период пациента для '+s)
  endif
  if npred_arr_issled[i,5] != ausl[3]
    aadd(arr,'Не тот профиль в иссл-ии '+s)
  endif
  /*if ascan(npred_arr_issled[i,6],ausl[4]) == 0
    aadd(arr,'Не та специальность врача в иссл-ии '+s)
    aadd(arr,' у Вас: '+lstr(ausl[4])+', разрешено: '+print_array(npred_arr_issled[i,6]))
  endif*/
endif
return fl

*

***** 06.11.19 если услуга из 1 этапа
Function is_1_etap_PN(ausl,_period,_etap)
// ausl := {lshifr,mdate,hu_->profil,hu_->PRVS}
Local i, j, s, fl := .f., fl_profil := .f., lshifr := alltrim(ausl[1])
if eq_any(left(lshifr,4),"2.3.","2.91")
  fl_profil := .t.
elseif _etap == 1
  if (i := ascan(np_arr_not_zs,{|x| x[2] == lshifr})) > 0
    lshifr := np_arr_not_zs[i,1]
  endif
elseif (i := ascan(np_arr_osmotr_KDP2,{|x| x[2] == lshifr})) > 0
  lshifr := np_arr_osmotr_KDP2[i,1]
endif
for i := 1 to count_pn_arr_osm
  if _etap == 1 .or. fl_profil
    if valtype(np_arr_osmotr[i,4]) == "N"
      if np_arr_osmotr[i,4] == ausl[3]
        lshifr := np_arr_osmotr[i,1] // искусственно
        fl := .t. ; exit
      endif
    elseif (j := ascan(np_arr_osmotr[i,4],ausl[3])) > 0
      lshifr := np_arr_osmotr[i,1] // искусственно
      fl := .t. ; exit
    endif
  else
    if np_arr_osmotr[i,1] == lshifr
      fl := .t. ; exit
    endif
  endif
next
if fl
  fl := (ascan(np_arr_1_etap[_period,4],lshifr) > 0)
endif
return fl

***** 06.11.19
Function is_osmotr_PN(ausl,_period,arr,_etap,_pol)
// ausl := {lshifr,mdate,hu_->profil,hu_->PRVS}
Local i, j, s, fl := .f., fl_profil := .f., lshifr := alltrim(ausl[1])
if eq_any(left(lshifr,4),"2.3.","2.91")
  fl_profil := .t.
elseif _etap == 1
  if (i := ascan(np_arr_not_zs,{|x| x[2] == lshifr})) > 0
    lshifr := np_arr_not_zs[i,1]
  endif
elseif (i := ascan(np_arr_osmotr_KDP2,{|x| x[2] == lshifr})) > 0
  lshifr := np_arr_osmotr_KDP2[i,1]
endif
for i := 1 to count_pn_arr_osm
  if _etap == 1 .or. fl_profil
    if valtype(np_arr_osmotr[i,4]) == "N"
      if np_arr_osmotr[i,4] == ausl[3]
        lshifr := np_arr_osmotr[i,1] // искусственно
        fl := .t. ; exit
      endif
    elseif (j := ascan(np_arr_osmotr[i,4],ausl[3])) > 0
      lshifr := np_arr_osmotr[i,1] // искусственно
      fl := .t. ; exit
    endif
  else
    if np_arr_osmotr[i,1] == lshifr
      fl := .t. ; exit
    endif
  endif
next
if fl
  s := '"'+lshifr+'.'+np_arr_osmotr[i,3]+'"'
  if _etap == 1 .and. ascan(np_arr_1_etap[_period,4],lshifr) == 0
    aadd(arr,'Некорректный возрастной период пациента для '+s)
  endif
  if !empty(np_arr_osmotr[i,2]) .and. !(np_arr_osmotr[i,2] == _pol)
    aadd(arr,'Несовместимость по полу в услуге '+s)
  endif
  if valtype(np_arr_osmotr[i,4]) == "N"
    if np_arr_osmotr[i,4] != ausl[3]
      aadd(arr,'Не тот профиль в услуге '+s)
    endif
  elseif (j := ascan(np_arr_osmotr[i,4],ausl[3])) == 0
    aadd(arr,'Не тот профиль в услуге '+s)
  endif
endif
return fl

***** 28.01.18
Function is_issled_PN(ausl,_period,arr,_pol)
// ausl := {lshifr,mdate,hu_->profil,hu_->PRVS}
Local i, j, s := "", fl := .f., lshifr := alltrim(ausl[1])
if (i := ascan(np_arr_not_zs,{|x| x[2] == lshifr})) > 0
  lshifr := np_arr_not_zs[i,1]
endif
for i := 1 to count_pn_arr_iss
  if np_arr_issled[i,1] == lshifr
    s := '"'+lshifr+'.'+np_arr_issled[i,3]+'"'
    if valtype(np_arr_issled[i,2]) == "C" .and. !(np_arr_issled[i,2] == _pol)
      aadd(arr,'Несовместимость по полу в услуге '+s)
    endif
    fl := .t.
    exit
  endif
next
if fl .and. np_arr_issled[i,4] < 2
  if ascan(np_arr_1_etap[_period,5],lshifr) == 0
    aadd(arr,'Некорректный возрастной период пациента для '+s)
  endif
  if valtype(np_arr_issled[i,5]) == "N" .and. np_arr_issled[i,5] != ausl[3]
    aadd(arr,'Не тот профиль в иссл-ии '+s)
  endif
endif
return fl

*

***** 14.02.16 если услуга из 1 этапа
Function is_1_etap_PN_17(ausl,_period,_etap)
// ausl := {lshifr,mdate,hu_->profil,hu_->PRVS}
Local i, s, fl := .f., lshifr := alltrim(ausl[1])
if _etap == 2 .and. (i := ascan(np_arr_osmotr_KDP2_17,{|x| x[2] == lshifr})) > 0
  lshifr := np_arr_osmotr_KDP2_17[i,1]
endif
for i := 1 to count_pn_arr_osm_17
  if _etap == 1
    if np_arr_osmotr_17[i,4] == ausl[3]
      lshifr := np_arr_osmotr_17[i,1] // искусственно
      fl := .t. ; exit
    endif
  else
    if np_arr_osmotr_17[i,1] == lshifr
      fl := .t. ; exit
    endif
  endif
next
if fl
  fl := (ascan(np_arr_1_etap_17[_period,4],lshifr) > 0)
endif
return fl

***** 14.02.16
Function is_osmotr_PN_17(ausl,_period,arr,_etap,_pol)
// ausl := {lshifr,mdate,hu_->profil,hu_->PRVS}
Local i, s, fl := .f., lshifr := alltrim(ausl[1])
if _etap == 2 .and. (i := ascan(np_arr_osmotr_KDP2_17,{|x| x[2] == lshifr})) > 0
  lshifr := np_arr_osmotr_KDP2_17[i,1]
endif
for i := 1 to count_pn_arr_osm_17
  if _etap == 1
    if np_arr_osmotr_17[i,4] == ausl[3]
      lshifr := np_arr_osmotr_17[i,1] // искусственно
      fl := .t. ; exit
    endif
  else
    if np_arr_osmotr_17[i,1] == lshifr
      fl := .t. ; exit
    endif
  endif
next
if fl
  s := '"'+lshifr+'.'+np_arr_osmotr_17[i,3]+'"'
  if _etap == 1 .and. ascan(np_arr_1_etap_17[_period,4],lshifr) == 0
    aadd(arr,'Некорректный возрастной период пациента для '+s)
  endif
  if !empty(np_arr_osmotr_17[i,2]) .and. !(np_arr_osmotr_17[i,2] == _pol)
    aadd(arr,'Несовместимость по полу в услуге '+s)
  endif
  if np_arr_osmotr_17[i,4] != ausl[3]
    aadd(arr,'Не тот профиль в услуге '+s)
  endif
endif
return fl

***** 02.03.16
Function is_issled_PN_17(ausl,_period,arr,_pol)
// ausl := {lshifr,mdate,hu_->profil,hu_->PRVS}
Local i, j, s := "", fl := .f., lshifr := alltrim(ausl[1])
for i := 1 to count_pn_arr_iss_17
  if np_arr_issled_17[i,1] == lshifr
    s := '"'+lshifr+'.'+np_arr_issled_17[i,3]+'"'
    if valtype(np_arr_issled_17[i,2]) == "C" .and. !(np_arr_issled_17[i,2] == _pol)
      aadd(arr,'Несовместимость по полу в услуге '+s)
    endif
    fl := .t.
    exit
  endif
next
if fl .and. np_arr_issled_17[i,4] < 2
  if ascan(np_arr_1_etap_17[_period,5],lshifr) == 0
    aadd(arr,'Некорректный возрастной период пациента для '+s)
  endif
  if valtype(np_arr_issled_17[i,5]) == "N" .and. np_arr_issled_17[i,5] != ausl[3]
    aadd(arr,'Не тот профиль в иссл-ии '+s)
  endif
endif
return fl

*

***** 20.06.19
Function is_usluga_dvn(ausl,_vozrast,arr,_etap,_pol,_spec_ter)
// ausl := {lshifr,mdate,hu_->profil,hu_->PRVS}
Local i, j, s, fl := .f., as, lshifr := alltrim(ausl[1]), fl_19
fl_19 := (type("is_disp_19") == "L" .and. is_disp_19)
if !fl_19 .and. ((lshifr == "2.3.3" .and. ausl[3] == 3) .or. ; // акушерскому делу
                 (lshifr == "2.3.1" .and. ausl[3] == 136))   // акушерству и гинекологии
    //.and. (i := ascan(dvn_arr_usl, {|x| valtype(x[2])=="C" .and. x[2]=="4.20.1"})) > 0
  if ((lshifr == "2.3.3" .and. eq_any(ret_old_prvs(ausl[4]),2003,2002)) .or. ;
      (lshifr == "2.3.1" .and. ret_old_prvs(ausl[4]) == 1101))
  else
    aadd(arr,'не та специальность врача в случае невозможности использования услуги:')
    aadd(arr,' "4.1.12.Осмотр акушеркой, взятие мазка (соскоба)"')
  endif
  fl := .t.
endif
if !fl
  for i := 1 to count_dvn_arr_umolch
    if dvn_arr_umolch[i,2] == lshifr
      fl := .t. ; exit
    endif
  next
endif
if !fl
  DEFAULT _spec_ter to 0
  for i := 1 to count_dvn_arr_usl
    if valtype(dvn_arr_usl[i,2]) == "C"
      if dvn_arr_usl[i,2] == "4.20.1" .and. lshifr == "4.20.2"
        fl := .t.
      elseif dvn_arr_usl[i,2] == lshifr
        fl := .t.
      endif
    endif
    if !fl .and. len(dvn_arr_usl[i]) > 11 .and. valtype(dvn_arr_usl[i,12]) == "A"
      if ascan(dvn_arr_usl[i,12],{|x| x[1] == lshifr .and. x[2] == ausl[3]}) > 0
        fl := .t.
      endif
    endif
    if fl
      s := '"'+lshifr+'.'+dvn_arr_usl[i,1]+'"'
      if eq_any(_etap,1,4,5)
        j := iif(_pol == "М", 6, 7)
        if _etap > 1 .and. len(dvn_arr_usl[i]) > 12
          j := iif(_pol == "М", 13, 14)
        endif
        if valtype(dvn_arr_usl[i,j]) == "N"
          if dvn_arr_usl[i,j] == 0
            aadd(arr,'несовместимость по полу в услуге '+s)
          endif
        else
          if ascan(dvn_arr_usl[i,j],_vozrast) == 0
            aadd(arr,'некорректный возраст пациента для услуги '+s)
          endif
        endif
      else
        j := iif(_pol == "М", 8, 9)
        if valtype(dvn_arr_usl[i,j]) == "N"
          if dvn_arr_usl[i,j] == 0
            aadd(arr,'несовместимость по полу в услуге '+s)
          endif
        elseif type("is_disp_19") == "L" .and. is_disp_19
          if ascan(dvn_arr_usl[i,j],_vozrast) == 0
            aadd(arr,'некорректный возраст пациента для услуги '+s)
          endif
        else
          if !between(_vozrast,dvn_arr_usl[i,j,1],dvn_arr_usl[i,j,2])
            aadd(arr,'некорректный возраст пациента для услуги '+s)
          endif
        endif
      endif
      if valtype(dvn_arr_usl[i,10]) == "N"
        if ret_profil_dispans(dvn_arr_usl[i,10],ausl[4]) != ausl[3]
        //if dvn_arr_usl[i,10] != ausl[3]
          aadd(arr,'не тот профиль в услуге '+s)
        endif
      else
        if ascan(dvn_arr_usl[i,10],ausl[3]) == 0
          aadd(arr,'не тот профиль в услуге '+s)
        endif
      endif
      as := aclone(dvn_arr_usl[i,11])
      // "Измерение внутриглазного давления","3.4.9"
      if _etap == 1 .and. as[1] == 1112 .and. _spec_ter > 0
        aadd(as,_spec_ter) // добавить спец-ть терапевта
      endif
      /*if ascan(as,ausl[4]) == 0
        aadd(arr,'Не та специальность врача в услуге '+s)
        aadd(arr,' у Вас: '+lstr(ausl[4])+', разрешено: '+print_array(as))
      endif*/
      exit
    endif
  next
endif
return fl

*

***** 18.05.15
Function is_usluga_dvn13(ausl,_vozrast,arr,_etap,_pol,_spec_ter)
// ausl := {lshifr,mdate,hu_->profil,hu_->PRVS}
Local i, j, s, fl := .f., as, lshifr := alltrim(ausl[1])
if ((lshifr == "2.3.3" .and. ausl[3] == 3) .or. ; // акушерскому делу
      (lshifr == "2.3.1" .and. ausl[3] == 136))   // акушерству и гинекологии
    //.and. (i := ascan(dvn_arr_usl, {|x| valtype(x[2])=="C" .and. x[2]=="4.20.1"})) > 0
  if ((lshifr == "2.3.3" .and. eq_any(ret_old_prvs(ausl[4]),2003,2002)) .or. ;
      (lshifr == "2.3.1" .and. ret_old_prvs(ausl[4]) == 1101))
  else
    aadd(arr,'Не та специальность врача в случае невозможности использования услуги:')
    aadd(arr,' "4.1.12.Осмотр акушеркой, взятие мазка (соскоба)"')
  endif
  fl := .t.
endif
if !fl
  for i := 1 to count_dvn_arr_umolch13
    if dvn_arr_umolch13[i,2] == lshifr
      fl := .t. ; exit
    endif
  next
endif
if !fl
  DEFAULT _spec_ter to 0
  for i := 1 to count_dvn_arr_usl13
    if len(dvn_arr_usl13[i]) < 12 .and. valtype(dvn_arr_usl13[i,2]) == "C"
      if dvn_arr_usl13[i,2] == "4.20.1" .and. lshifr == "4.20.2"
        fl := .t.
      elseif dvn_arr_usl13[i,2] == lshifr
        fl := .t.
      endif
    elseif len(dvn_arr_usl13[i]) > 11
      if ascan(dvn_arr_usl13[i,12],{|x| x[1]==lshifr .and. x[2]==ausl[3]}) > 0
        fl := .t.
      endif
    endif
    if fl
      s := '"'+lshifr+'.'+dvn_arr_usl13[i,1]+'"'
      if _etap == 1
        j := iif(_pol == "М", 6, 7)
        if valtype(dvn_arr_usl13[i,j]) == "N"
          if dvn_arr_usl13[i,j] == 0
            aadd(arr,'Несовместимость по полу в услуге '+s)
          endif
        else
          if ascan(dvn_arr_usl13[i,j],_vozrast) == 0
            aadd(arr,'Некорректный возраст пациента для услуги '+s)
          endif
        endif
      else
        j := iif(_pol == "М", 8, 9)
        if valtype(dvn_arr_usl13[i,j]) == "N"
          if dvn_arr_usl13[i,j] == 0
            aadd(arr,'Несовместимость по полу в услуге '+s)
          endif
        else
          if !between(_vozrast,dvn_arr_usl13[i,j,1],dvn_arr_usl13[i,j,2])
            aadd(arr,'Некорректный возраст пациента для услуги '+s)
          endif
        endif
      endif
      if valtype(dvn_arr_usl13[i,10]) == "N"
        if ret_profil_dispans(dvn_arr_usl13[i,10],ausl[4]) != ausl[3]
        //if dvn_arr_usl13[i,10] != ausl[3]
          aadd(arr,'Не тот профиль в услуге '+s)
        endif
      else
        if ascan(dvn_arr_usl13[i,10],ausl[3]) == 0
          aadd(arr,'Не тот профиль в услуге '+s)
        endif
      endif
      as := aclone(dvn_arr_usl13[i,11])
      // "Измерение внутриглазного давления","3.4.9"
      if _etap == 1 .and. as[1] == 1112 .and. _spec_ter > 0
        aadd(as,_spec_ter) // добавить спец-ть терапевта
      endif
      /*if ascan(as,ausl[4]) == 0
        aadd(arr,'Не та специальность врача в услуге '+s)
        aadd(arr,' у Вас: '+lstr(ausl[4])+', разрешено: '+print_array(as))
      endif*/
      exit
    endif
  next
endif
return fl

*

***** 10.05.16 является врачебным осмотром детей-сирот на первом этапе
Function is_osmotr_DDS_1_etap(ausl,_vozrast,_etap,_pol,tip_lu)
// ausl := {lshifr,mdate,hu_->profil,hu_->PRVS}
Local i, s, fl := .f., lshifr := alltrim(ausl[1])
// вместо услуг "2.87.*" сделаем "2.83.*"
if tip_lu == TIP_LU_DDSOP .and. left(lshifr,5)=="2.87."
  lshifr := "2.83."+substr(lshifr,6)
endif
for i := 1 to count_dds_arr_osm1
  if iif(empty(dds_arr_osm1[i,2]), .t., dds_arr_osm1[i,2] == mpol) .and. ;
                           between(_vozrast,dds_arr_osm1[i,3],dds_arr_osm1[i,4])
    if _etap == 1
      if ascan(dds_arr_osm1[i,5],ausl[3]) > 0
        fl := .t. ; exit
      endif
    else
      if ascan(dds_arr_osm1[i,7],lshifr) > 0
        fl := .t. ; exit
      endif
    endif
  endif
next
return fl

***** 13.02.17 является врачебным осмотром детей-сирот
Function is_osmotr_DDS(ausl,_vozrast,arr,_etap,_pol,tip_lu)
// ausl := {lshifr,mdate,hu_->profil,hu_->PRVS}
Local i, j, s, fl := .f., lshifr := alltrim(ausl[1])
// вместо услуг "2.87.*" сделаем "2.83.*"
if tip_lu == TIP_LU_DDSOP .and. left(lshifr,5)=="2.87."
  lshifr := "2.83."+substr(lshifr,6)
endif
if _etap == 2 .and. (j := ascan(dds_arr_osmotr_KDP2,{|x| x[2] == lshifr})) > 0
  lshifr := dds_arr_osmotr_KDP2[j,1]
endif
for i := 1 to count_dds_arr_osm1
  if _etap == 1
    if ascan(dds_arr_osm1[i,5],ausl[3]) > 0
      fl := .t. ; exit
    endif
  else
    if ascan(dds_arr_osm1[i,7],lshifr) > 0
      fl := .t. ; exit
    endif
  endif
next
if fl
  s := '"'+lshifr+'.'+dds_arr_osm1[i,1]+'"'
  /*if !between(_vozrast,dds_arr_osm1[i,3],dds_arr_osm1[i,4])
    aadd(arr,'Некорректный возраст пациента для услуги '+s)
  endif*/
  if !empty(dds_arr_osm1[i,2]) .and. !(dds_arr_osm1[i,2] == _pol)
    aadd(arr,'Несовместимость по полу в услуге '+s)
  endif
  if ascan(dds_arr_osm1[i,5],ausl[3]) == 0
    aadd(arr,'Не тот профиль в услуге '+s)
  endif
  /*if ascan(dds_arr_osm1[i,6],ausl[4]) == 0
    aadd(arr,'Не та специальность врача в услуге '+s)
    aadd(arr,' у Вас: '+lstr(ausl[4])+', разрешено: '+print_array(dds_arr_osm1[i,6]))
  endif*/
endif
if !fl .and. _etap == 2
  for i := 1 to count_dds_arr_osm2
    if ascan(dds_arr_osm2[i,7],lshifr) > 0 .and. ascan(dds_arr_osm2[i,5],ausl[3]) > 0
      fl := .t. ; exit
    endif
  next
  if fl
    s := '"'+lshifr+'.'+dds_arr_osm2[i,1]+'"'
    if !between(_vozrast,dds_arr_osm2[i,3],dds_arr_osm2[i,4])
      aadd(arr,'Некорректный возраст пациента для услуги '+s)
    endif
    if ascan(dds_arr_osm2[i,5],ausl[3]) == 0
      aadd(arr,'Не тот профиль в услуге '+s)
    endif
    /*if ascan(dds_arr_osm2[i,6],ausl[4]) == 0
      aadd(arr,'Не та специальность врача в услуге '+s)
      aadd(arr,' у Вас: '+lstr(ausl[4])+', разрешено: '+print_array(dds_arr_osm2[i,6]))
    endif*/
  endif
endif
return fl

***** 13.05.13 является исследованием детей-сирот
Function is_issl_DDS(ausl,_vozrast,arr)
// ausl := {lshifr,mdate,hu_->profil,hu_->PRVS}
Local i, s, fl := .f., lshifr := alltrim(ausl[1])
for i := 1 to count_dds_arr_iss
  if ascan(dds_arr_iss[i,7],lshifr) > 0
    fl := .t. ; exit
  endif
next
if fl .and. valtype(_vozrast) == "N"
  s := '"'+lshifr+'.'+dds_arr_iss[i,1]+'"'
  if !between(_vozrast,dds_arr_iss[i,3],dds_arr_iss[i,4])
    aadd(arr,'Некорректный возраст пациента для услуги '+s)
  endif
  if ascan(dds_arr_iss[i,5],ausl[3]) == 0
    aadd(arr,'Не тот профиль в услуге '+s)
  endif
  /*if ascan(dds_arr_iss[i,6],ausl[4]) == 0
    aadd(arr,'Не та специальность врача в услуге '+s)
    aadd(arr,' у Вас: '+lstr(ausl[4])+', разрешено: '+print_array(dds_arr_iss[i,6]))
  endif*/
endif
return fl

***** 11.05.20 реконстукция баз данных
Function Reconstruct_BD(is_cur_dir,is_create)
Local base1 := {;
   {"P1",      "C",  20,   0},; // Ф.И.О.
   {"P2",      "N",   1,   0},; // тип доступа
   {"P3",      "C",  10,   0},; // пароль
   {"P4",      "C",   1,   0},; // код отделения [ chr(kod) ]
   {"P5",      "C",  20,   0},; // должность
   {"P6",      "N",   1,   0},; // Группа КЭК (1-3)
   {"P7",      "C",  10,   0},; // пароль1 для фискального регистратора
   {"P8",      "C",  10,   0},; // пароль2 для фискального регистратора
   {"INN",     "C",  12,   0},; // ИНН кассира
   {"IDROLE",  "N",   4,   0};  // ID группы пользователей
  }
Local mo_oper := {;
   {"PO",      "C",   1,   0},; // код оператора asc(po)
   {"PD",      "C",   4,   0},; // дата ввода c4tod(pd)
   {"V0",      "C",   3,   0},; // добавление в регистратуре
   {"VR",      "C",   3,   0},; // полные реквизиты      \
   {"VK",      "C",   3,   0},; // реквизиты из картотеки => ft_unsqzn(V..., 6)
   {"VU",      "C",   3,   0},; // ввод услуг            /
   {"TASK",    "N",   1,   0},; // код задачи            /
   {"CS",      "C",   4,   0},; // количество введённых символов
   {"APP_EDIT","N",   1,   0};  // 0 - добавление, 1 - редактирование
  }
Local mo_opern := {;
   {"PD",      "C",   4,   0},; // дата ввода c4tod(pd)
   {"PO",      "C",   1,   0},; // код оператора asc(po)
   {"PT",      "C",   1,   0},; // код задачи
   {"TP",      "C",   1,   0},; // тип (1-карточка, 2-л/у, 3-услуги)
   {"AE",      "C",   1,   0},; // 1-добавление, 2-редактирование, 3-удаление
   {"KK",      "C",   3,   0},; // кол-во (карточек, л/у или услуг)
   {"KP",      "C",   3,   0};  // количество введённых полей
  }
Local kartotek := {;
   {"KOD"      ,   "N",     7,     0},;
   {"FIO"      ,   "C",    50,     0},; // Ф.И.О. больного
   {"POL"      ,   "C",     1,     0},; // пол
   {"DATE_R"   ,   "D",     8,     0},; // дата рождения больного
   {"VZROS_REB",   "N",     1,     0},; // 0-взрослый, 1-ребенок, 2-подросток
   {"ADRES"    ,   "C",    50,     0},; // адрес больного
   {"MR_DOL"   ,   "C",    50,     0},; // место работы или причина безработности
   {"RAB_NERAB",   "N",     1,     0},; // 0-работающий, 1-неработающий
   {"KOMU"     ,   "N",     1,     0},; // от 1 до 5
   {"STR_CRB"  ,   "N",     2,     0},; // код стр.компании, комитета и т.п.
   {"ZA_SMO"   ,   "N",     2,     0},; // 0-нет,"-8"-полис недействителен,"-9"-ошибки в реквизитах
   {"POLIS"    ,   "C",    17,     0},; // серия и номер страхового полиса
   {"SROK_POLIS",  "C",     4,     0},; // срок действия полиса
   {"MI_GIT"   ,   "N",     1,     0},; // 0-нет, 9-рабочее поле KOMU
   {"RAJON_GIT",   "N",     2,     0},; // код района места жительства
   {"MEST_INOG",   "N",     1,     0},; // 0-нет,9-отдельные ФИО
   {"RAJON"    ,   "N",     2,     0},; // код района финансирования
   {"BUKVA"    ,   "C",     1,     0},; // одна буква
   {"UCHAST"   ,   "N",     2,     0},; // номер участка
   {"KOD_VU"   ,   "N",     5,     0},; // код в участке
   {"SNILS"    ,   "C",    11,     0},;
   {"DEATH",     "N",  1,0},; // 0-нет,1-умер по результатам сверки
   {"kod_tf",    "N", 10,0},; // код по кодировке ТФОМС
   {"kod_mis",   "C", 20,0},; // ЕНП - единый номер полиса ОМС
   {"kod_AK",    "C", 10,0},; // собственный номер амбулаторной карты
   {"TIP_PR",    "N",  1,0},; // тип/статус прикрепления 1-из WQ,2-из реестра СП и ТК,3-из файла прикрепления,4-открепление,5-сверка
   {"MO_PR",     "C",  6,0},; // код МО прикрепления
   {"DATE_PR",   "D",  8,0},; // дата прикрепления
   {"SNILS_VR",  "C", 11,0},; // СНИЛС участкового врача
   {"PC1",       "C", 10,0},; // при добавлении:kod_polzovat+c4sys_date+hour_min(seconds())
   {"PC2",       "C", 10,0},; // 0-нет,1-умер по результатам сверки
   {"PC3",       "C", 10,0},; //
   {"PN1",       "N", 10,0},; //
   {"PN2",       "N", 10,0},; //
   {"PN3",       "N", 10,0};  //
  }
Local kartotek_ := {;
   {"VPOLIS",    "N",  1,0},; // вид полиса (от 1 до 3);1-старый,2-врем.,3-новый;по умолчанию 1 - старый
   {"SPOLIS",    "C", 10,0},; // серия полиса;;для наших - разделить по пробелу
   {"NPOLIS",    "C", 20,0},; // номер полиса;;"для иногородних - вынуть из ""k_inog"" и разделить"
   {"SMO",       "C",  5,0},; // реестровый номер СМО;;преобразовать из старых кодов в новые, иногродние = 34
   {"beg_polis", "C",  4,0},; // дата начала действия полиса ;в формате dtoc4();"поле ""beg_polis"" из файла ""k_inog"" для иногородних"
   {"strana",    "C",  3,0},; // гражданство пациента (страна);выбор из справочника стран;"поле ""strana"" из файла ""k_inog"" для иногородних, для остальных пусто = РФ"
   {"gorod_selo","N",  1,0},; // житель?;1-город, 2-село, 3-рабочий поселок;"поле ""gorod_selo"" из файла ""pp_human"""
   {"vid_ud",    "N",  2,0},; // вид удостоверения личности;по кодировке ФФОМС;"PKRT_VID из ""APP_BASE"""
   {"ser_ud",    "C", 10,0},; // серия удостоверения личности;;"PKRT_SER из ""APP_BASE"""
   {"nom_ud",    "C", 20,0},; // номер удостоверения личности;;"PKRT_NOM из ""APP_BASE"""
   {"kemvyd",    "N",  6,0},; // кем выдан документ;"справочник ""s_kemvyd""";"PKRT_KEM из ""APP_BASE"""
   {"kogdavyd",  "D",  8,0},; // когда выдан документ;;"PKRT_KOGDA из ""APP_BASE"""
   {"kategor",   "N",  3,0},; // категория пациента;выбор из меню??;"PKRT_KATEG из ""APP_BASE"""
   {"kategor2",  "N",  3,0},; // категория пациента (собственная для МО);выбор из меню??;"PKRT_KATEG из ""APP_BASE"", если в lpu.ini есть свои категории"
   {"mesto_r",   "C",100,0},; // место рождения;;
   {"okatog",    "C", 11,0},; // код места жительства по ОКАТО;выбор из справочника ОКАТО;попытаться сформировать для нашей области по коду района
   {"okatop",    "C", 11,0},; // код места пребывания по ОКАТО;;
   {"adresp",    "C", 50,0},; // адрес места пребывания;сюда будем заносить остаток адреса места пребывания;
   {"DMS_SMO",   "N",  3,0},; // код СМО ДМС;;
   {"DMS_POLIS", "C", 17,0},; // код полиса ДМС;;
   {"KVARTAL",   "C",  5,0},; // квартал для Волжского;на будущее;
   {"KVARTAL_D", "C",  5,0},; // дом в квартале Волжского;на будущее;
   {"PHONE_H",   "C", 11,0},; // телефон домашний;;
   {"PHONE_M",   "C", 11,0},; // телефон мобильный;;
   {"PHONE_W",   "C", 11,0},; // телефон рабочий;;
   {"KOD_LGOT",  "C",  3,0},; // код льготы по ДЛО;;
   {"IS_REGISTR","N",  1,0},; // есть ли в регистре ДЛО;0-нет, 1-есть;
   {"PENSIONER", "N",  1,0},; // является пенсионером?;0-нет, 1-да;
   {"INVALID",   "N",  1,0},; // инвалидность;0-нет,1,2,3-степень, 4-инвалид детства;
   {"INVALID_ST","N",  1,0},; // степень инвалидности;1 или 2;
   {"BLOOD_G",   "N",  1,0},; // группа крови;от 1 до 4;
   {"BLOOD_R",   "C",  1,0},; // резус-фактор;"+" или "-";
   {"WEIGHT",    "N",  3,0},; // вес в кг;;
   {"HEIGHT",    "N",  3,0},; // рост в см;;
   {"WHERE_KART","N",  1,0},; // где амбулаторная карта;0-в регистратуре, 1-у врача, 2-на руках;
   {"GR_RISK",   "N",  3,0},; // группа риска по стандарту горздрава;;если есть REGI_FL.DBF, то взять из него
   {"DATE_FL",   "C",  4,0},; // дата последней флюорогрфии;;если есть REGI_FL.DBF, то взять из него
   {"DATE_MR",   "C",  4,0},; // дата последнего муниципального рецепта;;
   {"DATE_FR",   "C",  4,0};  // дата последнего федерального рецепта;;
  }
Local kartotek2 := {;
   {"kod_tf",    "N", 10,0},; // код по кодировке ТФОМС
   {"kod_mis",   "C", 20,0},; // ЕНП - единый номер полиса ОМС
   {"kod_AK",    "C", 10,0},; // собственный номер амбулаторной карты (КМИС/ЛИС)
   {"TIP_PR",    "N",  1,0},; // тип/статус прикрепления 1-из WQ,2-из реестра СП и ТК,3-из файла прикрепления,4-открепление,5-сверка
   {"MO_PR",     "C",  6,0},; // код МО прикрепления
   {"DATE_PR",   "D",  8,0},; // дата прикрепления к врачу
   {"SNILS_VR",  "C", 11,0},; // СНИЛС участкового врача
   {"PC1",       "C", 10,0},; // при добавлении:kod_polzovat+c4sys_date+hour_min(seconds())
   {"PC2",       "C", 10,0},; // 0-нет,1-умер по результатам сверки
   {"PC3",       "C", 10,0},; //
   {"PC4",       "C", 10,0},; // дата прикрепления к МО
   {"PC5",       "C", 10,0},; //
   {"PN1",       "N", 10,0},; //
   {"PN2",       "N", 10,0},; //
   {"PN3",       "N", 10,0};  //
  }
Local mo_kinos := {;  // справочник сведений об иностранце (при картотеке)
   {"KOD"      ,   "N",     7,     0},; // код (номер записи по БД kartotek)
   {"OSN_PREB",    "N",     2,     0},; // основание пребывания в РФ
   {"ADRES_PRO",   "C",    60,     0},; // адрес проживания в Волг.обл.
   {"MIGR_KARTA",  "C",    20,     0},; // данные миграционной карты
   {"DATE_P_G",    "D",     8,     0},; // дата пересечения границы
   {"DATE_R_M",    "D",     8,     0};  // дата регистрации в миграционной службе
  }
Local _kart_inv := {;
   {"KOD"      ,   "N",     7,     0},; // код (номер записи по БД kartotek)
   {"DATE_INV",    "D",     8,     0},; // дата первичного установления инвалидности
   {"PRICH_INV",   "N",     2,     0},; // причина первичного установления инвалидности
   {"DIAG_INV",    "C",     5,     0};  //
  }
Local _kart_et := {;
  {"kod_tf",    "N", 10,0},; // код по кодировке ТФОМС
  {"kod_mis",   "C", 16,0},; // ЕНП - единый номер полиса ОМС
  {"DATE_PR",   "D",  8,0},; // дата прикрепления
  {"UCHAST" ,   "N",  2,0},; // номер участка
  {"MO_PR",     "C",  6,0},; // МО прикрепления
  {"SNILS_VR",  "C", 11,0},; // СНИЛС участкового врача
  {"DEATH",     "N",  1,0},; // 0-нет,1-умер по результатам сверки
  {"PC2",       "C",  1,0},; // 0-нет,1-умер по результатам сверки
  {"kol",       "N",  6,0};  // кол-во записей в картотеке с данным PID
}
Local _kart_etk := {;
  {"kod_tf",    "N", 10,0},; // код по кодировке ТФОМС
  {"KOD_K" ,    "N",  7,0},; // код по картотеке
  {"PRIOR",     "N",  1,0};  // 1-из ответа на сверку, 2-из E2...
}
Local mo_kartp := {; // список прикреплений по пациенту во времени
   {"KOD_K",    "N", 7,0},; // код пациента по файлу "kartotek"
   {"MO_PR",    "C", 6,0},; // код МО прикрепления
   {"D_PRIK",   "D", 8,0},; // дата прикрепления
   {"SNILS_VR", "C",11,0},; // СНИЛС участкового врача
   {"TIP_PR",   "N", 1,0},; // тип/статус прикрепления 3-из файла прикрепления,4-открепление,5-сверка
   {"DFILE",    "D", 8,0};  // дата создания файла
  }
Local mo_krtp := {; // список карточек в реестрах на прикрепление
   {"REESTR",   "N", 6,0},; // код реестра;по файлу "mo_krtr"
   {"KOD_K",    "N", 7,0},; // код пациента по файлу "kartotek"
   {"D_PRIK",   "D", 8,0},; // дата прикрепления (заявления)
   {"S_PRIK",   "N", 1,0},; // способ прикрепления: 1-по месту регистрации, 2-по личному заявлению (без изменения м/ж), 3-по личному заявлению (в связи с изменением м/ж)
   {"REES_ZAP", "N", 6,0},; // номер строки в реестре
   {"UCHAST"   ,"N", 2,0},; // номер участка
   {"SNILS_VR", "C",11,0},; // СНИЛС участкового врача
   {"KOD_PODR", "C",25,0},; // код подразделения по паспорту ЛПУ
   {"VRACH"    ,"N", 4,0},; // код участкового врача
   {"OPLATA",   "N", 1,0},; // тип оплаты;сначала 0, 1-прикреплён, 2-ошибки
   {"D_PRIK1",  "D", 8,0};  // дата прикрепления
  }
Local mo_krte := {; // список ошибок в реестрах на прикрепление
   {"REESTR",   "N", 6,0},; // код реестра;по файлу "mo_krtr"
   {"REES_ZAP", "N", 6,0},; // номер строки в реестре
   {"KOD_K",    "N", 7,0},; // код пациента по файлу "kartotek"
   {"REFREASON","N", 3,0};  // код ошибки
  }
Local mo_krtr := {; // Реестр сведений о прикреплении
   {"KOD",         "N", 6,0},; // код реестра;номер записи;
   {"FNAME",       "C",26,0},; // имя файла без расширения
   {"DFILE",       "D", 8,0},; // дата создания файла
   {"KOD_F",       "N", 6,0},; // ссылка на файл "mo_krtf"
   {"DATE_OUT",    "D", 8,0},; // дата отправки в ТФОМС;;
   {"NUMB_OUT",    "N", 2,0},; // номер отправки в ТФОМС;сколько раз всего записывали файл на носитель;
   {"KOL",         "N", 6,0},; // количество пациентов в реестре
   {"KOL_P",       "N", 6,0},; // количество прикреплённых пациентов
   {"WQ",          "C",11,0},; // конец имени файла WQ...
   {"ANSWER",      "N", 1,0};  // 0-не было ответа, 1-был прочитан ответ
  }
Local mo_krto := {; // список карточек в файлах на открепление
   {"kod_krtf", "N", 6,0},; // код по файлу "mo_krtf"
   {"kod_tf",   "N",10,0},; // код по кодировке ТФОМС (PID)
   {"KOD_K",    "N", 7,0},; // код пациента по файлу "kartotek", если найден
   {"MO_PR",    "C", 6,0},; // код МО прикрепления
   {"D_PRIK",   "D", 8,0},; // дата прикрепления
   {"FILE_ZAP", "N", 6,0};  // номер строки в файле
  }
Local mo_krtf := {; // Список отосланных и принятых CSV-файлов
   {"KOD",         "N", 6,0},; // код;номер записи
   {"FNAME",       "C",26,0},; // имя файла без расширения
   {"DFILE",       "D", 8,0},; // дата создания файла
   {"TFILE",       "C", 5,0},; // время создания файла
   {"DREAD",       "D", 8,0},; // дата чтения/записи
   {"TREAD",       "C", 5,0},; // время чтения/записи
   {"TIP_IN",      "N", 1,0},; // тип принимаемого файла;2-ответ,3-открепление,4,5
   {"TIP_OUT",     "N", 1,0},; // тип высылаемого файла;1-реестр
   {"DWORK",       "D", 8,0},; // дата обработки файла;
   {"TWORK1",      "C", 5,0},; // время начала обработки;
   {"TWORK2",      "C", 5,0},; // время окончания обработки;
   {"KOL",         "N", 6,0},; // количество пациентов в файле
   {"REESTR",      "N", 6,0},; // код реестра (отсылаемого или обработанного ТФОМС) или 0 в случае открепления
   {"MO_PR",       "C", 6,0};  // код МО прикрепления в случае открепления
  }
Local k_prim1 := {;
   {"KOD",        "N",      7,      0},;
   {"STROKE",     "N",      1,      0},;
   {"NAME",       "C",     60,      0};
  }
Local mo_regi := {; // регистрация посещения в регистратуре
   {"KOD_K","N",7,0},; // код по картотеке;;
   {"TIP",  "N",1,0},; // тип операции;1-отделение, 2-прием, 3-врач;
   {"OP",   "N",4,0},; // код отделения/приема/врача;;
   {"UCH",  "N",3,0},; // код учреждения;;
   {"PDATE","C",4,0},; // дата листа учета;;
   {"CTIME","C",5,0},; // время листа учета;;
   {"KOD_P","C",1,0};  // код оператора;;
  }
Local msek := {;
   {"KOD_K"    ,   "N",     7,     0},; // код по картотеке
   {"DATE_KOM" ,   "D",     8,     0},; // дата комиссии
   {"KOD_DIAG" ,   "C",     5,     0},; // шифр заболевания
   {"TRUD"     ,   "N",     1,     0},; // трудоспособность: 0 - да, 1 - нет
   {"CEL"      ,   "N",     2,     0},; // от 1 до 7
   {"GRUP_DO"  ,   "N",     2,     0},; // группа (процент) до
   {"GRUP_POSLE",  "N",     2,     0};  // группа (процент) после
  }
Local spr_OMS := {;
   {"KOD_H"    ,   "N",     7,     0},; // код (номер записи) по БД human
   {"KOD_K"    ,   "N",     7,     0},; // код по картотеке
   {"FIO"      ,   "C",    50,     0},; // Ф.И.О. больного
   {"DATE_R"   ,   "D",     8,     0},; // дата рождения больного
   {"DATA"     ,   "D",     8,     0},; // дата выдачи справки
   {"N_DATA"   ,   "D",     8,     0},; // дата начала лечения
   {"K_DATA"   ,   "D",     8,     0},; // дата окончания лечения
   {"TIP"      ,   "N",     1,     0},; // 1-амбулаторно,2-стационар,3-дневной стационар
   {"STOIM"    ,   "N",    11,     2};  // оплачиваемая сумма лечения
  }
//
Local human := {;
   {"KOD"      ,   "N",     7,     0},; // код (номер записи)
   {"KOD_K"    ,   "N",     7,     0},; // код по картотеке
   {"TIP_H"    ,   "N",     1,     0},; // 1-лечится,2-лечение не завершено,3-лечение не завершено,4-выписан счет,5-оплачен полностью,6-больной не оплачивается
   {"FIO"      ,   "C",    50,     0},; // Ф.И.О. больного
   {"POL"      ,   "C",     1,     0},; // пол
   {"DATE_R"   ,   "D",     8,     0},; // дата рождения больного
   {"VZROS_REB",   "N",     1,     0},; // 0-взрослый, 1-ребенок, 2-подросток
   {"ADRES"    ,   "C",    50,     0},; // адрес больного
   {"MR_DOL"   ,   "C",    50,     0},; // место работы или причина безработности
   {"RAB_NERAB",   "N",     1,     0},; // 0-работающий, 1-неработающий
   {"KOD_DIAG" ,   "C",     5,     0},; // шифр 1-ой осн.болезни
   {"KOD_DIAG2",   "C",     5,     0},; // шифр 2-ой осн.болезни
   {"KOD_DIAG3",   "C",     5,     0},; // шифр 3-ой осн.болезни
   {"KOD_DIAG4",   "C",     5,     0},; // шифр 4-ой осн.болезни
   {"SOPUT_B1" ,   "C",     5,     0},; // шифр 1-ой сопутствующей болезни
   {"SOPUT_B2" ,   "C",     5,     0},; // шифр 2-ой сопутствующей болезни
   {"SOPUT_B3" ,   "C",     5,     0},; // шифр 3-ой сопутствующей болезни
   {"SOPUT_B4" ,   "C",     5,     0},; // шифр 4-ой сопутствующей болезни
   {"DIAG_PLUS",   "C",     8,     0},; // дополнение к диагнозам (+,-)
   {"OBRASHEN" ,   "C",     1,     0},; // пробел-ничего, '1'-подозрение на ЗНО, '2'-онкология???
   {"KOMU"     ,   "N",     1,     0},; // от 1 до 5
   {"STR_CRB"  ,   "N",     2,     0},; // код стр.компании, комитета и т.п.
   {"ZA_SMO"   ,   "N",     2,     0},; // ЗаСМО
   {"POLIS"    ,   "C",    17,     0},; // серия и номер страхового полиса
   {"LPU"      ,   "N",     3,     0},; // код учреждения
   {"OTD"      ,   "N",     3,     0},; // код отделения
   {"UCH_DOC"  ,   "C",    10,     0},; // вид и номер учетного документа
   {"MI_GIT"   ,   "N",     1,     0},; // 0-город, 1-область, 2-иногородний
   {"RAJON_GIT",   "N",     2,     0},; // код района места жительства
   {"MEST_INOG",   "N",     1,     0},; // 0-город, 1-область, 2-иногородний
   {"RAJON"    ,   "N",     2,     0},; // код района финансирования
   {"REG_LECH" ,   "N",     1,     0},; // 0-основные, 9-дополнительные объёмы
   {"N_DATA"   ,   "D",     8,     0},; // дата начала лечения
   {"K_DATA"   ,   "D",     8,     0},; // дата окончания лечения
   {"CENA"     ,   "N",    10,     2},; // стоимость лечения
   {"CENA_1"   ,   "N",    10,     2},; // оплачиваемая сумма лечения
   {"BOLNICH"  ,   "N",     1,     0},; // больничный
   {"DATE_B_1" ,   "C",     4,     0},; // дата начала больничного
   {"DATE_B_2" ,   "C",     4,     0},; // дата окончания больничного
   {"DATE_E"   ,   "C",     4,     0},; // дата добавления листа учета
   {"KOD_P"    ,   "C",     1,     0},; // код пользователя, добавившего л/у
   {"DATE_OPL" ,   "C",     4,     0},; // дата след.визита для дисп.наблюдения
   {"SCHET"    ,   "N",     6,     0},; // код счета
   {"ISHOD"    ,   "N",     3,     0};
  }
Local human_ := {;
   {"DISPANS",  "C",16,0},; // то, что вводится по <F10>
   {"STATUS_ST","C",10,0},; // статус стоматологического пациента;проверка по собственному справочнику МО для стоматологии
   {"POVOD",    "N", 2,0},; // повод обращения
   {"TRAVMA",   "N", 2,0},; // вид травмы
   {"ID_PAC",   "C",36,0},; // код записи о пациенте;GUID пациента в листе учета;создается при добавлении записи
   {"ID_C",     "C",36,0},; // код случая оказания;GUID листа учета;создается при добавлении записи
   {"VPOLIS",   "N", 1,0},; // вид полиса (от 1 до 3);1-старый,2-врем.,3-новый;по умолчанию 1 - старый
   {"SPOLIS",   "C",10,0},; // серия полиса
   {"NPOLIS",   "C",20,0},; // номер полиса
   {"SMO",      "C", 5,0},; // реестровый номер СМО возвращается с реестром из ТФОМС, иногродние = 34
   {"OKATO",    "C", 5,0},; // ОКАТО территории страхования возвращается с реестром из ТФОМС для иногородних
   {"NOVOR",    "N", 2,0},; // признак новорожденного 0-нет, 1,2,... - порядковый номер новорожденного ребенка
   {"DATE_R2",  "D", 8,0},; // дата рождения ребенка для NOVOR > 0;
   {"POL2",     "C", 1,0},; // пол ребенка для NOVOR > 0;
   {"USL_OK",   "N", 2,0},; // условия оказания медицинской помощи по справочнику V006
   {"VIDPOM",   "N", 4,0},; // вид помощи по справочнику V008
   {"PROFIL",   "N", 3,0},; // профиль по справочнику V002
   {"IDSP",     "N", 2,0},; // код способа оплаты мед.помощи по справочнику V010
   {"NPR_MO",   "C", 6,0},; // код МО, направившего на лечение по справочнику T001
   {"FORMA14",  "C", 6,0},; // для стат.формы 14 в первых 4 байтах: планово/экстренно, доставлен скорой помощью, проведено вскрытие, установлено расхождение
   {"KOD_DIAG0","C", 6,0},; // диагноз первичный
   {"RSLT_NEW", "N", 3,0},; // результат обращения/госпитализации по справочнику V009
   {"ISHOD_NEW","N", 3,0},; // исход заболевания по справочнику V012
   {"VRACH",    "N", 4,0},; // лечащий врач (врач, закрывший талон)
   {"PRVS",     "N", 9,0},; // Специальность врача по справочнику V004, с минусом - по справочнику V015
   {"RODIT_DR", "D", 8,0},; // дата рождения родителя (для human->bolnich=2)
   {"RODIT_POL","C", 1,0},; // пол родителя (для human->bolnich=2)
   {"DATE_E2"  ,"C", 4,0},; // дата редактирования листа учета
   {"KOD_P2"   ,"C", 1,0},; // код пользователя, исправившего л/у
   {"PZTIP",    "N", 2,0},; // тип план-заказа от 1 до 99
   {"PZKOL",    "N", 6,2},; // кол-во выполненного план-заказа
   {"ST_VERIFY","N", 1,0},; // стадия проверки: 0-после редактирования; от 5 до 9-проверено
   {"KOD_UP",   "N", 7,0},; // номер предыдущей записи (в случае повторного выставления в другом счёте)
   {"OPLATA",   "N", 1,0},; // тип оплаты;0,1 или 2, 1 - в счет, 2 - ред-ие; 9-счёт не оплачен и сделана копия л/у
   {"SUMP",     "N",10,2},; // сумма, принятая к оплате СМО (ТФОМС);всего;
   {"SANK_MEK", "N",10,2},; // финансовые санкции (МЭК);суммарные;
   {"SANK_MEE", "N",10,2},; // финансовые санкции (МЭЭ);суммарные;
   {"SANK_EKMP","N",10,2},; // финансовые санкции (ЭКМП);суммарные;
   {"REESTR",   "N", 6,0},; // код (последнего) реестра;по файлу "mo_rees"
   {"REES_NUM", "N", 2,0},; // номер отправки реестра в ТФОМСа;в реестре первый раз отправили = 1, после исправления отправили второй раз = 2, и т.д.;
   {"REES_ZAP", "N", 6,0},; // номер позиции записи в реестре;поле "IDCASE" (и "ZAP") в реестре случаев
   {"SCHET_NUM","N", 2,0},; // номер отправки счёта в ТФОМС;в счёте первый раз отправили = 0, после отказа в оплате и исправления отправили второй раз = 1, и т.д.;
   {"SCHET_ZAP","N", 6,0};  // номер позиции записи в счете;поле "IDCASE" (и "ZAP") в реестре счетов;сформировать по индексу humans для schet > 0
  }
Local human_2 := {;
   {"OSL1",     "C",  6,0},; // шифр 1-ого диагноза осложнения заболевания
   {"OSL2",     "C",  6,0},; // шифр 2-ого диагноза осложнения заболевания
   {"OSL3",     "C",  6,0},; // шифр 3-ого диагноза осложнения заболевания
   {"NPR_DATE", "D",  8,0},; // Дата направления, выданного МО, указанной в NPR_MO
   {"PROFIL_K", "N",  3,0},; // профиль койки по справочнику V020 (стационар и дневной стационар)
   {"VMP",      "N",  1,0},; // 0-нет,1-да ВМП
   {"VIDVMP",   "C", 12,0},; // вид ВМП по справочнику V018
   {"METVMP",   "N",  4,0},; // метод ВМП по справочнику V019
   {"TAL_NUM",  "C", 20,0},; // Номер талона на ВМП
   {"TAL_D",    "D",  8,0},; // Дата выдачи талона на ВМП
   {"TAL_P",    "D",  8,0},; // Дата планируемой госпитализации в соответствии с талоном на ВМП
   {"P_PER",    "N",  1,0},; // Признак поступления/перевода 1-4
   {"VNR",      "N",  4,0},; // вес недоношенного ребёнка (лечится ребёнок)
   {"VNR1",     "N",  4,0},; // вес 1-го недоношенного ребёнка (лечится мать)
   {"VNR2",     "N",  4,0},; // вес 2-го недоношенного ребёнка (лечится мать)
   {"VNR3",     "N",  4,0},; // вес 3-го недоношенного ребёнка (лечится мать)
   {"PC1",      "C", 20,0},; // КСЛП (в 2017 - в первом знаке 1-3 - кол-во стентов в коронарных сосудах)
   {"PC2",      "C", 10,0},; // КИРО
   {"PC3",      "C", 10,0},; // дополнительный критерий
   {"PC4",      "C", 10,0},; //
   {"PC5",      "C", 10,0},; //
   {"PC6",      "C", 10,0},; //
   {"PN1",      "N", 10,0},; // для реабилитации пациентов после кохлеарной имплантации
   {"PN2",      "N", 10,0},; // для абортов
   {"PN3",      "N", 10,0},; // код согласования с программами SDS/ЛИС
   {"PN4",      "N", 10,0},; // двойные л/у (1-ый л/у - ссылка на 2-ой лист, (2-ой л/у - ссылка на 1-ый лист)
   {"PN5",      "N", 10,0},; // модель пациента ВМП
   {"PN6",      "N", 10,0};  //
  }
Local mo_onkna := {; // онконаправления
   {"KOD"      ,   "N",     7,     0},; // код больного
   {"NAPR_DATE",   "D",     8,     0},; // Дата направления
   {"NAPR_MO",     "C",     6,     0},; // код другого МО, куда выписано направление
   {"NAPR_V"  ,    "N",     1,     0},; // Вид направления(V028):1-к онкологу,2-на биопсию,3-на дообследование,4-для опр.тактики лечения
   {"MET_ISSL" ,   "N",     1,     0},; // Метод диагн.исследования(V029)(при NAPR_V=3):1-лаб.диагностика;2-инстр.диагностика;3-луч.диагностика;4-КТ, МРТ, ангиография
   {"U_KOD"    ,   "N",     6,     0};  // код услуги(V001)
  }
Local mo_onksl := {; // Сведения о случае лечения онкологического заболевания
   {"KOD"      ,   "N",     7,     0},; // код больного
   {"DS1_T"    ,   "N",     1,     0},; // Повод обращения(N018):0-первичное лечение;1-рецидив;2-прогрессирование;3-динам.наблюдение;4-диспанс.наблюдение;5-диагностика;6-симптоматическое лечение
   {"STAD"     ,   "N",     3,     0},; // Стадия заболевания(N002)обязательно при DS1_T = от 0 до 4
   {"ONK_T"    ,   "N",     3,     0},; // Значение Tumor(N003) обязательно для взрослых при при DS1_T=0
   {"ONK_N"    ,   "N",     3,     0},; // Значение Nodus(N004) обязательно для взрослых при при DS1_T=0
   {"ONK_M"    ,   "N",     3,     0},; // Значение Metastasis(N005) обязательно для взрослых при при DS1_T=0
   {"MTSTZ"    ,   "N",     1,     0},; // Признак выявления отдалённых метастазов	Подлежит заполнению значением 1 при выявлении отдалённых метастазов только при DS1_T=1,2
   {"B_DIAG"   ,   "N",     2,     0},; // гистология:99-не надо,98-сделана(результат получен),97-сделана(результат не получен),0-отказ,7-не показано,8-противопоказано
   {"SOD"      ,   "N",     6,     2},; // Суммарная очаговая доза	Обязательно для заполнения при проведении лучевой или химиолучевой терапии (USL_TIP=3 или USL_TIP=4)м.б.=0
   {"K_FR"     ,   "N",     2,     0},; // кол-во фракций проведения лучевой терапии	Обязательно для заполнения при проведении лучевой или химиолучевой терапии (USL_TIP=3 или USL_TIP=4)м.б.=0
   {"CRIT"     ,   "C",    10,     0},; // код схемы лек.терапии V024 (sh..., mt...)
   {"CRIT2"    ,   "C",    10,     0},; // доп.критерий (fr...)
   {"IS_ERR"   ,   "N",     1,     0},; // Признак несоблюдения схемы лекарственной терапии: 0-нормально, 1-не соблюдена
   {"WEI"      ,   "N",     5,     1},; // масса тела в кг	Обязательно для заполнения при проведении лекарственной или химиолучевой терапии (USL_TIP=2 или USL_TIP=4)
   {"HEI"      ,   "N",     3,     0},; // рост в см	Обязательно для заполнения при проведении лекарственной или химиолучевой терапии (USL_TIP=2 или USL_TIP=4)
   {"BSA"      ,   "N",     4,     2};  // площадь поверхности тела в кв.м.	Обязательно для заполнения при проведении лекарственной или химиолучевой терапии (USL_TIP=2 или USL_TIP=4)
  }
Local mo_onkdi := {; // Диагностический блок
   {"KOD"      ,   "N",     7,     0},; // код больного
   {"DIAG_DATE",   "D",     8,     0},; // Дата взятия материала для проведения диагностики
   {"DIAG_TIP" ,   "N",     1,     0},; // Тип диагностического показателя: 1 - гистологический признак; 2 - маркёр (ИГХ)
   {"DIAG_CODE",   "N",     3,     0},; // Код диагностического показателя При DIAG_TIP=1 в соответствии со справочником N007 При DIAG_TIP=2 в соответствии со справочником N010
   {"DIAG_RSLT",   "N",     3,     0},; // Код результата диагностики При DIAG_TIP=1 в соответствии со справочником N008 При DIAG_TIP=2 в соответствии со справочником N011
   {"REC_RSLT",    "N",     1,     0};  // признак получения результата диагностики 1 - получен
  }
Local mo_onkco := {; // Сведения о проведении консилиума
   {"KOD"      ,   "N",     7,     0},; // код больного
   {"PR_CONS"  ,   "N",     1,     0},; // Сведения о проведении консилиума(N019):0-отсутствует необходимость;1-определена тактика обследования;2-определена тактика лечения;3-изменена тактика лечения
   {"DT_CONS"  ,   "D",     8,     0};  // Дата проведения консилиума	Обязательно к заполнению при PR_CONS=1,2,3
  }
Local mo_onkpr := {; // Сведения об имеющихся противопоказаниях
   {"KOD"      ,   "N",     7,     0},; // код больного
   {"PROT"     ,   "N",     1,     0},; // Код противопоказания или отказа в соответствии со справочником N001
   {"D_PROT"   ,   "D",     8,     0};  // Дата регистрации противопоказания или отказа
  }
Local mo_onkus := {; // Сведения о проведённых лечениях
   {"KOD"      ,   "N",     7,     0},; // код больного
   {"USL_TIP"  ,   "N",     1,     0},; // Тип онкоуслуги в соответствии со справочником N013
   {"HIR_TIP"  ,   "N",     1,     0},; // Тип хирургического лечения При USL_TIP=1 в соответствии со справочником N014
   {"LEK_TIP_L",   "N",     1,     0},; // Линия лекарственной терапии При USL_TIP=2 в соответствии со справочником N015
   {"LEK_TIP_V",   "N",     1,     0},; // Цикл лекарственной терапии	При USL_TIP=2 в соответствии со справочником N016
   {"LUCH_TIP" ,   "N",     1,     0},; // Тип лучевой терапии	При USL_TIP=3,4 в соответствии со справочником N017
   {"PPTR" ,       "N",     1,     0};  // Признак проведения профилактики тошноты и рвотного рефлекса - указывается "1" при USL_TIP=2,4
  }
Local mo_onkle := {; // Сведения о применённых лекарственных препаратах
   {"KOD"      ,   "N",     7,     0},; // код больного
   {"REGNUM",      "C",     6,     0},; // IDD лек.препарата N020
   {"CODE_SH",     "C",    10,     0},; // код схемы лек.терапии V024
   {"DATE_INJ",    "D",     8,     0};  // дата введения лек.препарата
  }
Local mo_rhum := {; // список листов учёта в реестрах (т.к. можно попасть в несколько реестров)
   {"REESTR",   "N", 6,0},; // код реестра;по файлу "mo_rees"
   {"KOD_HUM",  "N", 7,0},; // код листа учёта по файлу "human"
   {"REES_ZAP", "N", 6,0},; // номер позиции записи в реестре;поле "IDCASE" (и "ZAP") в реестре случаев
   {"OPLATA",   "N", 1,0};  // тип оплаты;сначала 0, затем из ТФОМС 1 или 2, 1 - в счет, 2 - редактирование;
  }
Local mo_refr := {; // список отказов в реестрах и счетах по случаям и услугам
   {"TIPD",      "N", 1,0},; // тип документа 1-реестр,2-счёт
   {"KODD",      "N", 6,0},; // код реестра по "mo_rees" или счёта по "schet"
   {"TIPZ",      "N", 1,0},; // тип записи 1-по "human",2-по "human_u"
   {"KODZ",      "N", 8,0},; // номер записи по "human" или "human_u"
   {"IDENTITY",  "N", 1,0},; //
   {"REFREASON", "N", 3,0},; // код причины отказа по справочнику T005
   {"SREFREASON","C",12,0};  // код причины отказа по справочнику Q015-Q016
  }
Local mo_rak := {; // реестр актов контроля счетов
   {"AKT",      "N",  6,0},; // код акта(номер записи)
   {"KOD_XML",  "N",  6,0},; // ссылка на файл "mo_xml", присланный из ТФ или СМО
   {"CODEA",    "N", 16,0},; // код записи акта
   {"NAKT",     "C", 30,0},; // номер акта контроля
   {"DAKT",     "D",  8,0},; // дата акта контроля
   {"NSCHET",   "C", 15,0},; // номер счета (если он один в акте)
   {"KOL_SCH",  "N",  6,0},; // кол-во счетов в акте
   {"KOL_PAC",  "N",  6,0},; // кол-во пациентов в акте
   {"KOL_ERR",  "N",  6,0},; // кол-во пациентов с ошибкой в акте
   {"KONT",     "N",  2,0},; // 1-МЭК, 2-МЭЭ, 3-ЭКМП и т.д. (из справочника F006)
   {"TYPEK",    "N",  1,0},; // 1-первичный контроль, 2-повторный
   {"SKONT",    "N",  1,0};  // вид экспертизы: 0-МЭК, 1-плановая, 2-целевая
  }
Local mo_rakexp := {; // реестр актов контроля счетов + эксперты
   {"AKT",      "N",  6,0},; // код акта
   {"CODE_EXP", "C",  8,0};  // код эксперта качества мед.помощи по F004
  }
Local mo_raks := {; // реестр актов контроля + счета
   {"KOD_RAKS", "N",  6,0},; // № записи в файле (один счёт м.б. более 1 раза)
   {"AKT",      "N",  6,0},; // код акта
   {"SCHET",    "N",  6,0},; // код счета по БД schet.dbf
   {"KOL_PAC",  "N",  6,0},; // кол-во пациентов в счете
   {"KOL_ERR",  "N",  6,0},; // кол-во пациентов с ошибкой в счете
   {"PLAT",     "C",  5,0},; // плательщик (СМО или ТФ) ?????????????
   {"SUMMAV",   "N", 15,2},; // сумма МО, выставленная на оплату
   {"SUMMAP",   "N", 15,2},; // сумма, принятая к оплате СМО или ТФ
   {"SANK_MEK", "N", 15,2},; // финансовые санкции МЭК (или SANK_SUM)
   {"SANK_MEE", "N", 15,2},; // финансовые санкции МЭЭ
   {"SANK_EKMP","N", 15,2},; // финансовые санкции ЭКМП
   {"PENALTY",  "N", 15,2};  // Сумма штрафов
  }
Local mo_raksh := {; // реестр актов контроля + счета + листы учета
   {"KOD_RAKS", "N",  6,0},; // № записи в файле RAKS
   {"KOD_H",    "N",  7,0},; // код листа учета по БД "human"
   {"OPLATA",   "N",  1,0},; // тип оплаты;1-оплата,2-отказ,3-част.отказ,4-восстановление
   {"SUMP",     "N", 10,2},; // сумма, принятая к оплате СМО (ТФОМС);;
   {"REFREASON","N",  3,0},; // код причины отказа (по-старому - 2018 год)
   {"SANK_MEK", "N", 10,2},; // финансовые санкции (МЭК) (или SANK_IT)
   {"SANK_MEE", "N", 10,2},; // финансовые санкции (МЭЭ)
   {"SANK_EKMP","N", 10,2},; // финансовые санкции (ЭКМП)
   {"PENALTY",  "N", 15,2},; // Сумма штрафов
   {"IS_REPEAT","N",  1,0},; // 0-нет, 1-повторное выставление листа учёта
   {"DATE_REP", "D",  8,0},; // дата оплаты (экспертизы)
   {"NEXT_KOD", "N",  7,0};  // ссылка на повторно выставленный лист учета
  }
Local mo_raksherr := {; // реестр актов контроля + счета + листы учета + ошибки (по-новому - 2019 год)
   {"KOD_RAKSH","N",  8,0},; // № записи в файле RAKSH
   {"S_CODE",   "C", 36,0},; // идентификатор санкции
   {"S_SUM",    "N", 10,2},; // сумма уменьшения оплаты
   {"REFREASON","N",  3,0},; // код причины отказа (частичной) оплаты
   {"PENALTY",  "N", 15,2},; // Сумма штрафов
   {"SL_ID",    "C", 36,0},; // идентификатор случая (в законченном случае)
   {"SL_ID2",   "C", 36,0};  // идентификатор второго случая (в законченном случае)
  }
Local mo_os := {; // оплата, санкции, результат экспертизы счетов
   {"KOD",      "N",  7,0},; // код листа учета по БД "human"
   {"KOD_XML",  "N",  6,0},; // ссылка на файл "mo_xml", присланный из ТФ или СМО
   {"AKT",      "C", 15,0},; // номер акта
   {"DATE_OPL", "D",  8,0},; // дата оплаты (экспертизы);;
   {"OPLATA",   "N",  1,0},; // тип оплаты;1-оплата,2-отказ,3-част.отказ,4-восстановление
   {"IS_REPEAT","N",  1,0},; // 0-нет, 1-для оплаты=2 - повторное выставление листа учёта
   {"NEXT_KOD", "N",  7,0},; // ссылка на повторно выставленный листа учета
   {"SUMP",     "N", 10,2},; // сумма, принятая к оплате СМО (ТФОМС);;
   {"SANK_MEK", "N", 10,2},; // финансовые санкции (МЭК);;
   {"SANK_MEE", "N", 10,2},; // финансовые санкции (МЭЭ);;
   {"SANK_EKMP","N", 10,2},; // финансовые санкции (ЭКМП);;
   {"REFREASON","N",  3,0};   // код причины отказа (частичной оплаты);по справочнику F014
  }
Local mo_rpd := {; // реестр ПД
   {"PD",       "N",  6,0},; // код ПД
   {"KOD_XML",  "N",  6,0},; // ссылка на файл "mo_xml", присланный из ТФ или СМО
   {"T_PD",     "N",  1,0},; // 1-платёжное поручение,2-письмо об уменьшении задолженности
   {"N_PD",     "C", 25,0},; // номер ПД
   {"D_PD",     "D",  8,0},; // дата ПД
   {"NSCHET",   "C", 15,0},; // номер счета (если он один в ПД)
   {"KOL_SCH",  "N",  6,0},; // кол-во счетов в ПД
   {"KOL_PAC",  "N",  6,0},; // кол-во пациентов в ПД
   {"S_PD",     "N", 15,2},; // сумма ПД
   {"S_ALL",    "N", 15,2},; // сумма оплаты
   {"KBK",      "C", 20,0};  // КБК
  }
Local mo_rpds := {; // реестр ПД + счета
   {"KOD_RPDS", "N",  6,0},; // № записи в файле (один счёт м.б. более 1 раза)
   {"PD",       "N",  6,0},; // код ПД
   {"SCHET",    "N",  6,0},; // код счета по БД schet.dbf
   {"KOL_PAC",  "N",  6,0},; // кол-во пациентов в счете
   {"PLAT",     "C",  5,0},; // плательщик (СМО или ТФ) ?????????????
   {"S_SCH",    "N", 15,2};  // суммы оплаты счёта в ПД
  }
Local mo_rpdsh := {; // реестр ПД + счета + листы учета
   {"KOD_RPDS", "N",  6,0},; // № записи в файле RPDS
   {"KOD_H",    "N",  7,0},; // код листа учета по БД "human"
   {"S_SL",     "N", 11,2};  // сумма оплаты случая в ПД
  }
Local human_u := {;
   {"KOD"      ,   "N",     7,     0},; // код больного
   {"DATE_U"   ,   "C",     4,     0},; // дата оказания услуги
   {"U_KOD"    ,   "N",     4,     0},; // код услуги
   {"U_CENA"   ,   "N",    10,     2},; // цена услуги
   {"U_KOEF"   ,   "N",     5,     3},; // коэф-т индексации услуги
   {"KOD_VR"   ,   "N",     4,     0},; // код врача
   {"KOD_AS"   ,   "N",     4,     0},; // код ассистента
   {"KOL"      ,   "N",     3,     0},; // количество услуг
   {"STOIM"    ,   "N",    10,     2},; // итоговая стоимость услуги
   {"IS_EDIT"  ,   "N",     2,     0},; // редактировалась ли сумма
   {"OTD"      ,   "N",     3,     0},; // код отделения
   {"KOL_1"    ,   "N",     3,     0},; // оплачиваемое количество услуг
   {"STOIM_1"  ,   "N",    10,     2},; // оплачиваемая стоимость услуги
   {"KOL_RCP"  ,   "N",     2,     0};
  }
Local human_u_ := {;
   {"date_u2",     "C", 4,0},; // дата окончания оказания услуги;dtoc4()
   {"kod_diag",    "C", 6,0},; // диагноз;перенести из основного диагноза
   {"ZF",          "C",30,0},; // зубная формула;для стоматологий
   {"ID_U",        "C",36,0},; // код записи об оказанной услуге;GUID оказанной услуги;создается при добавлении записи
   {"PROFIL",      "N", 3,0},; // профиль;по справочнику V002
   {"PRVS",        "N", 9,0},; // Специальность врача по справочнику V004, с минусом - по справочнику V015
   {"PZTIP",       "N", 1,0},; // тип план-заказа от 1 до 4
   {"PZKOL",       "N", 6,2},; // кол-во выполненного план-заказа
   {"OPLATA",      "N", 1,0},; // тип оплаты;от 1 до 4;
   {"REES_ZAP",    "N", 8,0},; // номер записи в реестре услуг файла реестра;"порядковый номер записи об услуге для всего Реестра случаев (поле ""IDSERV"")";
   {"SCHET_ZAP",   "N", 6,0};  // номер позиции записи в реестре услуг счета;"поле ""IDSERV"" в реестре счетов";сформировать по индексу humans для schet > 0 для всех услуг
  }
Local mo_hu := {;
   {"KOD"      ,   "N",     7,     0},; // код больного
   {"DATE_U"   ,   "C",     4,     0},; // дата оказания услуги
   {"date_u2"  ,   "C",     4,     0},; // дата окончания оказания услуги
   {"U_KOD"    ,   "N",     6,     0},; // код услуги
   {"U_CENA"   ,   "N",    10,     2},; // цена услуги
   {"KOD_VR"   ,   "N",     4,     0},; // код врача
   {"KOD_AS"   ,   "N",     4,     0},; // код ассистента
   {"OTD"      ,   "N",     3,     0},; // код отделения
   {"KOL_1"    ,   "N",     3,     0},; // оплачиваемое количество услуг
   {"STOIM_1"  ,   "N",    10,     2},; // оплачиваемая стоимость услуги
   {"kod_diag" ,   "C",     6,     0},; // диагноз;перенести из основного диагноза
   {"ZF"       ,   "C",    30,     0},; // зубная формула (для стоматологий)/ID услуги ЛИС
   {"ID_U"     ,   "C",    36,     0},; // код записи об оказанной услуге;GUID оказанной услуги;создается при добавлении записи
   {"PROFIL"   ,   "N",     3,     0},; // профиль;по справочнику V002
   {"PRVS"     ,   "N",     9,     0},; // Специальность врача по справочнику V004, с минусом - по справочнику V015
   {"USL_TIP"  ,   "N",     1,     0},; // Тип онкоуслуги в соответствии со справочником N013
   {"HIR_TIP"  ,   "N",     1,     0},; // Тип хирургического лечения При USL_TIP=1 в соответствии со справочником N014
   {"LEK_TIP_L",   "N",     1,     0},; // Линия лекарственной терапии При USL_TIP=2 в соответствии со справочником N015
   {"LEK_TIP_V",   "N",     1,     0},; // Цикл лекарственной терапии	При USL_TIP=2 в соответствии со справочником N016
   {"LUCH_TIP" ,   "N",     1,     0},; // Тип лучевой терапии	При USL_TIP=3,4 в соответствии со справочником N017
   {"PZTIP"    ,   "N",     1,     0},; // тип план-заказа от 1 до 4
   {"PZKOL"    ,   "N",     6,     2},; // SOD - Суммарная очаговая доза - При USL_TIP=3,4
   {"OPLATA"   ,   "N",     1,     0},; // тип оплаты;от 1 до 4;
   {"REES_ZAP" ,   "N",     8,     0},; // номер записи в реестре услуг файла реестра;"порядковый номер записи об услуге для всего Реестра случаев (поле ""IDSERV"")";
   {"SCHET_ZAP",   "N",     6,     0};  // номер позиции записи в реестре услуг счета;"поле ""IDSERV"" в реестре счетов";сформировать по индексу humans для schet > 0 для всех услуг
  }
Local schet := {;
   {"KOD",        "N",      6,      0},;
   {"NOMER_S",    "C",     10,      0},;
   {"PDATE",      "C",      4,      0},;
   {"VZROS_REB",  "N",      1,      0},; // 0-взрослый, 1 -ребенок, 2-подросток
   {"RAB_NERAB",  "N",      1,      0},; // 0-работающий, 1-неработающий, 2-нераб.дети
   {"MI_GIT"   ,  "N",      1,      0},; // 0-город, 1-область, 2-иногородний
   {"RAJON_GIT",  "N",      2,      0},; // код района места жительства
   {"MEST_INOG",  "N",      1,      0},; // 0-город, 1-область, 2-иногородний
   {"RAJON",      "N",      2,      0},; // код района финансирования
   {"VID_MP",     "N",      1,      0},; // вид медицинской помощи
   {"KOL",        "N",      4,      0},; // кол-во и сумма
   {"SUMMA",      "N",     13,      2},; //     включенных в счет
   {"LPU",        "N",      3,      0},;
   {"KOMU",       "N",      1,      0},;
   {"STR_CRB",    "N",      2,      0},;
   {"ISMO",       "C",      6,      0},; // код иногородней СМО
   {"MG",         "C",      2,      0},; // месяц/год окончания лечения иногороднего
   {"KOL_OST",    "N",      4,      0},; // кол-во и сумма
   {"SUMMA_OST",  "N",     13,      2},; //     оставшихся еще неоплаченными
   {"KOL_OPL",    "N",      4,      0},; // кол-во и сумма
   {"SUMMA_OPL",  "N",     13,      2},; //     действительно оплаченных
   {"FLAG_OPL",   "N",      1,      0},; // 0 - неопл., 1 - част., 2 - полностью
   {"ZA_SMO",     "N",      2,      0} ; // ЗаСМО
  }
Local schet_ := {;
   {"IFIN",      "N",  2,0},; // источник финансирования;1-ТФОМС(СМО), 2-ФФОМС, 0 прочее;попытаться конвертировать
   {"IS_MODERN", "N",  2,0},; // является модернизацией?;0-нет, 1-да для IFIN=1;для MEST_INOG=5 и VID_MP=6
   {"IS_DOPLATA","N",  2,0},; // является доплатой?;0-нет, 1-да для IFIN=1 или 2;для MEST_INOG=6,7
   {"BUKVA",     "C",  1,0},; // буква на конце счета
   {"CODE",      "N", 12,0},; // уникальный код;номер записи+mem_beg_rees
   {"NSCHET",    "C", 15,0},; // номер счета;;перенести из поля nomer_s
   {"DSCHET",    "D",  8,0},; // дата формирования счета;;перенести из поля c4tod(pdate)
   {"SMO",       "C",  5,0},; // код получателя;реестровый номер СМО или 34 для иногородних;
   {"NYEAR",     "N",  4,0},; // отчетный год;;
   {"NMONTH",    "N",  2,0},; // отчетный месяц;;
   {"NN",        "N",  4,0},; // порядковый номер пакета по СМО в данном отчетном периоде (5 знаков с лидирующими нулями)
   {"NAME_XML",  "C", 26,0},; // имя XML-файла без расширения (и ZIP-архива)
   {"KOD_XML",   "N",  6,0},; // ссылка на файл "mo_xml"
   {"DATE_OUT",  "D",  8,0},; // дата отправки в ТФОМС;;
   {"NUMB_OUT",  "N",  2,0},; // номер отправки в ТФОМС;сколько раз всего записывали файл на носитель;
   {"XML_REESTR","N",  6,0},; // ссылка на файл РЕЕСТРА в "mo_xml"
   {"NREGISTR",  "N",  1,0},; // отметка о регистрации 0-да,1-ещё нет,2-отказ
   {"DREGISTR",  "D",  8,0},; // дата регистрации счета в ТФОМС
   {"SREGISTR",  "C", 20,0},; // причина отказа в регистрации счета в ТФОМС
   {"SUMMAP",    "N", 15,2},; // сумма, принятая к оплате СМО (ТФОМС);всего;
   {"SANK_MEK",  "N", 15,2},; // финансовые санкции (МЭК);суммарные;
   {"SANK_MEE",  "N", 15,2},; // финансовые санкции (МЭЭ);суммарные;
   {"SANK_EKMP", "N", 15,2};  // финансовые санкции (ЭКМП);суммарные;
  }
Local schetd := {;
   {"KOD",       "N",  6,0},;
   {"KOD2",      "N",  6,0};
  }
Local mo_rees := {; // Реестр сведений об оказанной медицинской помощи, направляемый в ТФОМС "mo_rees"
   {"KOD",         "N", 6,0},; // код реестра;номер записи;
   {"CODE",        "N", 8,0},; // уникальный код;номер записи+mem_beg_rees
   {"NSCHET",      "N", 6,0},; // номер реестра сведений;уникален для отчетных периодов, принадлежащих одному календарному году;
   {"DSCHET",      "D", 8,0},; // дата реестра сведений;;
   {"NYEAR",       "N", 4,0},; // отчетный год;;
   {"NMONTH",      "N", 2,0},; // отчетный месяц;;
   {"NN",          "N", 5,0},; // порядковый номер пакета;номер по порядку пакета в данном отчетном периоде (2 знака с лидирующим нулем);
   {"NAME_XML",    "C",26,0},; // имя XML-файла без расширения (и ZIP-архива)
   {"KOD_XML",     "N", 6,0},; // ссылка на файл "mo_xml"
   {"DATE_OUT",    "D", 8,0},; // дата отправки в ТФОМС;;
   {"NUMB_OUT",    "N", 2,0},; // номер отправки в ТФОМС;сколько раз всего записывали файл на носитель;
   {"KOL",         "N", 6,0},; // количество пациентов в реестре;;
   {"SUMMA",       "N",15,2};  // сумма случаев в реестре;;
  }
Local mo_xml := {; // Список отосланных и принятых XML-файлов "mo_xml"
   {"KOD",         "N", 6,0},; // код;номер записи
   {"FNAME",       "C",26,0},; // имя файла без расширения (и ZIP-архива)
   {"FNAME2",      "C",26,0},; // имя второго файла без расширения
   {"DFILE",       "D", 8,0},; // дата создания файла
   {"TFILE",       "C", 5,0},; // время создания файла
   {"DREAD",       "D", 8,0},; // дата чтения/записи
   {"TREAD",       "C", 5,0},; // время чтения/записи
   {"TIP_IN",      "N", 2,0},; // тип принимаемого файла;3-ФЛК,4-СП,5-РАК, пишем в каталог XML_TF
   {"TIP_OUT",     "N", 2,0},; // тип высылаемого файла;1-реестр,2-счет, пишем в каталог XML_MO
   {"DWORK",       "D", 8,0},; // дата обработки файла;
   {"TWORK1",      "C", 5,0},; // время начала обработки;
   {"TWORK2",      "C", 5,0},; // время окончания обработки;
   {"KOL1",        "N", 6,0},; // количество пациентов (oplata=1)
   {"KOL2",        "N", 6,0},; // количество пациентов (oplata=2)
   {"ANSREESTR",   "C", 1,0},; // номер ответа на реестр (для реестра СП и ТК)
   {"REESTR",      "N", 6,0},; // код реестра (отсылаемого или обработанного ТФОМС)
   {"SCHET",       "N", 6,0};  // код счета (отсылаемого или обработанного СМО)
  }
Local mo_hod := {; // Список отосланных ходатайств
   {"KOD",         "N", 6,0},; // код;номер записи
   {"NYEAR",       "N", 4,0},; // отчетный год
   {"NMONTH",      "N", 2,0},; // отчетный месяц
   {"NN",          "N", 4,0},; // порядковый номер пакета в календарном году
   {"KOL1",        "N", 4,0},; // количество пациентов Капитал
   {"KOL2",        "N", 4,0},; // количество пациентов Согаз
   {"KOL3",        "N", 4,0},; // количество пациентов прочих
   {"FNAME",       "C",26,0},; // имя ZIP-архива без расширения
   {"DFILE",       "D", 8,0},; // дата создания файла
   {"TFILE",       "C", 5,0},; // время создания файла
   {"DATE_OUT",    "D", 8,0},; // дата отправки в ТФОМС
   {"NUMB_OUT",    "N", 2,0};  // номер отправки в ТФОМС;сколько раз всего записывали файл на носитель;
  }
Local mo_hod_k := {; // cписок карточек пациентов в отосланных ходатайствах
   {"KOD",         "N", 6,0},; // код по файлу "mo_hod"
   {"KOD_K",       "N", 7,0};  // код по картотеке
  }
Local slugba := {;
   {"SHIFR",      "N",      3,      0},;
   {"NAME",       "C",     40,      0};
  }
Local uslugi := {;
   {"kod",      "N",  4,0},;
   {"kod_up",   "N",  4,0},;
   {"name",     "C", 65,0},;
   {"shifr",    "C", 10,0},;
   {"shifr1",   "C", 10,0},;
   {"slugba",   "N",  3,0},;
   {"cena",     "N", 10,2},;
   {"cena_d",   "N", 10,2},;
   {"pcena",    "N", 10,2},;
   {"pcena_d",  "N", 10,2},;
   {"dms_cena", "N", 10,2},;
   {"pnds",     "N", 10,2},;
   {"pnds_d",   "N", 10,2},;
   {"is_nul",   "L",  1,0},;
   {"is_nulp",  "L",  1,0},;
   {"gruppa",   "N",  1,0},;
   {"zf",       "N",  1,0},;
   {"full_name","C",255,0},;
   {"PROFIL",   "N",  3,0};  // профиль;по справочнику V002
  }
Local uslugi1 := {;
  {"kod",     "N", 4,0},;   // код услуги
  {"shifr1",  "C",10,0},;
  {"date_b",  "D", 8,0};    // дата начала действия
 }
Local mo_su := {;
   {"kod",     "N", 6,0},;
   {"name",    "C",65,0},;
   {"shifr",   "C",10,0},;
   {"shifr1",  "C",20,0},;
   {"tip",     "N", 1,0},;  // 5-для стомат.услуг 2016 года
   {"slugba",  "N", 3,0},;
   {"zf",      "N", 1,0},;
   {"PROFIL",  "N", 3,0};  // профиль;по справочнику V002
  }
Local uslugi_k := {;
   {"shifr", "C",10,0},;
   {"name",  "C",60,0},;
   {"KOD_VR","N", 4,0},; // код врача
   {"KOD_AS","N", 4,0};  // код ассистента
  }
Local uslugi1k := {;
   {"shifr",  "C",10,0},;
   {"shifr1", "C",10,0};  // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  }
Local ns_usl := {;
   {"name",   "C",30,0},;
   {"kol",    "N", 6,0};
  }
Local ns_usl_k := {;
   {"kod",    "N", 6,0},;
   {"shifr",  "C",10,0};
  }
Local usl_otd := {;
   {"kod",   "N",  4,0},;
   {"otdel", "C",255,0};
  }
Local usl_uva := {;
    {"SHIFR"    ,   "C",    10,     0},; // шифр услуги (шаблон)
    {"KOD_VR"   ,   "N",     1,     0},; // не вводить код врача ?
    {"KOD_AS"   ,   "N",     1,     0},; // не вводить код ассистента ?
    {"KOD_VRN"  ,   "N",     1,     0},; // не вводить код направившего врача ?
    {"KOD_ASN"  ,   "N",     1,     0}}  // не вводить код направившего ассистента ?
Local uch_usl := {;
  {"kod",     "N",4,0},;   // код услуги
  {"vkoef_v", "N",7,4},;   // врач - УЕТ для взрослого
  {"akoef_v", "N",7,4},;   // асс. - УЕТ для взрослого
  {"vkoef_r", "N",7,4},;   // врач - УЕТ для ребенка
  {"akoef_r", "N",7,4},;   // асс. - УЕТ для ребенка
  {"koef_v",  "N",7,4},;   // итого УЕТ для взрослого
  {"koef_r",  "N",7,4};    // итого УЕТ для ребенка
 }
Local uch_usl1 := {;
  {"kod",     "N",4,0},;   // код услуги
  {"vkoef_v", "N",7,4},;   // врач - УЕТ для взрослого
  {"akoef_v", "N",7,4},;   // асс. - УЕТ для взрослого
  {"vkoef_r", "N",7,4},;   // врач - УЕТ для ребенка
  {"akoef_r", "N",7,4},;   // асс. - УЕТ для ребенка
  {"koef_v",  "N",7,4},;   // итого УЕТ для взрослого
  {"koef_r",  "N",7,4},;   // итого УЕТ для ребенка
  {"date_b",  "D",8,0};    // дата начала действия
 }
Local uch_pers := {;
  {"kod",     "N",4,0},;
  {"god",     "N",4,0},;
  {"mes",     "N",2,0},;
  {"m_trud",  "N",6,1};
 }
Local u_usl_5 := {;    // группы услуг для способа оплаты = 5
  {"tip",     "N", 2,0},;  // 1-врач(ОМС), 2-асс.(ОМС), 3-врач(пл.), 4-асс.(пл.), 5-м/с(пл.), 6-сан.(пл.)
  {"usl_1",   "C",10,0},;  // шифр начальной услуги
  {"usl_2",   "C",10,0},;  // шифр конечной услуги
  {"_usl_1",  "C",20,0},;  // преобразованный шифр начальной услуги
  {"_usl_2",  "C",20,0},;  // преобразованный шифр конечной услуги
  {"procent", "N", 5,2},;  // процент оплаты
  {"procent2","N", 5,2},;  // процент для оплаты без медсестры (м.б. = 0)
  {"razryad", "N", 2,0},;  // разряд (м.б. = 0)
  {"otdal",   "N", 1,0};   // признак отдаленности (м.б. = 1)
 }
Local u_usl_7 := {;    // группы услуг для способа оплаты = 7
  {"name",      "C",  20,0},;  // наименование группы услуг
  {"variant",   "N",   1,0},;  // вариант расчета (0,1)
  {"v_uet_oms", "N",   6,2},;  // стоимость УЕТ ОМС для врача
  {"a_uet_oms", "N",   6,2},;  // стоимость УЕТ ОМС для ассистента
  {"v_uet_pl",  "N",   6,2},;  // стоимость УЕТ пл.услуг для врача
  {"a_uet_pl",  "N",   6,2},;  // стоимость УЕТ пл.услуг для ассистента
  {"v_uet_dms", "N",   6,2},;  // стоимость УЕТ ДМС для врача
  {"a_uet_dms", "N",   6,2},;  // стоимость УЕТ ДМС для ассистента
  {"usl_ins",   "C", 110,0},;  // массив настроек группы услуг
  {"usl_del",   "C", 110,0};   // массив настроек группы услуг
 }
// для стоматологий
Local kart_delz := {; // удалённые зубы
   {"KOD"      ,   "N",     7,     0},; // код по картотеке
   {"ZF"       ,   "N",     2,     0},; // зубная формула
   {"DATE_U"   ,   "C",     4,     0}}  // дата оказания услуги
Local kart_st := {;
   {"KOD"      ,   "N",     7,     0},; // код по картотеке
   {"ZF"       ,   "N",     2,     0},; // зубная формула
   {"KOD_DIAG" ,   "C",     5,     0},; // шифр болезни
   {"TIP_BD"   ,   "N",     1,     0},; // тип БД (1-human_u,2-hum_p_u,3-hum_o_u,4-human,5-hum_p,6-hum_o,7-mo_hu)
   {"REC_BD"   ,   "N",     8,     0},; // номер записи в этой БД
   {"DATE_U"   ,   "C",     4,     0},; // дата оказания услуги
   {"U_KOD"    ,   "N",     4,     0},; // код услуги
   {"KOD_VR"   ,   "N",     4,     0}}  // код врача
Local humanst := {;
   {"TIP_BD"   ,   "N",     1,     0},; // тип БД (1-human_u,2-hum_p_u,3-hum_o_u,4-human,5-hum_p,6-hum_o)
   {"REC_BD"   ,   "N",     8,     0},; // номер записи в этой БД
   {"KOD_DIAG" ,   "C",     5,     0},; // шифр 1-ой осн.болезни
   {"ZF"       ,   "C",    30,     0}}  // зубная формула
Local mo_uch := {; // Учреждения "mo_uch"
   {"KOD",       "N", 3,0},; // код;;из "l_ucher"
   {"NAME",      "C",30,0},; // наименование;сократили с 70 до 30;"из ""l_ucher"""
   {"SHORT_NAME","C", 5,0},; // сокращенное наименование;;
   {"IS_TALON",  "N", 1,0},; // учреждение работает со статталоном?;0-нет, 1-да;оставить 0, или поставить 1 в зависимости от массива UCHER_TALON (см. c_allpub.prg строка 273)
   {"IDCHIEF",   "N", 4,0},; // номер записи в файле mo_pers. Ссылка на руководителя учреждения
   {"ADDRESS",  "C",150,0},; // адрес нахождения учреждения
   {"COMPET",    "C",40,0},; // документ утверждения руководителя
   {"DBEGIN",    "D", 8,0},; // дата начала действия;;поставить 01.01.1993
   {"DEND",      "D", 8,0};  // дата окончания действия;;поставить 31.12.2000, или оставить пустым в зависимости от массива UCHER_ARRAY (см. b_init.prg)
  }
Local mo_otd := {; // Отделения "mo_otd"
   {"KOD",       "N", 3,0},; // код
   {"NAME",      "C",30,0},; // наименование
   {"KOD_LPU",   "N", 3,0},; // код учреждения
   {"SHORT_NAME","C", 5,0},; // сокращенное наименование
   {"DBEGIN",    "D", 8,0},; // дата начала действия в задаче ОМС
   {"DEND",      "D", 8,0},; // дата окончания действия в задаче ОМС
   {"DBEGINP",   "D", 8,0},; // дата начала действия в задаче "Платные услуги"
   {"DENDP",     "D", 8,0},; // дата окончания действия в задаче "Платные услуги"
   {"DBEGINO",   "D", 8,0},; // дата начала действия в задаче "Ортопедия"
   {"DENDO",     "D", 8,0},; // дата окончания действия в задаче "Ортопедия"
   {"PLAN_VP",   "N", 6,0},; // план врачебных приемов
   {"PLAN_PF",   "N", 6,0},; // план профилактик
   {"PLAN_PD",   "N", 6,0},; // план приемов на дому
   {"PROFIL",    "N", 3,0},; // профиль для данного отделения по справочнику V002, по умолчанию прописывать его в лист учета и в услугу
   {"PROFIL_K",  "N", 3,0},; // профиль койки для данного отделения по справочнику V020, по умолчанию прописывать его в лист учета
   {"IDSP",      "N", 2,0},; // код способа оплаты мед.помощи для данного отделения по справочнику V010
   {"IDUMP",     "N", 2,0},; // код условий оказания медицинской помощи
   {"IDVMP",     "N", 2,0},; // код видов медицинской помощи
   {"TIP_OTD",   "N", 2,0},; // тип отд-ия: 1-приёмный покой
   {"KOD_PODR",  "C",25,0},; // код подразделения по паспорту ЛПУ
   {"TIPLU",     "N", 2,0},; // тип листа учёта: 0-стандарт,1-СМП,2-ДДС,3-ДВН, и т.д.
   {"CODE_DEP",  "N", 3,0},; // код отделения по кодировке ТФОМС из справочника SprDep - 2018 год
   {"ADRES_PODR","N", 2,0},; // код удалённого подразделения по массиву glob_arr_podr - 2017 год
   {"ADDRESS",  "C",150,0},; // адрес нахождения учреждения
   {"CODE_TFOMS","C", 6,0},; // код подразделения по кодировке ТФОМС - 2017 год
   {"KOD_SOGL",  "N",10,0},; // код согласования одного отделения с программой SDS
   {"SOME_SOGL","C",255,0};  // код согласования нескольких отделений с программой SDS
  }
Local mo_uchvr := {; // привязка участковых врачей к участкам
    {"uch",   "N",2,0},;
    {"is",    "N",2,0},;
    {"vrach", "N",4,0},;
    {"vrachv","N",4,0},;
    {"vrachd","N",4,0};
  }
Local mo_pers := {; // Персонал "mo_pers"
   {"KOD",       "N", 4,0},; // код
   {"UCH",       "N", 3,0},; // код учреждения
   {"OTD",       "N", 3,0},; // код отделения
   {"NAME_DOLJ", "C",30,0},; // наименование должности
   {"KATEG",     "N", 1,0},; // код категории
   {"FIO",       "C",50,0},; // ФИО
   {"STAVKA",    "N", 4,2},; // ставка
   {"VID",       "N", 1,0},; // вид работы;0-основной, 1-совмещение
   {"VR_KATEG",  "N", 1,0},; // код врачебной категории "kateg"
   {"DOLJKAT",   "C",15,0},; // наименование должности по категории
   {"D_KATEG",   "D", 8,0},; // дата подтверждения категории
   {"SERTIF",    "N", 1,0},; // наличие сертификата;0-нет, 1-да
   {"D_SERTIF",  "D", 8,0},; // дата подтверждения сертификата
   {"PRVS",      "N", 9,0},; // Специальность врача по справочнику V004
   {"PRVS_NEW",  "N", 4,0},; // Специальность врача по справочнику V015
   {"PROFIL",    "N", 3,0},; // профиль для данной специальности по справочнику V002
   {"TAB_NOM",   "N", 5,0},; // табельный номер
   {"SVOD_NOM",  "N", 5,0},; // сводный табельный номер (вводится, если у человека несколько таб.номеров, используется в сводной статистике по сотруднику)
   {"KOD_DLO",   "N", 5,0},; // код врача для выписки рецептов по ДЛО
   {"UROVEN",    "N", 2,0},; // уровень оплаты (от 1 до 99)
   {"OTDAL",     "N", 1,0},; // признак отдаленности;0-нет, 1-да
   {"SNILS",     "C",11,0},; // СНИЛС врача
   {"DBEGIN",    "D", 8,0},; // дата начала действия
   {"DEND",      "D", 8,0};  // дата окончания действия
  }
// приёмный покой
Local mo_kpred := {;  // справочник представителей (при картотеке)
   {"KOD"      ,   "N",     7,     0},; // код (номер записи по БД kartotek)
   {"NN"       ,   "N",     1,     0},; // номер представителя
   {"FIO"      ,   "C",    50,     0},; // Ф.И.О.
   {"STATUS"   ,   "N",     2,     0},; // Cтатус сопр.лица: 0-прочий,1-родитель,2-опекун
   {"IS_UHOD"  ,   "N",     1,     0},; // 0-нет, 1-по уходу за больным
   {"IS_FOOD"  ,   "N",     1,     0},; // 0-нет, 1-с питанием
   {"DATE_R"   ,   "D",     8,     0},; // дата рождения
   {"ADRES"    ,   "C",    50,     0},; // адрес
   {"MR_DOL"   ,   "C",    50,     0},; // место работы
   {"PHONE"    ,   "C",    11,     0},; // контактный телефон
   {"PASPORT"  ,   "C",    15,     0},; // паспортные данные
   {"POLIS"    ,   "C",    25,     0};  // данные о страховом полисе
  }
Local mo_ppst := {;  // справочник - столы
   {"NAME"     ,   "C",    10,     0},;
   {"TIP"      ,   "N",     1,     0};  // 0-стационар, 1-дн.стационар
  }
Local mo_ppadd := {;  // перевод из отделения в отделение (приёмный покой)
   {"KOD"      ,   "N",     7,     0},; // код (номер записи по БД pp_pokoj)
   {"KOD_H"    ,   "N",     7,     0};  // код по БД human
  }
Local mo_ppper := {;  // перевод из отделения в отделение (приёмный покой)
   {"KOD"      ,   "N",     7,     0},; // код (номер записи по БД pp_pokoj)
   {"N_DATA"   ,   "D",     8,     0},; // дата перевода
   {"N_TIME"   ,   "C",     5,     0},; // время перевода
   {"LPU"      ,   "N",     3,     0},; // код учреждения
   {"OTD"      ,   "N",     3,     0},; // код отделения (в какое отд-ие переведён)
   {"STOL"     ,   "N",     3,     0},; // стол
   {"DATE_VVOD",   "D",     8,     0},; // дата ввода данных
   {"KOD_P"    ,   "C",     1,     0};  // код пользователя
  }
Local mo_ppdia := {;  // длинные строки в базе приёмного покоя
   {"KOD"      ,   "N",     7,     0},; // код (номер записи по БД pp_pokoj)
   {"TIP"      ,   "N",     1,     0},; // тип строки (1-диаг.напр.учреждения,2-диаг.приёмного отд-ия,3-побочное действие лекарств)
   {"NAME"     ,   "C",   100,     0};  // содержание строки
  }
Local mo_pp := {;  // база данных приёмного покоя
   {"KOD"      ,   "N",     7,     0},; // код (номер записи)
   {"KOD_K"    ,   "N",     7,     0},; // код по картотеке
   {"TIP_H"    ,   "N",     1,     0},; // пока 1-human,2-hum_p,3-...
   {"KOD_H"    ,   "N",     7,     0},; // код по БД human
   {"REG_LECH" ,   "N",     1,     0},; // 1-стационарно, 2,3,4-дневной стационар
   {"UCH_DOC"  ,   "C",    10,     0},; // номер медицинской карты
   {"NOVOR"    ,   "N",     2,     0},; // признак новорожденного;0-нет, 1,2 - порядковый номер новорожденного ребенка
   {"DATE_R2"  ,   "D",     8,     0},; // дата рождения ребенка;для NOVOR > 0;
   {"POL2"     ,   "C",     1,     0},; // пол ребенка;для NOVOR > 0;
   {"RAB_NERAB",   "N",    10,     0},; // социальный статус
   {"KATEGOR"  ,   "N",     2,     0},; // от 1 до ...
   {"KOMU"     ,   "N",     1,     0},; // от 1 до 5
   {"STR_CRB"  ,   "N",     2,     0},; // код стр.компании, комитета и т.п.
   {"VID_OPL"  ,   "N",     3,     0},; // вид оплаты (1-ОМС,2-ДМС,3-бюджет,4-платные,5-другое)
   {"KEM_NAPR" ,   "C",     6,     0},; // кем направлен (из справочника ЛПУ)
   {"KEM_DOST" ,   "N",     2,     0},; // кем доставлен (внутр.справочник)
   {"KOD_VR"   ,   "N",     4,     0},; // код врача
   {"SOST_OP"  ,   "N",     1,     0},; // 0-нет,1-алкогольное,2-наркотическое
   {"GOSPIT0"  ,   "N",     1,     0},; // 1-первичн.,2-повторн.
   {"GOSPIT1"  ,   "N",     1,     0},; // 0-в плановом порядке,1-по экстренн.показаниям
   {"GOSPIT2"  ,   "N",     1,     0},; // 1-6часов,2-7\24часа,3-24часа\и\более
   {"TRAVMA"   ,   "N",     2,     0},; // тип травмы (внутр.справочник)
   {"LPU"      ,   "N",     3,     0},; // код учреждения
   {"OTD"      ,   "N",     3,     0},; // код отделения
   {"STOL"     ,   "N",     3,     0},; // стол
   {"N_DATA"   ,   "D",     8,     0},; // дата поступления
   {"N_TIME"   ,   "C",     5,     0},; // время поступления
   {"IS_GOSPIT",   "N",     1,     0},; // 0-госпитализирован, 1-нет
   {"PR_GOSPIT",   "N",     2,     0},; // почему не госпитализирован (внутр.справочник)
   {"G_DATA"   ,   "D",     8,     0},; // дата госпитализации
   {"G_TIME"   ,   "C",     5,     0},; // время госпитализации
   {"K_DATA"   ,   "D",     8,     0},; // дата окончания лечения
   {"K_TIME"   ,   "C",     5,     0},; // время выписки
   {"KOJKO_DNI",   "N",     3,     0},; // продолжительность госпитализации
   {"ISHOD1"   ,   "N",     1,     0},; // исход
   {"ISHOD2"   ,   "N",     1,     0},; // исход
   {"BOLNICH"  ,   "N",     1,     0},; // больничный (0-нет,1-да,2-по уходу)
   {"DATE_RODIT",  "D",     8,     0},; // дата рождения родителя
   {"POL_RODIT",   "C",     1,     0},; // пол родителя
   {"DATE_B_1" ,   "D",     8,     0},; // дата начала больничного
   {"DATE_B_2" ,   "D",     8,     0},; // дата окончания больничного
   {"DATE_VVOD",   "D",     8,     0},; // дата добавления листа учета
   {"KOD_P"    ,   "C",     1,     0};  // код пользователя
  }
// платные услуги
Local hum_p := {;
   {"KOD_K"    ,   "N",     7,     0},; // код по картотеке
   {"N_KVIT"   ,   "N",     5,     0},; // номер квитанционной книжки
   {"KV_CIA"   ,   "N",     6,     0},; // номер квитанции
   {"KOD_DIAG" ,   "C",     5,     0},; // шифр 1-ой осн.болезни
   {"SOPUT_B1" ,   "C",     5,     0},; // шифр 1-ой сопутствующей болезни
   {"SOPUT_B2" ,   "C",     5,     0},; // шифр 2-ой сопутствующей болезни
   {"SOPUT_B3" ,   "C",     5,     0},; // шифр 3-ой сопутствующей болезни
   {"SOPUT_B4" ,   "C",     5,     0},; // шифр 4-ой сопутствующей болезни
   {"SOPUT_B5" ,   "C",     5,     0},; // шифр 5-ой сопутствующей болезни
   {"LPU"      ,   "N",     3,     0},; // код учреждения
   {"OTD"      ,   "N",     3,     0},; // код отделения
   {"N_DATA"   ,   "D",     8,     0},; // дата начала лечения
   {"K_DATA"   ,   "D",     8,     0},; // дата окончания лечения
   {"KOD_VR"   ,   "N",     4,     0},; // код направившего врача
   {"CENA"     ,   "N",    10,     2},; // стоимость лечения
   {"TIP_USL"  ,   "N",     1,     0},; // 0-платная, 1-д/страх., 2-в/зачет
   {"PR_SMO"   ,   "N",     6,     0},; // код предприятия / добровольного СМО
   {"D_POLIS"  ,   "C",    25,     0},; // полис по добровольному страх-ию
   {"GP_NOMER" ,   "C",    16,     0},; // № гарантийного письма по ДМС
   {"GP_DATE"  ,   "D",     8,     0},; // дата гарантийного письма по ДМС
   {"GP2NOMER" ,   "C",    16,     0},; // № 2-го гарантийного письма по ДМС
   {"GP2DATE"  ,   "D",     8,     0},; // дата 2-го гарантийного письма по ДМС
   {"PDATE"    ,   "C",     4,     0},; // дата оплаты услуги
   {"DATE_VOZ" ,   "C",     4,     0},; // дата возврата
   {"SUM_VOZ"  ,   "N",    10,     2},; // сумма возврата
   {"SBANK"    ,   "N",    10,     2},; // сумма, оплаченная по банковской карте
   {"DATE_CLOSE",  "D",     8,     0},; // дата закрытия листа учета
   {"IS_KAS"   ,   "N",     1,     0},; // касса(0-без кассы,1-чек,2-нет чека)
   {"PLAT_FIO" ,   "C",    40,     0},; // ФИО плательщика
   {"PLAT_INN" ,   "C",    12,     0},; // ИНН плательщика
   {"FR_DATA"  ,   "C",     4,     0},; // дата записи  //10.05
   {"FR_TIME"  ,   "N",     5,     0},; // время записи //10.05
   {"KOD_OPER" ,   "N",     3,     0},; // код оператора //10.2011
   {"FR_zavod" ,   "C",    16,     0},; // зав.номер кассы //08.2017
   {"FR_TIP"   ,   "N",     1,     0},; // тип кассы  01.17
   {"VZFR_DATA",   "C",     4,     0},; // возврат дата записи  //01.17
   {"VZFR_TIME",   "N",     5,     0},; // возврат время записи  //01.17
   {"VZKOD_OPER",  "N",     3,     0},; // возврат код оператора //01.17
   {"VZFR_zavod",  "C",    16,     0},; // возврат зав.номер кассы //08.17
   {"VZFR_TIP" ,   "N",     1,     0},; // возврат тип кассы  //01.17
   {"FR_TIPKART",  "N",     1,     0},; // ТИП банковской карты  01.17
   {"I_POST",      "C",    30,     0};  // электронная почта 01.17
  }
Local hum_p_u := {;
   {"KOD"      ,   "N",     7,     0},; // код листа учета (по БД hum_p)
   {"DATE_U"   ,   "C",     4,     0},; // дата оказания услуги
   {"U_KOD"    ,   "N",     4,     0},; // код услуги
   {"U_CENA"   ,   "N",    10,     2},; // цена услуги
   {"U_KOEF"   ,   "N",     5,     3},; // коэф-т индексации услуги
   {"KOD_VR"   ,   "N",     4,     0},; // код врача
   {"KOD_AS"   ,   "N",     4,     0},; // код ассистента
   {"MED1"     ,   "N",     4,     0},; // код медсестры
   {"MED2"     ,   "N",     4,     0},; // код медсестры
   {"MED3"     ,   "N",     4,     0},; // код медсестры
   {"SAN1"     ,   "N",     4,     0},; // код санитарки
   {"SAN2"     ,   "N",     4,     0},; // код санитарки
   {"SAN3"     ,   "N",     4,     0},; // код санитарки
   {"KOL"      ,   "N",     3,     0},; // количество услуг
   {"STOIM"    ,   "N",    10,     2},; // итоговая стоимость услуги
   {"T_EDIT"   ,   "N",     1,     0},; // редактировалась ли сумма
   {"OTD"      ,   "N",     3,     0};  // код отделения
  }
Local plat_ms := {;
   {"TIP",        "N",      1,      0},;
   {"TAB_NOM",    "N",      5,      0},;
   {"FIO",        "C",     20,      0};
  }
Local plat_vz := {;
   {"TIP",        "N",      1,     0},; // 1-добр.страх., 2-взаимозачет
   {"PR_SMO",     "N",      6,     0},; // код СМО/предприятия
   {"KOD_K",      "N",      7,     0},; // код по картотеке
   {"DATE_OPL",   "D",      8,     0},; // дата оплаты
   {"TIP_OPL" ,   "N",      1,     0},; // тип оплаты (0-б/н,1-нал,2-вз/з)
   {"SUMMA_OPL",  "N",     10,     2},; // сумма оплаты
   {"PRIM"    ,   "C",     15,     0};  // примечание
  }
Local pu_cena := {;
   {"kod_date",   "N",      4,      0},;
   {"kod_usl",    "N",      4,      0},;
   {"pcena",      "N",     10,      2},;
   {"pcena_d",    "N",     10,      2},;
   {"dms_cena",   "N",     10,      2};
  }
Local hum_plat := {;
   {"KOD"      ,   "N",     7,     0},; // код листа учета (по БД hum_p)
   {"ADRES"    ,   "C",    50,     0},; // Адрес плательщика
   {"PASPORT"  ,   "C",    15,     0},; // Паспорт плательщика
   {"I_POST"   ,   "C",    30,     0},; // электронная почта 01.17
   {"PHONE"    ,   "C",    11,     0};  // телефон
  }
Local _payments := {; // файл содержащий инфрмацию о платежах платных услуг
  { 'IDCONTR',    'N', 7,  0 }, ;    // ID договора, recno() из hum_p.dbf
  { 'PAYMENT',    'N', 1,  0 }, ;    // тип платежа, 0-приход, 1-возврат прихода (по умолчанию приход)
  { 'TYPEPAYER',  'N', 1,  0 }, ;    // тип плательщика
  { 'IDPAYER',    'N', 7,  0 }, ;    // id плательщика
  { 'DATE',       'D', 8,  0 }, ;    // дата платежа/возврата
  { 'TIME',       'N', 5,  0 }, ;    // время платежа/возврата
  { 'NUMBER',     'N', 6,  0 }, ;    // номер чека, платежного документа
  { 'TYPESIGN',   'N', 1,  0 }, ;    // признак способа расчета (по умолчанию - предоплата 100%)
  { 'ITEMSIGN',   'N', 2,  0 }, ;    // признак предмета расчета (по умолчанию - услуга)
  { 'TOTAL',      'N',10,  2 }, ;    // сумма платежа/возврата (Всего)
  { 'TOTALBANK',  'N',10,  2 }, ;    // сумма платежа/возврата банковское (б/н, карты и т.п.)
  { 'FRNUMBER',   'C',16,  0 }, ;    // заводской номер ККТ, при оплате/возврате через ККТ
  { 'IDUSER',     'N', 4,  0 } ;     // ID-пользователя проводившего оплату/возврат
}
Local _payer := { ;
  { 'NAME',       'C', 50,    0 }, ;        // Ф.И.О. плательщика
  { 'VID_UD',     'N',  2,    0 }, ;        // вид удостоверения личности
  { 'SER_UD',     'C', 10,    0 }, ;        // серия удостоверения личности
  { 'NOM_UD',     'C', 20,    0 }, ;        // номер удостоверения личности
  { 'KEMVYD',     'N',  6,    0 }, ;        // кем выдан документ из справочника s_kemvyd
  { 'KOGDAVYD',   'D',  8,    0 }, ;        // когда выдан документ
  { 'INN',        'C', 12,    0 }, ;        // ИНН плательщика
  { 'ADDRESS',    'C',100,    0 }, ;        // адрес регистрации плательщика
  { 'PHONE',      'C', 10,    0 }, ;        // телефон плательщика
  { 'IDSPRAV',    'N',  7,    0 } ;         // ID ссылки на выданную справку
}
// ортопедия
Local diag_ort := {;
   {"SHIFR"    ,   "C",     6,     0},; // шифр диагноза
   {"NAME"     ,   "C",    40,     0},;
   {"col_f39"  ,   "N",     2,     0}}  // № колонки в форме тип 39
Local orto_uva := {;
   {"SHIFR"    ,   "C",    10,     0},; // шифр услуги (шаблон)
   {"KOD_VR"   ,   "N",     1,     0},; // не вводить код врача ?
   {"KOD_AS"   ,   "N",     1,     0},; // не вводить код зубного техника ?
   {"KOD_MS"   ,   "N",     1,     0}}  // не вводить код медсестры ?
Local hum_o := {;
   {"KOD_K"    ,   "N",     7,     0},; // код по картотеке
   {"NAR_Z"    ,   "N",     5,     0},; // номер наряда-заказа
   {"DATA"     ,   "D",     8,     0},; // дата наряда-заказа
   {"LPU"      ,   "N",     3,     0},; // код учреждения
   {"OTD"      ,   "N",     3,     0},; // код отделения
   {"TIP_USL"  ,   "N",     1,     0},; // 0-платная, 1-бесплатная, 2-взаимозачет, 3-д/страх.
   {"PR_SMO"   ,   "N",     6,     0},; // код предприятия / добровольного СМО
   {"UCH_DOC"  ,   "C",    10,     0},; // вид и номер учетного документа
   {"KOD_VR"   ,   "N",     4,     0},; // код врача
   {"KOD_AS"   ,   "N",     4,     0},; // код зубного техника
   {"KOD_DIAG" ,   "C",     6,     0},; // шифр болезни
   {"KOD_DIAG2",   "C",     6,     0},; // шифр 2-ой осн.болезни
   {"KOD_DIAG3",   "C",     6,     0},; // шифр 3-ой осн.болезни
   {"KOD_DIAG4",   "C",     6,     0},; // шифр 3-ой осн.болезни
   {"KOD_DIAG5",   "C",     6,     0},; // шифр 3-ой осн.болезни
   {"KOD_DIAG6",   "C",     6,     0},; // шифр 3-ой осн.болезни
   {"KOD_DIAG7",   "C",     6,     0},; // шифр 3-ой осн.болезни
   {"N_DATA"   ,   "D",     8,     0},; // дата начала лечения
   {"K_DATA"   ,   "D",     8,     0},; // дата окончания лечения
   {"CENA"     ,   "N",    10,     2},; // стоимость лечения
   {"CENA_OPL" ,   "N",    10,     2},; // оплаченная стоимость лечения
   {"KOL_POS"  ,   "N",     2,     0},; // количество посещений
   {"N_OCH"    ,   "C",    10,     0},; // номер очереди (для бесплатных больных)
   {"PRICH_POL",   "N",     3,     0},; // причины поломки протеза
   {"KOL_MOSTP",   "N",     1,     0},; // количество мостовидных протезов
   {"KOL_CELNL",   "N",     1,     0},; // в т.ч. цельнолитых
   {"NDIAG"    ,   "C",    10,     0},; // орто.диагнозы   (для 39)
   {"VPROTEZ"  ,   "N",     1,     0},; // вид протеза     (для 39)
   {"NPROTEZ"  ,   "N",     1,     0},; // кол-во протезов (для 39)
   {"KOL_PR1"  ,   "N",     1,     0},; // количество протезов Т1
   {"KOL_PR2"  ,   "N",     1,     0},; // количество протезов Т2
   {"KOL_PR3"  ,   "N",     1,     0},; // количество протезов Т3
   {"KOL_PR4"  ,   "N",     1,     0},; // количество протезов Т4
   {"KOL_PR5"  ,   "N",     1,     0},; // количество протезов Т5
   {"KOL_PR6"  ,   "N",     1,     0},; // количество протезов Т6
   {"PRIM"     ,   "C",    15,     0},; // примечание
   {"PLAT_FIO" ,   "C",    40,     0},; // ФИО плательщика
   {"PLAT_INN" ,   "C",    12,     0};  // ИНН плательщика
  }
Local hum_o_o := {;
   {"KOD"      ,   "N",     7,     0},; // код больного (листа учёта)
   {"PDATE"    ,   "C",     4,     0},; // дата оплаты
   {"N_KVIT"   ,   "N",     5,     0},; // номер квитанционной книжки
   {"KV_CIA"   ,   "N",     6,     0},; // номер квитанции
   {"TIP_OPL"  ,   "N",     1,     0},; // тип оплаты (0-аванс,1-ок.опл.,2-напыление)
   {"TIP_USL"  ,   "N",     1,     0},; // 0-платная, 1-бесплатная, 2-взаимозачет, 3-д/страх.
   {"PR_SMO"   ,   "N",     6,     0},; // код предприятия / добровольного СМО
   {"D_POLIS"  ,   "C",    25,     0},; // полис по добровольному страх-ию
   {"GP_NOMER" ,   "C",    16,     0},; // № гарантийного письма по ДМС
   {"GP_DATE"  ,   "D",     8,     0},; // дата гарантийного письма по ДМС
   {"CENA_OPL" ,   "N",    10,     2},; // сумма оплаты
   {"SBANK"    ,   "N",    10,     2},; // сумма, оплаченная по банковской карте
   {"PRIM"     ,   "C",    15,     0},; // примечание
   {"KOD_REG"  ,   "N",     4,     0},; // код регистратора
   {"IS_KAS"   ,   "N",     1,     0},; // касса (0-без кассы,1-чек,2-нет чека)
   {"FR_DATA"  ,   "C",     4,     0},; // дата записи  //30.09
   {"FR_TIME"  ,   "N",     5,     0},; // время записи //30.09
   {"DATE_VOZ" ,   "C",     4,     0},; // дата возврата  // 05.10.12
   {"SUM_VOZ"  ,   "N",    10,     2},; // сумма возврата // 05.10.12
   {"FR_zavod" ,   "C",    16,     0},; // зав.номер кассы //08.2017
   {"FR_TIP"   ,   "N",     1,     0},; // тип кассы  01.17
   {"VZFR_DATA",   "C",     4,     0},; // возврат дата записи  //01.17
   {"VZFR_TIME",   "N",     5,     0},; // возврат время записи  //01.17
   {"VZKOD_OPER",  "N",     3,     0},; // возврат код оператора //01.17
   {"VZFR_zavod",  "C",    16,     0},; // возврат зав.номер кассы //08.17
   {"VZFR_TIP" ,   "N",     1,     0},; // возврат тип кассы  //01.17
   {"FR_TIPKART",  "N",     1,     0},; // ТИП банковской карты  01.17
   {"I_POST",      "C",    30,     0};  // электронная почта 01.17
  }
Local hum_o_u := {;
   {"KOD"      ,   "N",     7,     0},; // код больного
   {"TIP_USL"  ,   "N",     1,     0},; // 0-платная, 1-бесплатная, 2-взаимозачет, 3-д/страх.
   {"DATE_U"   ,   "C",     4,     0},; // дата оказания услуги
   {"U_KOD"    ,   "N",     4,     0},; // код услуги
   {"U_CENA"   ,   "N",    10,     2},; // цена услуги
   {"U_KOEF"   ,   "N",     5,     3},; // коэф-т индексации услуги
   {"KOD_VR"   ,   "N",     4,     0},; // код врача
   {"KOD_AS"   ,   "N",     4,     0},; // код зубного техника
   {"KOD_MS"   ,   "N",     4,     0},; // код медсестры
   {"KOL"      ,   "N",     7,     3},; // количество услуг
   {"STOIM"    ,   "N",    10,     2},; // итоговая стоимость услуги
   {"T_EDIT"   ,   "N",     1,     0},; // редактировалась ли сумма
   {"OTD"      ,   "N",     3,     0}}  // код отделения
Local hum_orpl := {;
   {"KOD"      ,   "N",     7,     0},; // код листа учета (по БД hum_o)
   {"ADRES"    ,   "C",    50,     0},; // Адрес плательщика
   {"PASPORT"  ,   "C",    15,     0},; // Паспорт плательщика
   {"I_POST"   ,   "C",    30,     0},;  // электронная почта 01.17
   {"PHONE"    ,   "C",    11,     0};  // телефон
  }
// касса МО
Local kas_pl := {;
   {"KOD_K"    ,   "N",     7,     0},; // код по картотеке
   {"N_CHEK"   ,   "N",     8,     0},; // номер чека
   {"SMENA"    ,   "N",     1,     0},; // номер смены
   {"K_DATA"   ,   "D",     8,     0},; // дата оплаты (начала лечения)
   {"CENA"     ,   "N",    10,     2},; // стоимость лечения
   {"SBANK"    ,   "N",    10,     2},; // сумма, оплаченная по банковской карте
   {"FR_DATA"  ,   "C",     4,     0},; // дата записи  //10.05
   {"FR_TIME"  ,   "N",     5,     0},; // время записи //10.05
   {"KOD_OPER" ,   "N",     3,     0},; // код оператора
   {"FR_zavod" ,   "C",    16,     0},; // зав.номер кассы //08.2017
   {"FR_TIP"   ,   "N",     1,     0},; // тип кассы  01.17
   {"VZFR_DATA",   "C",     4,     0},; // возврат дата записи  //01.17
   {"VZFR_TIME",   "N",     5,     0},; // возврат время записи  //01.17
   {"VZKOD_OPER",  "N",     3,     0},; // возврат код оператора //01.17
   {"VZFR_zavod",  "C",    16,     0},; // возврат зав.номер кассы //08.17
   {"VZFR_TIP" ,   "N",     1,     0},; // возврат тип кассы  //01.17
   {"FR_TIPKART",  "N",     1,     0},; // ТИП банковской карты  01.17
   {"I_POST",      "C",    30,     0};  // электронная почта 01.17
  }
Local kas_pl_u := {;
   {"KOD"      ,   "N",     7,     0},; // код по БД "kas_pl"
   {"KOD_VR"   ,   "N",     4,     0},; // код врача
   {"U_KOD"    ,   "N",     4,     0},; // код услуги
   {"U_CENA"   ,   "N",    10,     2},; // цена услуги
   {"KOL"      ,   "N",     3,     0},; // количество услуг
   {"STOIM"    ,   "N",    10,     2}}  // итоговая стоимость услуги
Local kas_ort := {;
   {"KOD_K"    ,   "N",     7,     0},; // код по картотеке
   {"VID"      ,   "N",     1,     0},; // вид наряда (услуги)
   {"TIP_N"    ,   "N",     1,     0},; // тип (1-сложный,2-простой,0-редактирование)
   {"NOMER_N"  ,   "N",     6,     0},; // номер наряда
   {"YEAR_N"   ,   "N",     4,     0},; // год открытия наряда
   {"KOD_VR"   ,   "N",     4,     0},; // код врача
   {"KOD_TEX"  ,   "N",     4,     0},; // код техника
   {"N_CHEK"   ,   "N",     8,     0},; // номер чека
   {"SMENA"    ,   "N",     1,     0},; // номер смены
   {"k_data"   ,   "D",     8,     0},; // дата оплаты (открытия наряда)
   {"CENA"     ,   "N",    10,     2},; // сумма оплаты
   {"SUMMA"    ,   "N",    10,     2},; // стоимость лечения
   {"O_SUMMA"  ,   "N",    10,     2},; // итоговая стоимость (с б/пл.усл.)
   {"SBANK"    ,   "N",    10,     2},; // сумма, оплаченная по банковской карте
   {"FR_DATA"  ,   "C",     4,     0},; // дата записи  //10.05
   {"FR_TIME"  ,   "N",     5,     0},; // время записи //10.05
   {"KOD_OPER" ,   "N",     3,     0},; // код оператора
   {"FR_zavod" ,   "C",    16,     0},; // зав.номер кассы //08.2017
   {"FR_TIP"   ,   "N",     1,     0},; // тип кассы  01.17
   {"VZFR_DATA",   "C",     4,     0},; // возврат дата записи  //01.17
   {"VZFR_TIME",   "N",     5,     0},; // возврат время записи  //01.17
   {"VZKOD_OPER",  "N",     3,     0},; // возврат код оператора //01.17
   {"VZFR_zavod",  "C",    16,     0},; // возврат зав.номер кассы //08.17
   {"VZFR_TIP" ,   "N",     1,     0},; // возврат тип кассы  //01.17
   {"FR_TIPKART",  "N",     1,     0},; // ТИП банковской карты  01.17
   {"I_POST",      "C",    30,     0};  // электронная почта 01.17
  }
Local kas_ortu := {;
   {"KOD"      ,   "N",     7,     0},; // код по БД "kas_ort"
   {"VID"      ,   "N",     1,     0},; // вид услуги
   {"U_KOD"    ,   "N",     4,     0},; // код услуги
   {"U_CENA"   ,   "N",    10,     2},; // цена услуги
   {"KOL"      ,   "N",     3,     0},; // количество услуг
   {"STOIM"    ,   "N",    10,     2}}  // итоговая стоимость услуги
Local kas_usl := {; // список услуг, по которым разрешается смена цены
   {"U_KOD"    ,   "N",     4,     0}}  // код услуги
// КЭК
Local kek_h := {; // "mo_kekh"
   {"KOD_LU"   ,   "N",     7,     0},; // код (номер записи) в human.dbf
   {"IST_BOL"  ,   "C",    10,     0},; // вид и номер учетного документа
   {"USL_OK"   ,   "N",     1,     0},; // условия оказания (1-3)
   {"OTD"      ,   "N",     3,     0},; // код отделения
   {"VRACH"    ,   "N",     4,     0},; // код врача
   {"K_DATA"   ,   "D",     8,     0},; // дата окончания лечения
   {"POVOD_EKS",   "N",     1,     0},; // повод экспертизы
   {"KOJKO_DNI",   "N",     3,     0},; // продолжительность госпитализации
   {"IST_DOHOD",   "N",     2,     0},; // источник средств существования
   {"GITEL"    ,   "N",     1,     0},; // житель 1-6
   {"DIAG_POST",   "C",    60,     0},; // диагноз при поступлении
   {"DIAG_PRED",   "C",    60,     0},; // диагноз предварительный
   {"KOD_DIAG" ,   "C",     5,     0},; // шифр осн.болезни
   {"DIAG_OSN" ,   "C",    60,     0},; // основной диагноз
   {"DIAG_OSL" ,   "C",    80,     0},; // осложнение основного
   {"DIAG_SOP" ,   "C",    80,     0},; // сопутствующий
   {"DIAG_KON" ,   "C",    80,     0},; // конкурирующий
   {"PLAN_EKS" ,   "N",     1,     0},; // 1-плановая,2-экстренная
   {"SOGLASIE" ,   "N",     1,     0},; // 1-4
   {"PUTI_POS" ,   "N",     1,     0},; // 1-3
   {"POST_ST"  ,   "N",     1,     0},; // 1-2
   {"GOSPIT"   ,   "N",     1,     0},; // 1-3
   {"ISHOD"    ,   "N",     1,     0},; // исход 1-5
   {"SHIFR3"   ,   "C",     8,     0},; // Критерии качества по группам заболеваний (состояний)
   {"KOL_EKS"  ,   "C",     3,     0};  // кол-во экспертиз
  }
Local kek_eks  := {; // "mo_keke"
   {"KOD",        "N",      7,      0},;   // код человека
   {"TIP_EKS",    "N",      1,      0},;   // тип эксперта 1-3
   {"KOD_EKS",    "N",      3,      0},;   // код эксперта
   {"DATE_EKS",   "D",      8,      0},;   // дата экспертизы
   {"EO_1",       "N",      1,      0},;   // 1-4
   {"EO_2",       "N",      1,      0},;   // 1-4
   {"EO_3_POST",  "C",      1,      0},;   // А,Б,В
   {"EO_3_PRED",  "C",      1,      0},;   // А,Б,В
   {"EO_3_OSN",   "C",      1,      0},;   // А,Б,В
   {"EO_4",       "N",      1,      0},;   // 1-2
   {"EO_4_2_1",   "C",      1,      0},;   // А,Б,В
   {"EO_4_2_2",   "C",      1,      0},;   // А,Б,В
   {"EO_5",       "N",      1,      0},;   // 1-4
   {"EO_6",       "N",      1,      0},;   // 1-4
   {"EO_7",       "N",      1,      0},;   // 1-2
   {"EO_8",       "N",      1,      0},;   // 1-4
   {"EO_9",       "N",      1,      0},;   // 1-5
   {"EO_10",      "N",      1,      0},;   // 1-6
   {"EO_11_L_1",  "C",      1,      0},;   // А-Г
   {"EO_11_L_2",  "C",      1,      0},;   // А-Г
   {"EO_11_L_3",  "C",      1,      0},;   // А-Г
   {"EO_11_L_4",  "C",      1,      0},;   // А-Г
   {"EO_11_L_5",  "C",      1,      0},;   // А-Г
   {"EO_11_I_1",  "C",      1,      0},;   // А-Г
   {"EO_11_I_2",  "C",      1,      0},;   // А-Г
   {"EO_11_I_3",  "C",      1,      0},;   // А-Г
   {"EO_11_I_4",  "C",      1,      0},;   // А-Г
   {"EO_11_R_1",  "C",      1,      0},;   // А-Г
   {"EO_11_R_2",  "C",      1,      0},;   // А-Г
   {"EO_11_R_3",  "C",      1,      0},;   // А-Г
   {"EO_11_R_4",  "C",      1,      0},;   // А-Г
   {"EO_12",      "N",      1,      0},;   // 1-3
   {"EO_13",      "N",      1,      0},;   // 1-4
   {"EO_14",      "N",      1,      0},;   // 1-3
   {"EO_15",      "N",      1,      0},;   // 1-3
   {"EO_16",      "N",      1,      0},;   // 1-3
   {"EO_17",      "N",      1,      0},;   // 1-5
   {"EO_18",      "N",      1,      0},;   // 1-3
   {"EO_19",      "N",      1,      0},;   // 1-3
   {"EO_20",      "N",      1,      0},;   // 1-4
   {"EO_21",      "N",      1,      0},;   // 1-3
   {"EO_22",      "N",      1,      0},;   // 1-2
   {"EO_23",      "N",      1,      0},;   // 1-3
   {"EO_24",      "N",      1,      0},;   // 1-5
   {"EO_25",      "N",      1,      0},;   // 1-3
   {"EO_26",      "N",      1,      0},;   // 1-2
   {"EO_27",      "N",      1,      0},;   // 1-2
   {"EO_28",      "C",     70,      0},;   // паталогоанатомический диагноз
   {"EO_29",      "N",      1,      0},;   // 1-4
   {"EO_30",      "N",      1,      0},;   // 1-3
   {"N_ZAKLUCH",  "N",      2,      0},;   // кол-во строк заключения
   {"O_A",        "N",      5,      3},;   // оценка A
   {"O_B",        "N",      5,      3},;   // оценка B
   {"O_C",        "N",      5,      3},;   // оценка C
   {"O_D",        "N",      5,      3},;   // оценка D
   {"O_K",        "N",      5,      3},;   // оценка K
   {"O_P",        "N",      5,      3},;   // оценка P
   {"O_R",        "N",      5,      3},;   // оценка R
   {"O_E",        "N",      5,      3},;   // оценка E
   {"O_ALL",      "N",      1,      0},;   // итоговая оценка (2,3,4,5)
   {"p_zapol",    "N",      3,      0} ;   // процент заполнения
  }
Local kek_eksz := {; // "mo_kekez"
   {"KOD",        "N",      7,      0},;   // номер записи kek_eks
   {"STROKE",     "N",      2,      0},;
   {"NAME",       "C",     65,      0};
  }
//
Local mo_kfio := {; // отдельно ФИО
   {"KOD"      ,   "N",     7,     0},; // код человека по kartotek.dbf
   {"FAM"      ,   "C",    40,     0},;
   {"IM"       ,   "C",    40,     0},;
   {"OT"       ,   "C",    40,     0}}
Local inog_smo := {; // иногородние страховые компании
   {"KOD"      ,   "N",     7,     0},; // код человека
   {"SMO_NAME" ,   "C",   100,     0}}  // наименование иногородней СМО
Local stacDDS := {; // стационары, из которых проходит диспансеризация детей-сирот
   {"NAME"   ,"C",250,0},;
   {"ADRES"  ,"C",250,0},;
   {"vedom"  ,"N",  1,0},; // Ведомственная принадлежность: 0-органы здравоохранения, 1-образования, 2-социальной защиты, 3-другое
   {"fed_kod","N", 10,0}}  // код по фед.справочнику
Local school := {; // образовательные учреждения
   {"name"   ,"C", 30,0},;
   {"fname"  ,"C",250,0},;
   {"adres"  ,"C",250,0},;
   {"tip"    ,"N",  1,0},; // 0-школы,1-детсады,2-ПТУ
   {"fed_kod","N", 10,0}}  // код по фед.справочнику
Local mo_hdisp := {;
   {"KOD"      ,   "N",     7,     0},; // код по БД human
   {"KS"       ,   "N",     2,     0},; // код строки
   {"NAME"     ,   "C",    78,     0}}  // содержание строки
//
f_init_r01() // инициализация всех файлов инф.сопровождения по диспансеризации
f_init_d01() // инициализация всех файлов инф.сопровождения по диспансерному наблюдению
if !is_cur_dir .or. hb_FileExists(dir_server+"base1"+sdbf)
  reconstruct(dir_server+"base1",base1,,,.t.)
  reconstruct(dir_server+"mo_oper",mo_oper,"index_base('mo_oper')",,.t.)
  reconstruct(dir_server+"mo_opern",mo_opern,"index_base('mo_opern')",,.t.)
endif
// простые справочники
reconstruct(dir_server+"s_adres",{{"name","C",40,0}},"index_base('s_adres')",,.t.)
reconstruct(dir_server+"s_kemvyd",{{"name","C",150,0}},"index_base('s_kemvyd')",,.t.)
reconstruct(dir_server+"s_mr",{{"name","C",50,0}},,,.t.)
reconstruct(dir_server+"mo_kfio",mo_kfio,,,.t.)
reconstruct(dir_server+"mo_kismo",inog_smo,,,.t.)
reconstruct(dir_server+"mo_hismo",inog_smo,,,.t.)
reconstruct(dir_server+"mo_stdds",stacDDS,,,.t.)
reconstruct(dir_server+"mo_schoo",school,,,.t.)
// услуги
reconstruct(dir_server+"slugba",slugba,"index_base('slugba')",,.t.)
reconstruct(dir_server+"mo_su",mo_su,"index_base('mo_su')",,.t.)
reconstruct(dir_server+"uslugi",uslugi,"index_base('uslugi')",,.t.)
reconstruct(dir_server+"uslugi1",uslugi1,"index_base('uslugi1')",,.t.)
reconstruct(dir_server+"uch_usl",uch_usl,"index_base('uch_usl')",,.t.)
reconstruct(dir_server+"uch_usl1",uch_usl1,"index_base('uch_usl1')",,.t.)
reconstruct(dir_server+"uch_pers",uch_pers,"index_base('uch_pers')",,.t.)
reconstruct(dir_server+"uslugi_k",uslugi_k,"index_base('uslugi_k')",,.t.)
reconstruct(dir_server+"uslugi1k",uslugi1k,"index_base('uslugi1k')",,.t.)
reconstruct(dir_server+"ns_usl",ns_usl,,,.t.)
reconstruct(dir_server+"ns_usl_k",ns_usl_k,"index_base('ns_usl_k')",,.t.)
reconstruct(dir_server+"usl_uva",usl_uva,"index_base('usl_uva')",,.t.)
reconstruct(dir_server+"usl_otd",usl_otd,"index_base('usl_otd')",,.t.)
reconstruct(dir_server+"u_usl_5",u_usl_5,,,.t.)
reconstruct(dir_server+"u_usl_7",u_usl_7,,,.t.)
// для стоматологий
reconstruct(dir_server+"kartdelz",kart_delz,"index_base('kartdelz')",,.t.)
reconstruct(dir_server+"kart_st",kart_st,"index_base('kart_st')",,.t.)
reconstruct(dir_server+"humanst",humanst,"index_base('humanst')",,.t.)
//
reconstruct(dir_server+"kartotek",kartotek,"index_base('kartotek')","картотеке",.t.)
reconstruct(dir_server+"kartote_",kartotek_,,"картотеке1",.t.)
reconstruct(dir_server+"kartote2",kartotek2,,"картотеке2",.t.)
reconstruct(dir_server+"kart_et",_kart_et,,"картотеке",.t.)
reconstruct(dir_server+"kart_inv",_kart_inv,,"картотеке",.t.)
reconstruct(dir_server+"kart_etk",_kart_etk,,"картотеке",.t.)
reconstruct(dir_server+"k_prim1",k_prim1,"index_base('k_prim1')","картотеке",.t.)
reconstruct(dir_server+"mo_regi",mo_regi,"index_base('mo_regi')","регистрации",.t.)
reconstruct(dir_server+"mo_kpred",mo_kpred,"index_base('mo_kpred')",,.t.)
reconstruct(dir_server+"mo_kinos",mo_kinos,"index_base('mo_kinos')",,.t.)
reconstruct(dir_server+"msek",msek,"index_base('msek')","МСЭК",.t.)
reconstruct(dir_server+"p_priem",{{"NAME","C",25,0}},,,.t.)
reconstruct(dir_server+"mo_kartp",mo_kartp,"index_base('mo_kartp')",,.t.)
reconstruct(dir_server+"mo_krtp",mo_krtp,,,.t.)
reconstruct(dir_server+"mo_krte",mo_krte,,,.t.)
reconstruct(dir_server+"mo_krtr",mo_krtr,,,.t.)
reconstruct(dir_server+"mo_krto",mo_krto,,,.t.)
reconstruct(dir_server+"mo_krtf",mo_krtf,,,.t.)
//
reconstruct(dir_server+"mo_sprav",spr_OMS,,,.t.)
reconstruct(dir_server+"human",human,"index_base('human')","пролеченным больным",.t.)
reconstruct(dir_server+"human_",human_,,"пролеченным больным1",.t.)
reconstruct(dir_server+"human_2",human_2,,"пролеченным больным2",.t.)
reconstruct_double_sl()
reconstruct(dir_server+"mo_rhum",mo_rhum,,"реестру случаев",.t.)
reconstruct(dir_server+"mo_refr",mo_refr,"index_base('mo_refr')","списку отказов",.t.)
reconstruct(dir_server+"mo_os",mo_os,,"оплате и санкциям",.t.)
reconstruct(dir_server+"mo_hu",mo_hu,"index_base('mo_hu')","пролеченным больным5",.t.)
reconstruct(dir_server+"human_u",human_u,"index_base('human_u')","пролеченным больным3",.t.)
reconstruct(dir_server+"human_u_",human_u_,,"пролеченным больным4",.t.)
reconstruct(dir_server+"mo_hdisp",mo_hdisp,,"диспансеризациям",.t.)
reconstruct(dir_server+"mo_hod",mo_hod,,"ходатайствам",.t.)
reconstruct(dir_server+"mo_hod_k",mo_hod_k,,"ходатайствам1",.t.)
reconstruct(dir_server+"mo_rak",mo_rak,,"актам контроля",.t.)
reconstruct(dir_server+"mo_rakexp",mo_rakexp,,"актам контроля4",.t.)
reconstruct(dir_server+"mo_raks",mo_raks,,"актам контроля2",.t.)
reconstruct(dir_server+"mo_raksh",mo_raksh,,"актам контроля3",.t.)
reconstruct(dir_server+"mo_raksherr",mo_raksherr,,"актам контроля5",.t.)
reconstruct(dir_server+"mo_rpd",mo_rpd,,"платёжным документам",.t.)
reconstruct(dir_server+"mo_rpds",mo_rpds,,"платёжным документам2",.t.)
reconstruct(dir_server+"mo_rpdsh",mo_rpdsh,,"платёжным документам3",.t.)
reconstruct(dir_server+"mo_onkna",mo_onkna,"index_base('mo_onkna')","онкологии1",.t.)
reconstruct(dir_server+"mo_onksl",mo_onksl,"index_base('mo_onksl')","онкологии2",.t.)
reconstruct(dir_server+"mo_onkdi",mo_onkdi,"index_base('mo_onkdi')","онкологии3",.t.)
reconstruct(dir_server+"mo_onkpr",mo_onkpr,"index_base('mo_onkpr')","онкологии4",.t.)
reconstruct(dir_server+"mo_onkus",mo_onkus,"index_base('mo_onkus')","онкологии5",.t.)
reconstruct(dir_server+"mo_onkco",mo_onkco,"index_base('mo_onkko')","онкологии5",.t.)
reconstruct(dir_server+"mo_onkle",mo_onkle,"index_base('mo_onkle')","онкологии5",.t.)
//
reconstruct(dir_server+"mo_rees",mo_rees,,"реестрам случаев",.t.)
reconstruct(dir_server+"mo_xml",mo_xml,,"принятым файлам",.t.)
reconstruct(dir_server+"schet",schet,"index_base('schet')","счетам",.t.)
reconstruct(dir_server+"schet_",schet_,,"счетам",.t.)
reconstruct(dir_server+"schetd",schetd,,,.t.)
//
reconstruct(dir_server+"mo_uch",mo_uch,,"учреждениям",.t.)
reconstruct(dir_server+"mo_otd",mo_otd,,"отделениям",.t.)
reconstruct(dir_server+"mo_uchvr",mo_uchvr,,"участковым врачам",.t.)
reconstruct(dir_server+"mo_pers",mo_pers,"index_base('mo_pers')","персоналу",.t.)
//
reconstruct(dir_server+"mo_ppst",mo_ppst,,,.t.)
reconstruct(dir_server+"mo_pp",mo_pp,"index_base('mo_pp')","приемному покою",.t.)
reconstruct(dir_server+"mo_ppdia",mo_ppdia,"index_base('mo_ppdia')",,.t.)
reconstruct(dir_server+"mo_ppper",mo_ppper,"index_base('mo_ppper')",,.t.)
reconstruct(dir_server+"mo_ppadd",mo_ppadd,,,.t.)
//
reconstruct(dir_server+"hum_p",hum_p,"index_base('hum_p')","пролеченным больным6",.t.)
reconstruct(dir_server+"hum_p_u",hum_p_u,"index_base('hum_p_u')","пролеченным больным7",.t.)
reconstruct(dir_server+"plat_ms",plat_ms,"index_base('plat_ms')",,.t.)
reconstruct(dir_server+"plat_vz",plat_vz,"index_base('plat_vz')",,.t.)
reconstruct(dir_server+"hum_plat",hum_plat,"index_base('hum_plat')","плательщикам",.t.)
reconstruct(dir_server+"payments",_payments,"index_base('payments')","платежам платных услуг",.t.)
reconstruct(dir_server+"payer",_payer,"index_base('payer')",,.t.)
reconstruct(dir_server+"pu_cena",pu_cena,"index_base('pu_cena')",,.t.)
reconstruct(dir_server+"pu_date",{{"data","D",8,0}},"index_base('pu_date')",,.t.)
init_base(dir_server+"p_pr_vz",,gmenu_pl_d_smo,0,,.t.)
init_base(dir_server+"p_d_smo",,gmenu_pl_d_smo,0,,.t.)
//
reconstruct(dir_server+"ortoped",{{"NAME","C",80,0},;
                                  {"kod" ,"N", 1,0}},,,.t.)
reconstruct(dir_server+"ortoped1",{{"kod_ort","N",4,0},;
                                   {"kod_menu","N",4,0},;
                                   {"massa","N",7,3}},,,.t.)
reconstruct(dir_server+"ortoped2",{{"kod_tip","N",4,0},;
                                   {"kod_usl","N",4,0}},;
            "index_base('ortoped2')","материалам",.t.)
reconstruct(dir_server+"diag_ort",diag_ort,"index_base('diag_ort')","диагнозам",.t.)
reconstruct(dir_server+"ort_brk",{{"NAME","C",40,0}},,,.t.)
reconstruct(dir_server+"orto_uva",orto_uva,"index_base('orto_uva')",,.t.)
reconstruct(dir_server+"hum_ort",hum_o,"index_base('hum_ort')","пролеченным больным8",.t.)
reconstruct(dir_server+"hum_oro",hum_o_o,"index_base('hum_oro')","пролеченным больным9",.t.)
reconstruct(dir_server+"hum_oru",hum_o_u,"index_base('hum_oru')","пролеченным больным10",.t.)
reconstruct(dir_server+"hum_orpl",hum_orpl,"index_base('hum_orpl')","плательщикам",.t.)
init_base(dir_server+"tip_orto",,gmenutorto,0,,.t.)
//
reconstruct(dir_server+"kas_pl",kas_pl,"index_base('kas_pl')","кассе-1",.t.)
reconstruct(dir_server+"kas_pl_u",kas_pl_u,"index_base('kas_pl_u')","кассе-2",.t.)
reconstruct(dir_server+"kas_ort",kas_ort,"index_base('kas_ort')","кассе-3",.t.)
reconstruct(dir_server+"kas_ortu",kas_ortu,"index_base('kas_ortu')","кассе-4",.t.)
reconstruct(dir_server+"kas_usl",kas_usl,,"кассе-5",.t.)
reconstruct(dir_server+"kas_usld",kas_usl,,"кассе-6",.t.)
//
reconstruct(dir_server+"mo_kekez",kek_eksz,"index_base('mo_kekez')","экспертизам",.t.)
reconstruct(dir_server+"mo_kekh",kek_h,"index_base('mo_kekh')","экспертизам2",.t.)
reconstruct(dir_server+"mo_keke",kek_eks,"index_base('mo_keke')","экспертизам3",.t.)
//
init_base(dir_server+"komitet",,gmenu_komit,2,,.t.)
init_base(dir_server+"str_komp",,gmenu_strah,2,,.t.)
init_base(dir_server+"organiz",,gmenu_organ,0,,.t.)
use_base("organiz")
if lastrec() == 0
  AddRecN()
  org->kod_tfoms := glob_mo[_MO_KOD_TFOMS]
  org->name_tfoms := glob_mo[_MO_SHORT_NAME]
  org->uroven := get_uroven()
endif
use
my_mo_Reconstruct_BD()
return NIL

*

***** инициализация прочих справочников
Function InitSpravOthers()
/////////////////////////////////////////////////
// glob_katl - Классификатор кодов льгот по ДЛО
//  1 - NAME(C)  2 - KOD(C)
Public glob_katl := {}

aadd(glob_katl, {"000 --- без льготы ---","   "})
aadd(glob_katl, {"010 Инвалиды войны","010"})
aadd(glob_katl, {"011 Участники Великой Отечественной войны, ставшие инвалидами","011"})
aadd(glob_katl, {"012 Военнослужащие органов внутренних дел, Государственной противопожарной службы, учреждений и органов уголовно-исполнительной системы, ставших инвалидами вследствие ранения, контузии или увечья, полученных при исполнении обязанностей военной службы","012"})
aadd(glob_katl, {"020 Участники Великой Отечественной войны","020"})
aadd(glob_katl, {"030 Ветераны боевых действий","030"})
aadd(glob_katl, {"040 Военнослужащие, проходившие военную службу в воинских частях, не входивших в состав действующей армии, в период с 22 июня 1941 года по 3 сентября 1945 года не менее шести месяцев, военнослужащие, награжденные орденами или медалями СССР","040"})
aadd(glob_katl, {'050 Лица, награжденные знаком "Жителю блокадного Ленинграда"',"050"})
aadd(glob_katl, {"060 Члены семей погибших (умерших) инвалидов войны, участников Великой Отечественной войны и ветеранов боевых действий","060"})
aadd(glob_katl, {"061 Члены семей погибших в Великой Отечественной войне лиц из числа личного состава групп самозащиты объектовых и аварийных команд местной противовоздушной обороны, а также члены семей погибших работников госпиталей и больниц города Ленинграда","061"})
aadd(glob_katl, {"062 Члены семей военнослужащих органов внутренних дел, Государственной противопожарной службы, учреждений и органов уголовно-исполнительной системы и органов государственной безопасности, погибших при исполнении обязанностей военной службы","062"})
aadd(glob_katl, {"063 Члены семей военнослужащих, погибших в плену, признанных в установленном порядке пропавшими без вести в районах боевых действий","063"})
aadd(glob_katl, {"081 Инвалиды I степени","081"})
aadd(glob_katl, {"082 Инвалиды II степени","082"})
aadd(glob_katl, {"083 Инвалиды III степени","083"})
aadd(glob_katl, {"084 Дети-инвалиды","084"})
aadd(glob_katl, {"085 Инвалиды, не имеющие степени ограничения способности к трудовой деятельности","085"})
aadd(glob_katl, {"091 Граждане, получившие или перенесшие лучевую болезнь и другие заболевания, связанные с радиационным воздействием вследствие чернобыльской катастрофы или с работами по ликвидации последствий катастрофы на Чернобыльской АЭС","091"})
aadd(glob_katl, {"092 Инвалиды вследствие чернобыльской катастрофы","092"})
aadd(glob_katl, {"093 Граждане, принимавшие в 1986-1987 годах участие в работах по ликвидации последствий чернобыльской катастрофы","093"})
aadd(glob_katl, {"094 Граждане, принимавшие участие в 1988-90гг. участие в работах по ликвидации последствий чернобыльской катастрофы","094"})
aadd(glob_katl, {"095 Граждане, постоянно проживающие (работающие) на территории зоны проживания с правом на отселение","095"})
aadd(glob_katl, {"096 Граждане, постоянно проживающие (работающие) на территории зоны проживания с льготным социально-экономическим статусом","096"})
aadd(glob_katl, {"097 Граждане, постоянно проживающие (работающие) в зоне отселения до их переселения в другие районы","097"})
aadd(glob_katl, {"098 Граждане, эвакуированные (в том числе выехавшие добровольно) в 1986 году из зоны отчуждения","098"})
aadd(glob_katl, {"099 Дети и подростки в возрасте до 18 лет, проживающие в зоне отселения и зоне проживания с правом на отселение, эвакуированные и переселенные из зон отчуждения, отселения, проживания с правом на отселение","099"})
aadd(glob_katl, {"100 Дети и подростки в возрасте до 18 лет, постоянно проживающие в зоне с льготным социально-экономическим статусом","100"})
aadd(glob_katl, {"101 Дети и подростки, страдающие болезнями вследствие чернобыльской катастрофы, ставшие инвалидами","101"})
aadd(glob_katl, {"102 Дети и подростки, страдающие болезнями вследствие чернобыльской катастрофы","102"})
aadd(glob_katl, {"111 Граждане, получившие суммарную (накопительную) эффективную дозу облучения, превышающую 25 сЗв (бэр)","111"})
aadd(glob_katl, {"112 Граждане, получившие суммарную (накопительную) эффективную дозу облучения более 5 сЗв (бэр), но не превышающую 25 сЗв (бэр)","112"})
aadd(glob_katl, {"113 Дети в возрасте до 18 лет первого и второго поколения граждан, получившие суммарную (накопительную) эффективную дозу облучения более 5 сЗв (бэр), страдающих заболеваниями вследствие радиационного воздействия на одного из родителей","113"})
aadd(glob_katl, {"120 Лица, работавшие в период Великой Отечественной войны на объектах противовоздушной обороны, на строительстве оборонительных сооружений, военно-морских баз, аэродромов и других военных объектов","120"})
aadd(glob_katl, {'121 Граждане, получившие лучевую болезнь, обусловленную воздействием радиации вследствие аварии в 1957 году на производственном объединении "Маяк" и сбросов радиоактивных отходов в реку Теча',"121"})
aadd(glob_katl, {'122 Граждане, ставшие инвалидами в результате воздействия радиации вследствие аварии в 1957 году на производственном объединении "Маяк" и сбросов радиоактивных отходов в реку Теча',"122"})
aadd(glob_katl, {'123 Граждане, принимавшие в 1957-58гг. участие в работах по ликвидации последствий аварии в 1957 году на производственном объединении "Маяк", а также граждане, занятые на работах по проведению мероприятий вдоль реки Теча в 1949-56гг.',"123"})
aadd(glob_katl, {'124 Граждане, принимавшие в 1959-61гг. участие в работах по ликвидации последствий аварии в 1957 году на производственном объединении "Маяк", а также граждане, занятые на работах по проведению мероприятий вдоль реки Теча в 1957-62гг.',"124"})
aadd(glob_katl, {'125 Граждане, проживающие в населенных пунктах, подвергшихся радиоактивному загрязнению вследствие аварии в 1957 году на производственном объединении "Маяк" и сбросов радиоактивных отходов в реку Теча',"125"})
aadd(glob_katl, {'128 Граждане, эвакуированные из населенных пунктов, подвергшихся радиоактивному загрязнению вследствие аварии в 1957 году на производственном объединении "Маяк" и сбросов радиоактивных отходов в реку Теча',"128"})
aadd(glob_katl, {"129 Дети первого и второго поколения граждан, указанных в статье 1 Федерального закона от 26.11.98 № 175-ФЗ, страдающие заболеваниями вследствие воздействия радиации на их родителей","129"})
aadd(glob_katl, {"131 Граждане из подразделений особого риска, не имеющие инвалидности","131"})
aadd(glob_katl, {"132 Граждане из подразделений особого риска, имеющие инвалидность","132"})
aadd(glob_katl, {"140 Бывшие несовершеннолетние узники концлагерей, признанные инвалидами вследствие общего заболевания, трудового увечья и других причин (за исключением лиц, инвалидность которых наступила вследствие их противоправных действий)","140"})
aadd(glob_katl, {"141 Рабочие и служащие, а также военнослужащих органов внутренних дел, Государственной противопожарной службы, получившие профессиональные заболевания, связанные с лучевым воздействием на работах в зоне отчуждения","141"})
aadd(glob_katl, {"142 Рабочие и служащие, а также военнослужащие органов внутренних дел, Государственной противопожарной службы, получивших профессиональные заболевания, связанные с лучевым воздействием на работах в зоне отчуждения, ставшие инвалидами","142"})
aadd(glob_katl, {"150 Бывшие несовершеннолетние узники концлагерей","150"})
return NIL


***** 03.01.21 вернуть код план-заказа по методу ВМП
Function ret_PZ_VMP(lunit)
Local mpztip := 0
if select("MOUNIT") == 0
  R_Use(dir_exe+"_mo1unit",cur_dir+"_mo1unit","MOUNIT")
endif
select MOUNIT
find (str(lunit,3))
if found() .and. mounit->pz > 0
  mpztip := mounit->pz
endif
return mpztip
/*
Local mpztip := 0
if select("MOUNIT") == 0
  R_Use(dir_exe+"_mo0unit",cur_dir+"_mo0unit","MOUNIT")
endif
select MOUNIT
find (str(lunit,3))
if found() .and. mounit->pz > 0
  mpztip := mounit->pz
endif
return mpztip
*/