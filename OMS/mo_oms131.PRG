***** mo_omsid.prg - информация по диспансеризации в ОМС
#include "inkey.ch"
#include "fastreph.ch"
#include "function.ch"
#include "edit_spr.ch"
#include "chip_mo.ch"

Static lcount_uch  := 1
Static mas1pmt := {"~все оказанные случаи",;
                   "случаи в выставленных ~счетах",;
                   "случаи в за~регистрированных счетах"}



***** 08.03.21 вернуть план диспансеризации на год из R01 для формы 131
Function ret_plan_disp_131_N(d)
Local arr[2,7], ar, s, s1, fl, sgod := year(d), v, i, j, group_ini := "DISP_PLAN_131"
afillall(arr,0)
R_Use(dir_server+"kartotek",,"KART")
R_Use(dir_server+"mo_dr01",,"RR")
R_Use(dir_server+"mo_dr01k",,"R01")
set relation to reestr into RR
index on str(kod_k,7) to (cur_dir+"tmp_r01") ;
      for kod_k > 0 .and. oplata == 1 .and. tip == 1
// oplata == 1  - принято
// tip == 1 - диспансеризация  2 - проф
// rr->tip == 0 - 0-R01
go top
do while !eof()
  fl := .f.
  //if r01->n_m < 4
    if r01->n_m != 3 .and. rr->tip == 0
      fl := .t.
    //elseif r01->n_m == 3 .and. rr->tip == 1
    //  fl := .t.

    endif
    if fl
      select KART
      goto (r01->kod_k)
      v := sgod - year(kart->date_r)
      i := iif(kart->pol == "М", 1, 2)
      if v < 34
         j := 1
      elseif v <= 39
         j := 2
      elseif v <= 54
         j := 3
      elseif v <= 59
         j := 4
      elseif v <= 64
         j := 5
      elseif v <= 74
         j := 6
      else
         j := 7
      endif
      arr[i,j] ++
    endif
  //endif
  select R01
  skip
enddo
close databases
return arr

***** 30.05.21 форма 131
Function forma_131(par)
Static arr_v := {"18-34","35-39","40-54","55-59","60-64",;
                 "65-74","75 и старше"}
Local arr_m, buf := save_maxrow(), s, as := {}, ar, sh := 90, HH := 80, n, ;
      ii, n_file := "f_131"+stxt, d1, d2, fl, arr_excel := {}, arr_plan_god
if (st_a_uch := inputN_uch(T_ROW,T_COL-5,,,@lcount_uch)) != NIL .and. (arr_m := year_month(,,,5)) != NIL
  mywait()
  if f0_inf_DVN(arr_m,par > 1,par == 3,.t.)
    mywait("Сбор статистики")
    arr_plan_god := ret_plan_disp_131_N(arr_m[5])
    dbcreate(cur_dir+"tmp1000",{{"vozrast","N",1,0},;
                                {"vm1","N",8,0},;
                                {"vm2","N",8,0},;
                                {"vg1","N",8,0},;
                                {"vg2","N",8,0},;
                                {"vm_1","N",8,0},;
                                {"vm_2","N",8,0},;
                                {"vg_1","N",8,0},;
                                {"vg_2","N",8,0},;
                                {"vmpro","N",8,0},;
                                {"vgpro","N",8,0}})
    use (cur_dir+"tmp1000") new alias TMP
    for n := 1 to 7
      append blank
      tmp->vozrast := n
    next
    index on str(vozrast,1) to (cur_dir+"tmp1000")
    use
    //
    Private arr_2000 := {;
      {   1,"Опрос (анкетирование), на выявление ... заболеваний","56.1.16"},;
      {   2,"Антропометрия (измерение роста стоя, массы тела...","3.1.19"},;
      {   3,"Измерение артериального давления на перифирических артериях","3.1.5"},;
      {   4,"Определение уровня общего холестерина в крови","4.12.174"},;
      {   5,"Определение уровня глюкозы в крови натощак","4.12.169"},;
      {   6,"Определение относительного сердечно-сосудистого риска",{"56.1.17","56.1.18"},"mdvozrast < 40"},;
      {   7,"Определение абсолютного сердечно-сосудистого риска",{"56.1.17","56.1.19"},"39 < mdvozrast .and. mdvozrast < 66"},;
      {   8,"Флюорография легких или рентгенография легких","7.61.3"},;
      {   9,"Электрокардиография в покое","13.1.1"},;
      {  10,"Измерение внутриглазного давления","3.4.9"},;
      {  11,"Осмотр фельдшером (акушеркой), или врачем акушером-гинекологом",{{"2.3.1",136},{"2.3.3",3},{"2.3.3",42}}},;
      {  12,"Взятие мазка с шейки матки и цивикального канала",{"4.1.12","4.20.1","4.20.2"}},;
      {  13,"Маммография обеих молочных желез в двух проекциях","7.57.3"},;
      {  14,"Исследование кала на скрытую кровь иммунохимическим методом","4.8.4"},;
      {  15,"Определение простат-специфического антигена в крови","4.14.66"},;
      {  16,"Эзофагогастродоуденоскопия","10.3.713"},;
      {  17,"Общий анализ крови",{"4.11.137","4.11.136"}},;
      {  18,"Кратное индивидуального профилактическое консультирование","56.1.14"},;
      {  19,"Прием(осмотр) врача-терапевта",{{"2.3.1",97},{"2.3.1",57},{"2.3.2",97},{"2.3.2",57},{"2.3.3",42},{"2.3.5",57},{"2.3.5",97},{"2.3.7",97},{"2.3.7",57}}},;
      { 191,"Прием(осмотр) врача-терапевта по рез.1го этапа 18-39 лет","2.3.7","mdvozrast < 40"},;
      { 192,"Прием(осмотр) врача-терапевта по рез.1го этапа > 40 лет","2.3.7","39 < mdvozrast"},;
      {  20,"Осмотр на выявление визуальных и иных локализаций онко.заболеваний ",{"2.3.1","2.3.2","2.3.3","2.3.5","2.3.7"}};
     }
//  {  19,"Прием (осмотр) врача-терапевта",{{"2.3.1",97},{"2.3.1",57},{"2.3.2",97},{"2.3.2",57},{"2.3.3",42},{"2.3.5",57},{"2.3.5",97},{"2.3.6",57},{"2.3.6",97}}},;

    dbcreate(cur_dir+"tmp2000",{{"name","C",100,0},;
                                {"ns","N",4,0},;
                                {"vv","N",8,0},;
                                {"vr","N",8,0},;
                                {"vo","N",8,0},;
                                {"vd","N",8,0}})
    use (cur_dir+"tmp2000") new alias TMP
    for n := 1 to len(arr_2000)
      append blank
      tmp->name := arr_2000[n,2]
      tmp->ns := arr_2000[n,1]
    next
    index on str(ns,3) to (cur_dir+"tmp2000")
    use
    //
    Private v3001 := 0, arr_3000 := {;
      {  1,"Осмотр (консультация)врача-невролога","2.84.1"},;
      {  2,"Дуплексное сканирование брахицефальных артерий",{"8.23.6","8.23.706"}},;
      {  3,"Осмотр (консультация) врачем-хирургом или врачем-урологом","2.84.10"},;
      {  4,"Осмотр (консультация) врачем-хирургом или врачем-колопроктологом",{"2.84.6","10.4.1","10.4.701","10.6.10","10.6.710"}},;
      {  5,"Колоноскопия","10.4.1"},;
      {  6,"Эзофагогастродуоденоскопия",{"10.3.13","10.3.713"}},;
      {  7,"Рентгенография легких",{"7.61.3","7.2.702"}},;
      {  8,"Компьютерная томография легких",{"7.2.701","7.2.703","7.2.704","7.2.705"}},;
      {  9,"Спирометрия","16.1.717"},;
      { 10,"Осмотр врачем акушером-гинекологом","2.84.5"},;
      { 11,"Осмотр врачем-оториноларингологом","2.84.8"},;
      { 12,"Осмотр врача-офтальмолога","2.84.3"},;
      { 13,"Индивидуальное или групповое профилактическое консультирование",{"56.1.20","56.1.23"}},;  //+
      {131,"с выявленными ишемической болезнью ...",{"56.1.20","56.1.23"}},;
      {132,"при выявлении риском алкоголя и наркотиков ...",{"56.1.20","56.1.23"}},;                  //+
      {133,"в возрасте 65 лет и старше в целях ...",{"56.1.20","56.1.23"},"64 < mdvozrast"},;         //+
      {134,"при выявлении высокого относительного, ...",{"56.1.20","56.1.23"}},;                      //+
      { 14,"Прием (осмотр) врача-терапевта по результатам 2-го этапа","2.84.11"},;                    //+
      { 15,"Направление на осмотр врачем-онкологом","99.99.99"};                                      //+
     }
    dbcreate(cur_dir+"tmp3000",{{"name","C",100,0},;
                                {"ns","N",4,0},;
                                {"vv","N",8,0},;
                                {"vd","N",8,0}})
    use (cur_dir+"tmp3000") new alias TMP
    for n := 1 to len(arr_3000)
      append blank
      tmp->name := arr_3000[n,2]
      tmp->ns := arr_3000[n,1]
    next
    index on str(ns,2) to (cur_dir+"tmp3000")
    use
    //
    Private v4001_1 := 0, v4001_2 := 0, v4002_1 := 0, v4002_2 := 0, arr_4000 := {;
      { 1,"Гиперхолестериномия","m1holestdn == 1 .or. mholest > 5.2"},;
      { 2,"Гипергликемия","m1glukozadn==1.or.mglukoza>6.1"},;
      { 3,"Курение табака","m1kurenie==1"},;
      { 4,"Нерациональное питание","m1ner_pit==1"},;
      { 5,"Избыточная масса тела","m1tip_mas==3"},;
      { 6,"Ожирение","m1tip_mas>=4"},;
      { 7,"Низкая физическая активность","m1fiz_akt==1"},;
      { 8,"Риск пагубного потребления алкоголя","m1riskalk==1"},;
      { 9,"Риск потребления наркотических средств","m1pod_alk==1"},;
      {10,"Отягощенная наследственность по инфаркту миокарда","m1ot_nasl2==1"},;
      {11,"Отягощенная наследственность по мозговому инсульту","m1fiz_akt==100"},; // фигня
      {12,"Отягощенная наследственность по ЗНО колоректально области","m1fiz_akt==100"},; // фигня
      {13,"Отягощенная наследственность по ЗНО по другим локализациям","m1ot_nasl1==1"},;
      {14,"Отягощенная наследственность по ХБ нижних дыхательных путей","m1ot_nasl3==1"},;
      {15,"Отягощенная наследственность по сахарному диабету","m1ot_nasl4==1"},;
      {16,"Высокий или очень высокий абс.суммарный сердечно-сосудистый риск","10<=mssr"},;
      {17,"Высокий (более 1 ед.) относительный сердечно-сосудистый риск","1<=mssr .and. mssr<10"},;
      {18,"Старческая астения","m1fiz_akt==100"};
     }
     // { 1,"Повышенный уровень артериального давления","mad1>140.and.mad2>90"},;

    dbcreate(cur_dir+"tmp4000",{{"name","C",100,0},;
                                {"ns","N",2,0},;
                                {"m36","N",8,0},;
                                {"m39","N",8,0},;
                                {"mvv","N",8,0},;
                                {"g36","N",8,0},;
                                {"g39","N",8,0},;
                                {"gvv","N",8,0},;
                                {"v36","N",8,0},;
                                {"v39","N",8,0},;
                                {"vvv","N",8,0}})
    use (cur_dir+"tmp4000") new alias TMP
    for n := 1 to len(arr_4000)
      append blank
      tmp->name := arr_4000[n,2]
      tmp->ns := arr_4000[n,1]
    next
    index on str(ns,2) to (cur_dir+"tmp4000")
    use
    //
    Private arr_5000 := {;
      { 7,"1","Некоторые инфекционные и паразитарные болезни","A00-B99"},;
      { 8,"1.1","в т.ч. туберкулез","A15-A19"},;
      { 9,"2","Новообразования","C00-D48"},;
      {10,"2","злокачественные новообразования","C00-C97"},;
      {11,"2.1","Из них губы, полости рта и глотки","C00-C14"},;
      {12,"2.2"," из них в 1-2 стадии","C00-C14","1"},;
      {11,"2.3","в т.ч. пищевода","C15"},;
      {12,"2.4"," из них в 1-2 стадии","C15","1"},;
      {13,"2.5","желудка","C16"},;
      {14,"2.6"," из них в 1-2 стадии","C16","1"},;
      {15,"2.7","тонкого кишечника","C17"},;
      {16,"2.8"," из них в 1-2 стадии","C17","1"},;
      {15,"2.9","ободочной кишки","C18"},;
      {16,"2.10"," из них в 1-2 стадии","C18","1"},;
      {17,"2.11","ректосигмоидного соединения.","C19-C21"},;
      {18,"2.12"," из них в 1-2 стадии","C19-C21","1"},;
      {21,"2.13","трахеи, бронхов и легкого","C33,C34"},;
      {22,"2.14"," из них в 1-2 стадии","C33,C34","1"},;
      {21,"2.15","кожи","C43,C44"},;
      {22,"2.16"," из них в 1-2 стадии","C43,C44","1"},;
      {23,"2.17","молочной железы","C50"},;
      {24,"2.18"," из них в 0-1 стадии","C50","1"},;
      {24,"2.19"," из них в 2 стадии","C50","2"},;
      {25,"2.20","шейки матки","C53"},;
      {26,"2.21"," из них в 0-1 стадии","C53","1"},;
      {26,"2.21"," из них в 2 стадии","C53","2"},;
      {31,"2.23","предстательной железы","C61"},;
      {32,"2.24"," из них в 1-2 стадии","C61","1"},;
      {35,"3","Болезни крови, кроветворных...","D50-D89"},;
      {36,"3.1","в т.ч. анемии","D50-D64"},;
      {37,"4","Болезни эндокринной системы...","E00-E90"},;
      {38,"4","в т.ч. сахарный диабет","E10-E14"},;
      {39,"4.1","инсулинозависимый сахарный диабет","E11"},;
      {39,"4.2","ожирение","E66"},;
      {40,"4.3","липидемии","E78"},;
      {41,"5","Болезни нервной системы","G00-G99"},;
      {42,"5.1","в т.ч. преходящие транзиторные","G45"},;
      {43,"6","Болезни глаза и его придаточного аппарата","H00-H59"},;
      {44,"6.1","в т.ч. катаракта","H25,H26"},;
      {45,"6.2","глаукома","H40"},;
      {46,"6.3","слепота и пониженное зрение","H54"},;
      {47,"7","Болезни системы кровообращения","I00-I99"},;
      {48,"7.1","в т.ч. болезни, характ","I10-I13"},;
      {49,"7.2","ишемическая болезнь сердца","I20-I25"},;
      {50,"7.2.1","в т.ч. стенокардия","I20"},;
      {51,"7.2.2","в т.ч. нестабильная стенокардия","I20.0"},;
      {52,"7.2.3","хроническая ишемическая болезнь сердца","I25"},;
      {53,"7.2.4","в т.ч. инфаркт миокарда","I25.2"},;
      {54,"7.3","другие болезни сердца","I30-I52"},;
      {55,"7.4","цереброваскулярные болезни","I60-I69"},;
      {56,"7.4.1","в т.ч. закупорка и стеноз","I65,I66"},;
      {57,"7.4.2","другие цереброваскулярные болезни","I67"},;
      {59,"7.4.4","аневризма брюшной аорты","I71.3-I71.4"},;
      {60,"8","Болезни органов дыхания","J00-J98"},;
      {61,"8.1","в т.ч. пневмония","J12-J18"},;
      {62,"8.2","бронхит хронический и неуточненный, эмфизема","J40-J43"},;
      {63,"8.3","другая хроническая обструктивная легочная болезнь","J44-J47"},;
      {64,"9","Болезни органов пищеварения","K00-K93"},;
      {65,"9.1","в т.ч. язва желудка, двен","K25,K26"},;
      {66,"9.2","гастрит и дуоденит","K29"},;
      {67,"9.3","неинфекционный энтерит и колит","K50-K52"},;
      {68,"9.4","другие болезни кишечника","K55-K63"},;
      {69,"10","Болезни мочеполовой системы","N00-N99"},;
      {70,"10.1","в т.ч. болезни предстательной железы","N40-N42"},;
      {71,"10.2","доброкачественная дисплазия молочной железы","N60"},;
      {72,"10.3","воспалительные болезни женских тазовых органов","N70-N77"},;
      {72,"11.1","Боллезни уха и сосцовидного отростка","H60-H95"},;
      {72,"8","кондуктивная и нейросенсорная потеря слуха","H90"},;
      {72,"11.2","Болезни кожи и подкожной клетчатки","L00-L98"},;
      {72,"11.3","Болезни костно-мышечной системы","M00-M99"},;
      { 0,"  ","ИТОГО",""};
     }
    Private len5000 := len(arr_5000)
    Private diag5000 := array(len5000)
    Private len5001 := len(arr_5000)
    Private diag5001 := array(len5000)
    arr_5001 := aclone(arr_5000)
    //
    adbf := {{"name","C",100,0},;
             {"diagnoz","C",20,0},;
             {"ns","N",2,0},;
             {"stroke","C",8,0},;
             {"dispans0","N",8,0},;
             {"vtr","N",8,0},;
             {"vsttr","N",8,0},;
             {"dispans1","N",8,0},;
             {"vg10","N",8,0},;
             {"vg11","N",8,0},;
             {"vg12","N",8,0},;
             {"vg13","N",8,0}}
    dbcreate(cur_dir+"tmp5000",adbf)
    use (cur_dir+"tmp5000") new alias TMP
    for n := 1 to len5000
      append blank
      tmp->name := arr_5000[n,3]
      tmp->ns := n
      tmp->stroke := arr_5000[n,2]
      if len(arr_5000[n]) < 5
        tmp->diagnoz := arr_5000[n,4]
      endif
      s2 := arr_5000[n,4]
      diag5000[n] := {}
      for i := 1 to numtoken(s2,",")
        s3 := token(s2,",",i)
        if "-" $ s3
          d1 := token(s3,"-",1)
          d2 := token(s3,"-",2)
        else
          d1 := d2 := s3
        endif
        aadd(diag5000[n], {diag_to_num(d1,1),diag_to_num(d2,2)} )
      next
    next
    index on str(ns,2) to (cur_dir+"tmp5000")
    use
    //
    dbcreate(cur_dir+"tmp5001",adbf)
    use (cur_dir+"tmp5001") new alias TMP
    for n := 1 to len5001
      append blank
      tmp->name := arr_5001[n,3]
      tmp->ns := n
      tmp->stroke := arr_5001[n,2]
      if len(arr_5001[n]) < 5
        tmp->diagnoz := arr_5001[n,4]
      endif
      s2 := arr_5001[n,4]
      diag5001[n] := {}
      for i := 1 to numtoken(s2,",")
        s3 := token(s2,",",i)
        if "-" $ s3
          d1 := token(s3,"-",1)
          d2 := token(s3,"-",2)
        else
          d1 := d2 := s3
        endif
        aadd(diag5001[n], {diag_to_num(d1,1),diag_to_num(d2,2)} )
      next
    next
    index on str(ns,2) to (cur_dir+"tmp5001")
    use
    //
    Private arr_7000 := {;
      {"1","Определена I группа здоровья"},;
      {"2","Определена II группа здоровья"},;
      {"3","Определена IIIа группа здоровья"},;
      {"4","Определена IIIб группа здоровья"},;
      {"5","Направлено на дополнительное обследование"},;  //6
      {"6","Установлено диспансерное наблюдение"},;
      {"6.1","Установлено ДН врачем(фель) медпрофилактики"},;
      {"6.2","Врачем-терапевтом"},;
      {"6.3","Врачем-специалистом"},;
      {"6.4","Фельдшером ФЗП или ФАП"},;
      {"7","Направлено для получения спец., в т.ч.ВМП"},;
      {"8","Направлено на санаторно-курортное лечение"};
     }
     //
    dbcreate(cur_dir+"tmp7000",{{"name","C",100,0},;
                                {"ns",  "C",  3,0},;
                                {"tr" , "N",  8,0},;
                                {"ntr", "N",  8,0};
                                })
    use (cur_dir+"tmp7000") new alias TMP
    for n := 1 to len(arr_7000)
      append blank
      tmp->name := arr_7000[n,2]
      tmp->ns := arr_7000[n,1]
    next
    index on ns to (cur_dir+"tmp7000")
    use
    //
    Private arr_vrach := {}, arr_7001 := {;
      {"6001 Общее число работающих граждан, прошедших диспансеризацию",0,15},;           //  1
      {"6002 Общее число неработающих граждан, прошедших диспансеризацию",0,16},;         //  2
      {"6003 Общее число прошедших диспансеризацию обучающихся по очной форме",0,17},;    //  3
      {"6004 Общее число граждан, имеющих право на государст.социальную помощь",0,0},;    //  4
      {"     из них: - инвалиды войны",0,19},;                                            //  5
      {"             - участники Великой Отечественной войны",0,20},;                     //  6
      {"             - ветераны боевых действий (закон №5-ФЗ от 12.01.95г.)",0,21},;      //  7
      {"             - военнослужащие не из действующей армии (41-45 годы)",0,22},;       //  8
      {"             - лица, награждённые знаком ЖИТЕЛЮ БЛОКАДНОГО ЛЕНИНГРАДА",0,23},;    //  9
      {"             - лица, работавшие в период ВОВ на объектах ПВО и т.п.",0,24},;      // 10
      {"             - члены семей погибших (умерших) инвалидов, участников ВОВ",0,25},;  // 11
      {"             - инвалиды",0,26},;                                                  // 12
      {"6005 Общее число прошедших диспансеризацию коренных жителей Севера...",0,27},;    // 13
      {"     Общее число МО, принимавших участие в проведении диспансеризации",1,28},;    // 14
      {"     из них: имеют кабинеты или отделения медицинской профилактики",1,29},;       // 15
      {"6006 Общее число мобильных бригад, принимавших участие в диспансеризации",0,30},; // 16
      {"     число выездов мобильных бригад",0,31},;                               // 17
      {"6007 Общее число граждан, дисп-ия которых проведена мобильными бригадами",0,32},; // 18
      {"     из них проживающих в сельской местности",0,33},;                             // 19
      {"6008 Число письменных отказов от прохождения отдельных осмотров",0,0},;           // 20
      {"6009 Число письменных отказов от прохождения диспансеризации в целом",0,35},;     // 21
      {"     Число прошедших I этап диспансеризации и не завершивших II этап",0,0},;      // 22
      {"     Направлено на второй этап",0,37},;                                           // 23
      {"     Завершили второй этап",0,38},;                                               // 24
      {"6010 Число сельских жителей, прошедших диспансеризацию",0,39};                    // 25
     }

    use (cur_dir+"tmp1000") index (cur_dir+"tmp1000") new
    use (cur_dir+"tmp2000") index (cur_dir+"tmp2000") new
    use (cur_dir+"tmp3000") index (cur_dir+"tmp3000") new
    use (cur_dir+"tmp4000") index (cur_dir+"tmp4000") new
    use (cur_dir+"tmp5000") index (cur_dir+"tmp5000") new
    use (cur_dir+"tmp5001") index (cur_dir+"tmp5001") new
    use (cur_dir+"tmp7000") index (cur_dir+"tmp7000") new
    R_Use(dir_server+"mo_onkna",dir_server+"mo_onkna","NAPR")
    R_Use(dir_server+"schet_",,"SCHET_")
    R_Use(dir_server+"uslugi",,"USL")
    R_Use(dir_server+"human_u_",,"HU_")
    R_Use(dir_server+"human_u",dir_server+"human_u","HU")
    set relation to recno() into HU_
    R_Use(dir_server+"kartote_",,"KART_")
    R_Use(dir_server+"kartotek",,"KART")
    set relation to recno() into KART_
    R_Use(dir_server+"human_",,"HUMAN_")
    R_Use(dir_server+"human",,"HUMAN")
    set relation to recno() into HUMAN_
    use (cur_dir+"tmp") index (cur_dir+"tmp") new
    set relation to kod_k into KART
    ii := 0
    f_error_DVN(1)
    mywait(" ")
    go top
    do while !eof()
  //    @ maxrow(),0 say padr(str(++ii/tmp->(lastrec())*100,6,2)+"%  "+alltrim(kart->fio)+"  "+full_date(kart->date_r),80) color cColorWait
      if empty(tmp->kod4h) .and. !empty(tmp->kod1h) // есть диспансеризация первый этап
        @ maxrow(),0 say "ДИСП "+padr(str(++ii/tmp->(lastrec())*100,6,2)+"%  "+alltrim(kart->fio)+"  "+full_date(kart->date_r),80) color cColorWait
        human->(dbGoto(tmp->kod1h))
        f1_forma_131()
      elseif !empty(tmp->kod3h)
        @ maxrow(),0 say "ПРОФ "+padr(str(++ii/tmp->(lastrec())*100,6,2)+"%  "+alltrim(kart->fio)+"  "+full_date(kart->date_r),80) color cColorWait
        human->(dbGoto(tmp->kod3h))
        f11_forma_131()
      endif
  //    inkey(0)
      f_error_DVN(2)
      select TMP
      skip
    enddo
    close databases
    //
    fp := fcreate(n_file) ; n_list := 1 ; tek_stroke := 0
    add_string(glob_mo[_MO_SHORT_NAME])
    add_string(padl("Приложение №3",sh))
    add_string(padl("к Приказу МЗРФ",sh))
    add_string(padl("№1207н от 10.11.2020г.",sh))
    add_string("")
    add_string(padl("Отчетная форма № 131",sh))
    add_string("")
    add_string(center("Сведения о диспансеризации определённых групп взрослого населения",sh))
    titleN_uch(st_a_uch,sh,lcount_uch)
    add_string(center("[ "+charrem("~",mas1pmt[par])+" ]",sh))
    add_string(center(arr_m[4],sh))
    add_string("")
    add_string(center("Сведения о проведении профилактического медицинского осмотра (ПМО)",sh))
    add_string(center("и диспансеризации определённых групп взрослого населения (ДОГВН)",sh))
    add_string("Таблица 1000")
    add_string("─────────────────┬──────────────────────────┬──────────────────────────┬──────────────────────────")
    add_string("                 │           Всего          │          Мужчины         │          Женщины         ")
    add_string("Возрастная группа├─────┬─────┬──────┬───────┼─────┬─────┬──────┬───────┼─────┬─────┬──────┬───────")
    add_string("                 │ ПМО │ДОГВН│I этап│II этап│ ПМО │ДОГВН│I этап│II этап│ ПМО │ДОГВН│I этап│II этап")
    add_string("─────────────────┴─────┴─────┴──────┴───────┴─────┴─────┴──────┴───────┴─────┴─────┴──────┴───────")
    R_Use(dir_server+"organiz",,"ORG")
    ar := {}
    //aadd(ar, {15,1,glob_mo[_MO_FULL_NAME]})
    aadd(ar, {16,2,glob_mo[_MO_ADRES]})
    aadd(ar, {19,1,alltrim(org->okpo)})
    aadd(arr_excel, {"Сведения",aclone(ar)})
    ar := {}
    sm1 := sg1 := sm2 := sg2 := 0
    sm_1 := sg_1 := sm_2 := sg_2 := 0
    use (cur_dir+"tmp1000") new alias TMP
    go top
    do while !eof()
      i := recno()
      aadd(ar, {9+i,9,arr_plan_god[1,i]})
      aadd(ar, {9+i,10,tmp->vm1})
      aadd(ar, {9+i,11,tmp->vm2})
      aadd(ar, {9+i,13,arr_plan_god[2,i]})
      aadd(ar, {9+i,14,tmp->vg1})
      aadd(ar, {9+i,15,tmp->vg2})
      s := arr_v[i]
      add_string(padr(s,17)+put_val(tmp->vm1+tmp->vg1,6)+put_val(tmp->vm2+tmp->vg2,6)+;
                            put_val(tmp->vm_1+tmp->vg_1,7)+put_val(tmp->vm_2+tmp->vg_2,8)+;
                            put_val(tmp->vm1,6)+put_val(tmp->vm2,6)+;
                            put_val(tmp->vm_1,7)+put_val(tmp->vm_2,8)+;
                            put_val(tmp->vg1,6)+put_val(tmp->vg2,6)+;
                            put_val(tmp->vg_1,7)+put_val(tmp->vg_2,8))
      sm1 += tmp->vm1
      sg1 += tmp->vg1
      sm2 += tmp->vm2
      sg2 += tmp->vg2
      sm_1 += tmp->vm_1
      sg_1 += tmp->vg_1
      sm_2 += tmp->vm_2
      sg_2 += tmp->vg_2
      skip
    enddo
    add_string(replicate("─",98))
    add_string(padl("ИТОГО:",17)+put_val(sm1+sg1,6)+put_val(sm2+sg2,6)+;
                                 put_val(sm_1+sg_1,7)+put_val(sm_2+sg_2,8)+;
                                 put_val(sm1,6)+put_val(sm2,6)+;
                                 put_val(sm1,7)+put_val(sm2,8)+;
                                 put_val(sg1,6)+put_val(sg2,6)+;
                                 put_val(sg1,7)+put_val(sg2,8))
    //
    add_string("")
    add_string("Таблица 1000 план")
    add_string("─────────────────┬───────┬───────┬───────")
    add_string("                 │ Всего │Мужчины│Женщины")
    add_string("Возрастная группа├───────┼───────┼───────")
    add_string("                 │ ПЛАН  │ ПЛАН  │ ПЛАН  ")
    add_string("─────────────────┴───────┴───────┴───────")
    sm_1 := sg_1 := 0

    go top
    do while !eof()
      i := recno()
      s := arr_v[i]
      add_string(padr(s,17)+put_val(arr_plan_god[1,i]+arr_plan_god[2,i],8)+;
                            put_val(arr_plan_god[1,i],8)+;
                            put_val(arr_plan_god[2,i],8))
      sm_1 += arr_plan_god[1,i]
      sg_1 += arr_plan_god[2,i]
      skip
    enddo
    use
    add_string(replicate("─",40))
    add_string(padl("ИТОГО:",17)+put_val(sm_1+sg_1,8)+;
                                 put_val(sm_1,8)+;
                                 put_val(sg_1,8))
    //
    aadd(arr_excel, {"1000, 1001",aclone(ar)})
    //
    add_string("")
    add_string("")
    add_string(center("Сведения о приемах (осмотрах), консультациях, исследованиях и иных медицинских",sh))
    add_string(center("вмешательствах,  входящих в объем профилактического медицинского осмотра",sh))
    add_string(center("и первого этапа диспансеризации",sh))
    add_string("")
    add_string("Таблица 2000")
    add_string("─────────────────────────────────────────────────────────────┬──┬──────┬──────┬──────┬──────")
    add_string("Прием (Осмотр) (консультация), исследование                  │№с│провед│ ранее│отказы│отклон")
    add_string("─────────────────────────────────────────────────────────────┴──┴──────┴──────┴──────┴──────")
    ar := {} ; i := 0
    use (cur_dir+"tmp2000") new alias TMP
    go top
    do while !eof()
      ++i
      aadd(ar, {5+i,4,tmp->vv})
      if eq_any(i,1,19,20,21,22)
        if !empty(tmp->vr)
          aadd(ar, {5+i,5,tmp->vr})
        endif
      endif
      if !empty(tmp->vo)
        aadd(ar, {5+i,6,tmp->vo})
      endif
      if !empty(tmp->vd)
        aadd(ar, {5+i,7,tmp->vd})
      endif
      add_string(padr(tmp->name,61)+str(tmp->ns,3)+put_val(tmp->vv,7)+;
                 put_val(tmp->vr,7)+put_val(tmp->vo,7)+put_val(tmp->vd,7))
      skip
    enddo
    use
    //aadd(ar, {30,2,arr_7001[20,2]}) // число лиц, оформивших письменные отказы
    //
    //aadd(arr_excel, {"2000",aclone(ar)})
    //
    verify_FF(HH-40, .t., sh)
    add_string(center("Сведения о приемах (осмотрах), медицинских исследованиях и иных медицинских",sh))
    add_string(center("вмешательствах второго этапа диспансеризации",sh))
    add_string("")
    add_string("Таблица 3000")
    add_string("──────────────────────────────────────────────┬───┬──────┬──────┬──────┬──────┬──────")
    add_string("  Медицинское мероприятие                     │ №№│выявл.│выпол-│      │      │выявле")
    add_string("  второго этапа диспансеризаци                │ ст│показ.│нено  │ ранее│отказы│заболе")
    add_string("──────────────────────────────────────────────┴───┴──────┴──────┴──────┴──────┴──────")
    ar := {} ; i := 0
    use (cur_dir+"tmp3000") new alias TMP
    sv := sd := 0
    go top
    do while !eof()
      ++i
      if !empty(tmp->vv)
        aadd(ar, {10+i,4,tmp->vv})
        aadd(ar, {10+i,5,tmp->vv})
      endif
      if (10+i) != 23 .and. (10+i) != 24 .and. (10+i) != 25 .and.;
         (10+i) != 26 .and. (10+i) != 27
        if !empty(tmp->vd)
          aadd(ar, {10+i,9,tmp->vd})
        endif
        add_string(padr(tmp->name,46)+str(tmp->ns,4)+put_val(tmp->vv,7)+;
                   put_val(tmp->vv,7)+put_val(tmp->vd,21))
        sd += tmp->vd
      else
        add_string(padr(tmp->name,46)+str(tmp->ns,4)+put_val(tmp->vv,7)+;
                   put_val(tmp->vv,7))
      endif
      sv += tmp->vv
      skip
    enddo
    use
    //aadd(ar, {25,6,v3001}) // направлено к сердечно-сосудистому хирургу
    //aadd(ar, {27,2,0}) // число лиц, оформивших письменные отказы
    add_string(replicate("─",85))
    //d_string(padr("ИТОГО:",47)+str(17,3)+put_val(sv,7)+put_val(sv,7)+put_val(sd,21))
    //
    //aadd(arr_excel, {"2001, 3000",aclone(ar)})
    //
    add_string("")
    add_string("")
    add_string(center("Сведения о выявленных при проведении профилактического медицинского осмотра",sh))
    add_string(center("(диспасеризации) факторах риска и других патологических состояниях и заболеваниях, ",sh))
    add_string(center("повышающих вероятность развития хронических неинфекционных заболеваний",sh))
    add_string(center("(далее - факторы риска)",sh))
    add_string("")
    add_string("Таблица 4000")
    add_string("────────────────────────────────────────┬──┬─────────────────┬─────────────────┬─────────────────")
    add_string("                                        │№ │     Мужчины     │     Женщины     │      Всего      ")
    add_string("       Фактор риска развития            │ст├─────┬─────┬─────┼─────┬─────┬─────┼─────┬─────┬─────")
    add_string("       заболеваний                      │ро│всего│труд │НЕ тр│всего│труд │НЕ тр│всего│труд │НЕ тр")
    add_string("────────────────────────────────────────┴──┴─────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┴─────")
    ar := {} ; i := 0
    use (cur_dir+"tmp4000") new alias TMP
    go top
    do while !eof()
      ++i
      if !empty(tmp->m36)
        aadd(ar, {5+i, 4,tmp->m36})
      endif
      if !empty(tmp->m39)
        aadd(ar, {5+i, 5,tmp->m39})
      endif
      if !empty(tmp->mvv)
        aadd(ar, {5+i, 6,tmp->mvv})
      endif
      if !empty(tmp->g36)
        aadd(ar, {5+i, 8,tmp->g36})
      endif
      if !empty(tmp->g39)
        aadd(ar, {5+i, 9,tmp->g39})
      endif
      if !empty(tmp->gvv)
        aadd(ar, {5+i,10,tmp->gvv})
      endif
      add_string(padr(tmp->name,40)+str(tmp->ns,3)+;
                 put_val(tmp->mvv,6)+put_val(tmp->m36,6)+put_val(tmp->m39,6)+;
                 put_val(tmp->gvv,6)+put_val(tmp->g36,6)+put_val(tmp->g39,6)+;
                 put_val(tmp->vvv,6)+put_val(tmp->v36,6)+put_val(tmp->v39,6))
      skip
    enddo
    use
   // aadd(ar, {20, 9,v4001_1}) // уст.дисп.набл.врачом кабинета мед.профилактики
   // aadd(ar, {21, 9,v4001_2}) // уст.дисп.набл.врачом центра здоровья
   // aadd(ar, {22,14,v4002_1}) // направлено к писихиатру (алкоголь)
   // aadd(ar, {23,14,v4002_2}) // направлено к писихиатру (наркотики)
//  aadd(arr_excel, {"4000",aclone(ar)})
    verify_FF(HH-40, .t., sh)
    add_string(center("Заболевания, выявленные при проведении профилактического медицинского осмотра ",sh))
    add_string(center("(диспансеризации), установление диспансерного наблюдения ",sh))
    add_string("")
    add_string("Таблица 5000 ДВН")
    add_string("───────────────────────┬──────┬───────┬───────────────────────┬───────────────────────────────────")
    add_string("                       │  №№  │ Код по│  Выявлено заболеваний │       Впервые в жизни             ")
    add_string("     Заболевание       │строки│ МКБ-10├───────────┬───────────┼───────────┬───────────┬───────────")
    add_string("                       │      │       │   Всего   │в том числе│   Всего   │труд.возр-т│ст.труд.воз")
    add_string("                       │      │       ├─────┬─────┼─────┬─────┼─────┬─────┼─────┬─────┼─────┬─────")
    add_string("                       │      │       │     │уст. │В тр.│Стар.│     │уст. │     │уст. │     │уст. ")
    add_string("                       │      │       │всего│ ДН  │возр │тр.во│всего│ ДН  │всего│ ДН  │всего│ ДН  ")
    add_string("───────────────────────┴──────┴───────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┴─────")
    ar := {}
    use (cur_dir+"tmp5000") new alias TMP
    go top
    do while !eof()
      if (i := arr_5000[tmp->ns,1]) > 0
       /* if !empty(tmp->m36)
          aadd(ar, {i, 4,tmp->m36})
        endif
        if !empty(tmp->m39)
          aadd(ar, {i, 5,tmp->m39})
        endif
        if !empty(tmp->mvv)
          aadd(ar, {i, 6,tmp->mvv})
        endif
        if !empty(tmp->g36)
          aadd(ar, {i, 8,tmp->g36})
        endif
        if !empty(tmp->g39)
          aadd(ar, {i, 9,tmp->g39})
        endif
        if !empty(tmp->gvv)
          aadd(ar, {i,10,tmp->gvv})
        endif
        if !empty(tmp->dispans)
          aadd(ar, {i,16,tmp->dispans})
        endif
        */
      else
        add_string(replicate("─",80))
      endif
      add_string(padr(tmp->name,23)+padc(tmp->stroke,8)+padc(alltrim(tmp->diagnoz),7)+;
                 put_val((tmp->dispans0+tmp->vg11+tmp->vg13),6)+;
                 put_val(tmp->dispans0,6)+;
                 put_val(tmp->vtr,6)+;
                 put_val(tmp->vsttr,6)+;
                 put_val((tmp->vg10+tmp->vg12),6)+;
                 put_val(tmp->vg10,6)+;
                 put_val(tmp->vg11,6)+;
                 put_val(tmp->vg12,6)+;
                 put_val(tmp->vg13,6))
      skip
    enddo
    use
    //
    //aadd(arr_excel, {"5000 и 5001 ДВН",f2_forma_131(ar)})
    //
    verify_FF(HH-40, .t., sh)
    add_string(center("Заболевания, выявленные при проведении профилактического медицинского осмотра ",sh))
    add_string(center("(диспансеризации), установление диспансерного наблюдения ",sh))
    add_string("")
    add_string("Таблица 5000 ПО")
    add_string("───────────────────────┬──────┬───────┬───────────────────────┬───────────────────────────────────")
    add_string("                       │  №№  │ Код по│  Выявлено заболеваний │       Впервые в жизни             ")
    add_string("     Заболевание       │строки│ МКБ-10├───────────┬───────────┼───────────┬───────────┬───────────")
    add_string("                       │      │       │   Всего   │в том числе│   Всего   │труд.возр-т│ст.труд.воз")
    add_string("                       │      │       ├─────┬─────┼─────┬─────┼─────┬─────┼─────┬─────┼─────┬─────")
    add_string("                       │      │       │     │уст. │В тр.│Стар.│     │уст. │     │уст. │     │уст. ")
    add_string("                       │      │       │всего│ ДН  │возр │тр.во│всего│ ДН  │всего│ ДН  │всего│ ДН  ")
    add_string("───────────────────────┴──────┴───────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┴─────┴─────")
        ar := {}
    use (cur_dir+"tmp5001") new alias TMP
    go top
    do while !eof()
      if (i := arr_5001[tmp->ns,1]) > 0
      /*  if tmp->ns < len5001-1
          if !empty(tmp->m361)
            aadd(ar, {i, 4,tmp->m361})
          endif
          if !empty(tmp->m391)
            aadd(ar, {i, 5,tmp->m391})
          endif
          if !empty(tmp->mvv1)
            aadd(ar, {i, 6,tmp->mvv1})
          endif
          if !empty(tmp->g361)
            aadd(ar, {i, 8,tmp->g361})
          endif
          if !empty(tmp->g391)
            aadd(ar, {i, 9,tmp->g391})
          endif
          if !empty(tmp->gvv1)
            aadd(ar, {i,10,tmp->gvv1})
          endif
          if !empty(tmp->dispans1)
            aadd(ar, {i,16,tmp->dispans1})
          endif
        endif
        */
      else
        add_string(replicate("─",80))
      endif
      add_string(padr(tmp->name,23)+padc(tmp->stroke,8)+padc(alltrim(tmp->diagnoz),7)+;
                 put_val((tmp->dispans0+tmp->vg11+tmp->vg13),6)+;
                 put_val(tmp->dispans0,6)+;
                 put_val(tmp->vtr,6)+;
                 put_val(tmp->vsttr,6)+;
                 put_val((tmp->vg10+tmp->vg12),6)+;
                 put_val(tmp->vg10,6)+;
                 put_val(tmp->vg11,6)+;
                 put_val(tmp->vg12,6)+;
                 put_val(tmp->vg13,6))
      skip
    enddo
    use
 /*   verify_FF(HH-40, .t., sh)
    add_string(center("Сведения об установленных предварительных диагнозах (случаев)",sh))
    add_string("")
    add_string("Таблица 6000")
    add_string("───────────────────────┬──────┬───────┬─────────────────┬─────────────────┬─────")
    add_string("                       │  №№  │ Код по│     Мужчины     │     Женщины     │На   ")
    add_string("     Заболевание       │строки│ МКБ-10├─────┬─────┬─────┼─────┬─────┬─────┤допол")
    add_string("                       │      │       │до 36│39-60│> 60л│до 36│39-60│> 60л│обсле")
    add_string("───────────────────────┴──────┴───────┴─────┴─────┴─────┴─────┴─────┴─────┴─────")
    ar := {}
    use (cur_dir+"tmp5000") new alias TMP
    go top
    do while !eof()
      if (i := arr_5000[tmp->ns,1]) > 0
        if !empty(tmp->m36p)
          aadd(ar, {i, 4,tmp->m36p})
        endif
        if !empty(tmp->m39p)
          aadd(ar, {i, 5,tmp->m39p})
        endif
        if !empty(tmp->mvvp)
          aadd(ar, {i, 6,tmp->mvvp})
        endif
        if !empty(tmp->g36p)
          aadd(ar, {i, 8,tmp->g36p})
        endif
        if !empty(tmp->g39p)
          aadd(ar, {i, 9,tmp->g39p})
        endif
        if !empty(tmp->gvvp)
          aadd(ar, {i,10,tmp->gvvp})
        endif
        if !empty(tmp->nap_dop)
          aadd(ar, {i,16,tmp->nap_dop})
        endif
      else
        add_string(replicate("─",80))
      endif
      add_string(padr(tmp->name,23)+padc(tmp->stroke,8)+padc(alltrim(tmp->diagnoz),7)+;
                 put_val(tmp->m36p,6)+put_val(tmp->m39p,6)+put_val(tmp->mvvp,6)+;
                 put_val(tmp->g36p,6)+put_val(tmp->g39p,6)+put_val(tmp->gvvp,6)+;
                 put_val(tmp->nap_dop,6))
      skip
    enddo
    use
    */
//    aadd(arr_excel, {"6000",f2_forma_131(ar)})
    verify_FF(HH-40, .t., sh)
    add_string(center("Общие результаты диспансеризации ...",sh))
    add_string("")
    add_string("Таблица 6000-6010")
    add_string("─────────────────────────────────────────┬──┬──────────┬───────────────┬───────────────")
    add_string("Результат диспансеризации определенных   │№ │   ВСЕГО  │Трудоспособного│Не трудоспособн")
    add_string("групп взрослого населения                │ст├──────────┼───────────────┼───────────────")
    add_string("                                         │ро│          │               │               ")
    add_string("─────────────────────────────────────────┴──┴──────────┴───────────────┴───────────────")
    ar := {} ; i := 0
    use (cur_dir+"tmp7000") new alias TMP
    go top
    do while !eof()
      ++i
      /*
      if !empty(tmp->m36)
        aadd(ar, {5+i,3,tmp->m36})
      endif
      if !empty(tmp->m39)
        aadd(ar, {5+i,4,tmp->m39})
      endif
      if !empty(tmp->mvv)
        aadd(ar, {5+i,5,tmp->mvv})
      endif
      if !empty(tmp->g36)
        aadd(ar, {5+i,6,tmp->g36})
      endif
      if !empty(tmp->g39)
        aadd(ar, {5+i,7,tmp->g39})
      endif
      if !empty(tmp->gvv)
        aadd(ar, {5+i,8,tmp->gvv})
      endif
      */
        add_string(padr(tmp->name,41)+" "+tmp->ns+;
                   put_val(tmp->tr+tmp->ntr,10)+;
                   put_val(tmp->tr,16)+;
                   put_val(tmp->ntr,16))
      skip
    enddo
    use
    add_string(replicate("─",sh))
    add_string("")
    // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    //arr_7001[2,2] += arr_7001[3,2] // прибавим студентов к неработающим
    // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
    for n := 1 to len(arr_7001)
      if arr_7001[n,3] > 0
        aadd(ar, {arr_7001[n,3],7,arr_7001[n,2]})
      endif
      add_string(padr(arr_7001[n,1],sh-6)+put_val(arr_7001[n,2],6))
    next
//    aadd(arr_excel, {"7000",aclone(ar)})
    //
    verify_FF(HH-8-len(arr_vrach), .t., sh)
    add_string("")
    add_string(center("Отчёт о работе врачей-терапевтов по диспансеризации",sh))
    add_string("")
    add_string("──────────────────────────────────────────────┬──────┬──────┬──────┬──────")
    add_string("                                              │прошло│прошло│прошло│прошло")
    add_string("     Врач                                     │1 этап│2 этап│проф- │дисп-ю")
    add_string("                                              │(чел.)│(чел.)│осмотр│1р.в2г")
    add_string("──────────────────────────────────────────────┴──────┴──────┴──────┴──────")
    R_Use(dir_server+"mo_pers",,"PERS")
    for i := 1 to len(arr_vrach)
      goto (arr_vrach[i,1])
      arr_vrach[i,2] := pers->tab_nom
      arr_vrach[i,3] := pers->fio
    next
    asort(arr_vrach,,,{|x,y| upper(x[3]) < upper(y[3])})
    for i := 1 to len(arr_vrach)
      add_string(padr(str(i,3)+". ["+lstr(arr_vrach[i,2])+"] ",13)+padr(arr_vrach[i,3],33)+;
                 put_val(arr_vrach[i,4],7)+put_val(arr_vrach[i,5],7)+;
                 put_val(arr_vrach[i,6],7)+put_val(arr_vrach[i,7],7))
    next
    f_error_DVN(3,HH,sh)
    fclose(fp)
    rest_box(buf)
    close databases
    viewtext(n_file,,,,.t.,,,5)
//    fill_in_Excel_Book(dir_exe+"mo_131_21"+sxls,;
//                       cur_dir+"__131_21"+sxls,;
//                       arr_excel,;
//                       "присланный из ВОМИАЦ")
  endif
endif
close databases
rest_box(buf)
return NIL


***** 15.09.19 Поиск ошибок сочетаний разных видов осмотров
Function f_error_DVN(k,HH,sh)
Static arr := {}, arr_title := {;
  "────────────────────────────────────────────┬────────┬────────┬────────┬────────",;
  "                                            │дисп-ия │дисп-ия │ проф-  │дисп-ия ",;
  "     ФИО пациента                           │ 1 этап │ 2 этап │ осмотр │раз в 2г",;
  "────────────────────────────────────────────┴────────┴────────┴────────┴────────"}
Local i
if k == 1
  arr := {}
elseif k == 2
  if !empty(tmp->kod4h) // есть диспансеризация 1 раз в 2 года
    human->(dbGoto(tmp->kod4h))
    if type("arr_vrach") == "A"
      if (i := ascan(arr_vrach, {|x| x[1] == human_->VRACH })) == 0
        aadd(arr_vrach, {human_->VRACH,0,"",0,0,0,0}) ; i := len(arr_vrach)
      endif
      arr_vrach[i,7] ++
    endif
    if !emptyall(tmp->kod1h,tmp->kod2h,tmp->kod3h)
      aadd(arr,{" "," "," ","+",tmp->kod_k})
    endif
  elseif !empty(tmp->kod1h) // есть диспансеризация первый этап
    if !emptyall(tmp->kod3h)
      aadd(arr,{"+"," "," "," ",tmp->kod_k})
    endif
  elseif !empty(tmp->kod2h) // есть диспансеризация второй этап
    aadd(arr,{" "," "," "," ",tmp->kod_k})
  elseif !empty(tmp->kod3h) // есть профосмотр
    human->(dbGoto(tmp->kod3h))
    if type("arr_vrach") == "A"
      if (i := ascan(arr_vrach, {|x| x[1] == human_->VRACH })) == 0
        aadd(arr_vrach, {human_->VRACH,0,"",0,0,0,0}) ; i := len(arr_vrach)
      endif
      arr_vrach[i,6] ++
    endif
  endif
elseif len(arr) > 1
  R_Use(dir_server+"kartotek",,"KART")
  use (cur_dir+"tmp") new
  index on str(kod_k,7) to (cur_dir+"tmp")
  verify_FF(HH-8, .f., sh)
  add_string("")
  add_string(center("Несовместимые медосмотры",sh))
  add_string(center('(знаком "+" отмечены осмотры, учитываемые в статистике)',sh))
  aeval(arr_title,{|x| add_string(x) })
  for i := 1 to len(arr)
    select TMP
    find (str(arr[i,5],7))
    kart->(dbGoto(arr[i,5]))
    s := padr(lstr(i)+". "+kart->fio,44)
    s += iif(empty(tmp->kod1h), space(9), arr[i,1]+date_8(tmp->date1))
    s += iif(empty(tmp->kod2h), space(9), arr[i,2]+date_8(tmp->date2))
    s += iif(empty(tmp->kod3h), space(9), arr[i,3]+date_8(tmp->date3))
    s += iif(empty(tmp->kod4h), space(9), arr[i,4]+date_8(tmp->date4))
    if verify_FF(HH, .f., sh)
      aeval(arr_title,{|x| add_string(x) })
    endif
    add_string(s)
  next
endif
return (len(arr) > 0)

***** 01.06.21
Function f1_forma_131(Loc_kod,kod_kartotek) // 131
Local i, j, k, fl, lshifr, au := {}, a7[12], ar, metap, m1gruppa, m1gruppa2 := 0,;
      mpol, fl2 := .f., fl_dispans := .f., ivozrast
// диспансеризация I этап
human->(dbGoto(tmp->kod1h))
mpol := human->pol
m1GRUPPA := ret_gruppa_DVN(human_->RSLT_NEW,@fl2)
if !between(m1gruppa,0,4)
  return NIL
endif
if (i := ascan(arr_vrach, {|x| x[1] == human_->VRACH })) == 0
  aadd(arr_vrach, {human_->VRACH,0,"",0,0,0,0}) ; i := len(arr_vrach)
endif
arr_vrach[i,4] ++
Private arr_otklon := {}, arr_usl_otkaz := {}, mvozrast, mdvozrast,;
        M1RAB_NERAB := human->RAB_NERAB, m1veteran := 0, m1mobilbr := 0,;
        m1kurenie := 0, mad1 := 120, mad2 := 80, m1tip_mas := 0, mssr := 0,;
        m1holestdn := 0, m1glukozadn := 0, m1fiz_akt := 0, m1ner_pit := 0, ;
        mholest := 0, mglukoza := 0, ;
        m1riskalk := 0, m1pod_alk := 0, m1psih_na := 0, ;
        m1ot_nasl1 := 0, m1ot_nasl2 := 0, m1ot_nasl3 := 0, m1ot_nasl4 := 0,;
        m1dispans := 0, m1nazn_l  := 0, m1dopo_na := 0, m1ssh_na  := 0,;
        m1spec_na := 0, m1sank_na := 0,;
        pole_diag, pole_1pervich, pole_1stadia, pole_1dispans,;
        mWEIGHT := 0, mHEIGHT := 0, iivozrast := 0, tmp_select
for i := 1 to 5
  pole_diag := "mdiag"+lstr(i)
  pole_1pervich := "m1pervich"+lstr(i)
  pole_1stadia := "m1stadia"+lstr(i)
  pole_1dispans := "m1dispans"+lstr(i)
  Private &pole_diag := space(6)
  Private &pole_1pervich := 0
  Private &pole_1stadia := 0
  Private &pole_1dispans := 0
next
read_arr_DVN(human->kod)
ret_tip_mas(mWEIGHT,mHEIGHT,@m1tip_mas)
mvozrast := count_years(human->date_r,human->n_data)
mdvozrast := year(human->n_data) - year(human->date_r)
dvn_prof := ret_PF_DVN(human_->RSLT_NEW)
if m1veteran == 1
  mdvozrast := ret_vozr_DVN_veteran(mdvozrast,human->k_data)
endif
if mdvozrast <= 34
  ivozrast := 1
elseif mdvozrast <= 39
  ivozrast := 2
elseif mdvozrast <= 54
  ivozrast := 3
elseif mdvozrast <= 59
  ivozrast := 4
elseif mdvozrast <= 64
  ivozrast := 5
elseif mdvozrast <= 74
  ivozrast := 6
else
  ivozrast := 7
endif

if mpol == "М"
 if mdvozrast < 62
   iivozrast := 1
 else
   iivozrast := 2
 endif
else
 if mdvozrast < 57
   iivozrast := 1
 else
   iivozrast := 2
 endif
endif
//
if mpol == "М"
  tmp1000->vm_1 ++
else
  tmp1000->vg_1 ++
endif
//
select TMP1000
goto (ivozrast)
// разобрать ПРОФ/ДИСП
// !!! ВНИМАНИЕ
if fl2 // направлен на 2 этап
  arr_7001[22,2] ++
  arr_7001[23,2] ++
elseif !empty(tmp->kod2h)
  human->(dbGoto(tmp->kod2h))
  m1GRUPPA2 := ret_gruppa_DVN(human_->RSLT_NEW)
  if between(m1gruppa2,1,4) // точно прошёл 2 этап
    arr_7001[22,2] ++
    arr_7001[23,2] ++
    if mpol == "М"
      tmp1000->vm2 ++
    else
      tmp1000->vg2 ++
    endif
  endif
  human->(dbGoto(tmp->kod1h)) // вернуться на л/у первого этапа
else
    if mpol == "М"
      tmp1000->vm2 ++
    else
      tmp1000->vg2 ++
    endif
endif

select HU
find (str(tmp->kod1h,7))
do while hu->kod == tmp->kod1h .and. !eof()
  usl->(dbGoto(hu->u_kod))
  if empty(lshifr := opr_shifr_TFOMS(usl->shifr1,usl->kod,human->k_data))
    lshifr := usl->shifr
  endif
  if !eq_any(left(lshifr,5),"70.3.","70.7.","72.1.","72.5.","72.6.","72.7.")
    aadd(au,{alltrim(lshifr),;
             hu_->PROFIL,;
             iif(left(hu_->kod_diag,1)=="Z","",hu_->kod_diag),;
             c4tod(hu->date_u);
            })
  endif
  select HU
  skip
enddo
for k := 1 to len(au)
  if ascan(arr_otklon,au[k,1]) > 0
    au[k,3] := "1" // отклонения в исследовании
    if eq_any(au[k,1],"4.20.1","4.20.2") // если отклонения в исследовании цитологич.материала
      if (i := ascan(au, {|x| x[1] == "4.1.12"})) > 0
        au[i,3] := "1" // занесём отклонения в осмотр фельдшера "4.1.12"
      endif
    endif
  endif
next
select TMP2000
for i := 1 to len(arr_2000)
  fl := fl_otkaz := .f.
  if valtype(arr_usl_otkaz) == "A"
    for k1 := 1 to len(arr_usl_otkaz)
      ar := arr_usl_otkaz[k1]
      if valtype(ar) == "A" .and. len(ar) >= 10 .and. valtype(ar[5]) == "C" ;
                               .and. valtype(ar[10]) == "N" .and. ar[10] == 1
        lshifr := alltrim(ar[5])
        if valtype(arr_2000[i,3]) == "C"
          if lshifr == arr_2000[i,3]
            fl := fl_otkaz := .t.
          endif
        elseif valtype(arr_2000[i,3,1]) == "C"
          for j := 1 to len(arr_2000[i,3])
            if lshifr == arr_2000[i,3,j]
              fl := fl_otkaz := .t.
              exit
            endif
          next
        else
          for j := 1 to len(arr_2000[i,3])
            if lshifr == arr_2000[i,3,j,1] .and. ar[4] == arr_2000[i,3,j,2]
              fl := fl_otkaz := .t.
              exit
            endif
          next
        endif
      endif
      if fl ; exit ; endif
    next
  endif
  if !fl_otkaz
    if valtype(arr_2000[i,3]) == "C"
      if (k := ascan(au, {|x| x[1] == arr_2000[i,3]})) > 0
        fl := .t.
      endif
    elseif valtype(arr_2000[i,3,1]) == "C"
      for j := 1 to len(arr_2000[i,3])
        if (k := ascan(au, {|x| x[1] == arr_2000[i,3,j]})) > 0
          fl := .t. ; exit
        endif
      next
    else
      for j := 1 to len(arr_2000[i,3])
//    My_DEBUG(,print_array(arr_2000[i,3]))
        if (k := ascan(au, {|x| x[1]==arr_2000[i,3,j,1] .and. x[2]==arr_2000[i,3,j,2]})) > 0
          fl := .t. ; exit
        endif
      next
    endif
  endif
  if fl .and. len(arr_2000[i]) > 3
    fl := &(arr_2000[i,4])
  endif
  if fl
    find (str(arr_2000[i,1],3))
    if found()
      if fl_otkaz
        tmp2000->vo ++
        arr_7001[20,2] ++
      else
        tmp2000->vv ++
        if au[k,4] < human->n_data
          tmp2000->vr ++
        endif
        if !empty(au[k,3]) // отклонения (или диагноз)
          tmp2000->vd ++
        endif
      endif
    endif
  endif
next
select TMP4000
for i := 1 to len(arr_4000)
  //my_debug(,arr_4000[i,3]+"  "+str(i))
  //my_debug(,str(arr_4000[i,1],2)+"  "+str(i))

  if &(arr_4000[i,3])
    find (str(arr_4000[i,1],2))
    if found()
      if mpol == "М"
        if iivozrast == 1
          tmp4000->m36 ++
        elseif iivozrast == 2
          tmp4000->m39 ++
        endif
        tmp4000->mvv ++
      else
        if iivozrast == 1
          tmp4000->g36 ++
        elseif iivozrast == 2
          tmp4000->g39 ++
        endif
        tmp4000->gvv ++
      endif
      if iivozrast == 1
        tmp4000->v36 ++
      elseif iivozrast == 2
        tmp4000->v39 ++
      endif
      tmp4000->vvv ++
    endif
  endif
next
if m1ssh_na == 1
  v3001 ++ // направлен к сердечно-сосудистому хирургу
endif
if m1psih_na == 1 // Направлен к врачу-психиатру (врачу-психиатру-наркологу)
  if m1pod_alk == 1 // Риск потребления наркотических/психотропных веществ без назначения врача
    v4002_2 ++
  else // Риск пагубного потребления алкоголя (употребление алкоголя)
    v4002_1 ++
  endif
endif
afill(a7,.f.)

if f_is_selo()
 //  if m1mobilbr == 1
 //   arr_7001[19,2] ++
 // endif
 arr_7001[25,2] ++
endif
if M1RAB_NERAB == 0
  arr_7001[1,2] ++
elseif M1RAB_NERAB == 1
  arr_7001[2,2] ++
else
  arr_7001[3,2] ++
endif
if (i := ascan(stm_kategor, {|x| x[2] == kart_->kategor })) > 0 .and. between(stm_kategor[i,3],1,8)
  arr_7001[4,2] ++  // всего льготников
//  arr_7001[4+stm_kategor[i,3],2] ++  // по каждой льготе расшифровка
endif
if m1mobilbr == 1
  arr_7001[18,2] ++
endif
// диспансеризация II этап
if !empty(tmp->kod2h)
  human->(dbGoto(tmp->kod2h))
  m1GRUPPA2 := ret_gruppa_DVN(human_->RSLT_NEW)
  if between(m1gruppa2,1,4) // точно прошёл 2 этап
    if (i := ascan(arr_vrach, {|x| x[1] == human_->VRACH })) == 0
      aadd(arr_vrach, {human_->VRACH,0,"",0,0,0,0}) ; i := len(arr_vrach)
    endif
    arr_vrach[i,5] ++
    m1GRUPPA := m1GRUPPA2 // переприсвоить группу
    read_arr_DVN(human->kod) // перечитать диагнозы и т.п.
    if mpol == "М"
      tmp1000->vm2 ++
      tmp1000->vm_2 ++
    else
      tmp1000->vg2 ++
      tmp1000->vg_2 ++
    endif

    arr_7001[22,2] --
    arr_7001[24,2] ++
    select HU
    find (str(tmp->kod2h,7))
    do while hu->kod == tmp->kod2h .and. !eof()
      usl->(dbGoto(hu->u_kod))
      if empty(lshifr := opr_shifr_TFOMS(usl->shifr1,usl->kod,human->k_data))
        lshifr := usl->shifr
      endif
      aadd(au,{alltrim(lshifr),;
               hu_->PROFIL,;
               iif(left(hu_->kod_diag,1)=="Z","",hu_->kod_diag);
              })
      select HU
      skip
    enddo
    for k := 1 to len(au)
      if ascan(arr_otklon,au[k,1]) > 0
        au[k,3] := "1" // отклонения в исследовании
      endif
    next
    // Проверяем на наличие Направлений при подозрении на ЗНО
    //R_Use(dir_server+"mo_onkna",dir_server+"mo_onkna","NAPR")
    select NAPR
    find(str(tmp->kod2h,7))
    if found()
      select TMP3000
      goto 19
      tmp3000->vv ++
    endif
    //
    select TMP3000
    for k := 1 to len(au)
      fl := .f.
      for i := 1 to len(arr_3000)
        if valtype(arr_3000[i,3]) == "A"
          fl := (ascan(arr_3000[i,3],au[k,1]) > 0)
        else
          fl := (au[k,1]==arr_3000[i,3])
        endif
        if fl ; exit ; endif
      next
      if fl
        find (str(arr_3000[i,1],2))
        if found()
          if 17 == tmp3000->(recno())
            if mssr > 4
              tmp3000->vv ++
            endif
          elseif 16 == tmp3000->(recno())
            // проверяем на диагноз R54
            for i := 1 to 5
              pole_diag := "mdiag"+lstr(i)
              if !empty(&pole_diag)
                d := diag_to_num(&pole_diag,1)
                if padr(str(d),4) == "8254"
                  tmp3000->vv ++
                endif
              endif
            next
          elseif 15 == tmp3000->(recno())
            if m1riskalk == 1 .or. m1pod_alk == 1
              tmp3000->vv ++
            endif
          elseif 14 == tmp3000->(recno())
            if padr(str(d),4) == "7325" .or. ;
               padr(str(d),4) == "7363" .or. ;
               padr(str(d),5) == "73702"
              tmp3000->vv ++
            endif
          else
            tmp3000->vv ++
            if !empty(au[k,3]) // добавить отклонения для исследований
              tmp3000->vd ++
            endif
          endif
        endif
      endif
    next
  endif
endif
if between(m1gruppa,1,4)
  a7[m1gruppa] := .t.
endif
//a7[5] := (m1nazn_l  == 1) // {5,"Назначено лечение"},;
a7[5] := (m1dopo_na > 0)  // {6,"Направлено на дополнительное диагностическое"},;
a7[11] := (m1spec_na == 1) // {7,"Направлено для получения спец., в т.ч.ВМП"},;
a7[12] := (m1sank_na == 1) // {8,"Направлено на санаторно-курортное лечение"};
for i := 1 to 5
  pole_diag := "mdiag"+lstr(i)
  pole_1pervich := "m1pervich"+lstr(i)
  pole_1stadia := "m1stadia"+lstr(i)
  pole_1dispans := "m1dispans"+lstr(i)
  if !empty(&pole_diag) .and. !(left(&pole_diag,1) == "Z")
    au := {} ; au1 := {}
    d := diag_to_num(&pole_diag,1)
    for n := 1 to len5000
      r := diag5000[n]
      for j := 1 to len(r)
        fl := between(d,r[j,1],r[j,2])
        if fl .and. len(arr_5000[n]) > 4 // надо проверить стадию
          if human->k_data < d_01_04_2015
            fl := (&pole_1stadia == 0) // ранняя      !!!!!
          else
            fl := (&pole_1stadia < 3) // 1 и 2 стадия !!!!!
          endif
        endif
        if fl
          aadd(au,n)
        endif
      next
    next
/*    if empty(au) // заносим в прочие заболевания
      aadd(au,len5000-1)
      if &pole_1pervich == 1 // впервые
        for n := 1 to len5001
          my_debug(,str())

          r := diag5001[n]
          my_debug(,)
          for j := 1 to len(r)
            if between(d,r[j,1],r[j,2])
              aadd(au1,n)
            endif
          next
        next
      endif
    endif
*/
    aadd(au,len5000) // всегда заносим в ИТОГО
    select TMP5000
    for j := 1 to len(au)
      find (str(au[j],2))
      if found()
        if &pole_1pervich == 0 // ранее выявленный
          if iivozrast == 1 // работающие
            tmp5000->vtr ++
          else
            tmp5000->vsttr ++
          endif
          if &pole_1dispans == 1
            tmp5000->dispans0 ++
          endif
        elseif &pole_1pervich == 1 // впервые
          if iivozrast == 1 // работающие
            tmp5000->vg10 ++
            if &pole_1dispans == 1
              tmp5000->vg11 ++
            endif
          else
            tmp5000->vg12 ++
            if &pole_1dispans == 1
              tmp5000->vg13 ++
            endif
          endif
        endif
      endif
    next
  endif
next
if fl_dispans
  if m1dispans == 1 // Диспансерное наблюдение установлено врачом отд.мед.профилактики
    v4001_1 ++
  elseif m1dispans == 2 // Диспансерное наблюдение установлено врачом центра здоровья
    v4001_2 ++
  endif
endif
select TMP7000
for i := 1 to 12
  if a7[i]
    //find (str(i,2))
    goto (i)
    //if found()
      if iivozrast == 1
        tmp7000->tr ++
      else
        tmp7000->ntr ++
      endif
    //endif
  endif
next
return NIL

***** 30.05.21
Function f11_forma_131(Loc_kod,kod_kartotek) // 131
Local i, j, k, fl, lshifr, au := {}, a7[12], ar, metap, m1gruppa, m1gruppa2 := 0,;
      mpol, fl2 := .f., fl_dispans := .f., ivozrast
// диспансеризация I этап
human->(dbGoto(tmp->kod3h))
mpol := human->pol
Private arr_otklon := {}, arr_usl_otkaz := {}, mvozrast, mdvozrast,;
        M1RAB_NERAB := human->RAB_NERAB, m1veteran := 0, m1mobilbr := 0,;
        m1kurenie := 0, mad1 := 120, mad2 := 80, m1tip_mas := 0, mssr := 0,;
        m1holestdn := 0, m1glukozadn := 0, m1fiz_akt := 0, m1ner_pit := 0, ;
        mholest := 0, mglukoza := 0, ;
        m1riskalk := 0, m1pod_alk := 0, m1psih_na := 0, ;
        m1ot_nasl1 := 0, m1ot_nasl2 := 0, m1ot_nasl3 := 0, m1ot_nasl4 := 0,;
        m1dispans := 0, m1nazn_l  := 0, m1dopo_na := 0, m1ssh_na  := 0,;
        m1spec_na := 0, m1sank_na := 0,;
        pole_diag, pole_1pervich, pole_1stadia, pole_1dispans,;
        mWEIGHT := 0, mHEIGHT := 0, iivozrast := 0
for i := 1 to 5
  pole_diag := "mdiag"+lstr(i)
  pole_1pervich := "m1pervich"+lstr(i)
  pole_1stadia := "m1stadia"+lstr(i)
  pole_1dispans := "m1dispans"+lstr(i)
  Private &pole_diag := space(6)
  Private &pole_1pervich := 0
  Private &pole_1stadia := 0
  Private &pole_1dispans := 0
next
afill(a7,.f.)
read_arr_DVN(human->kod)
ret_tip_mas(mWEIGHT,mHEIGHT,@m1tip_mas)
mvozrast := count_years(human->date_r,human->n_data)
mdvozrast := year(human->n_data) - year(human->date_r)
if m1veteran == 1
  mdvozrast := ret_vozr_DVN_veteran(mdvozrast,human->k_data)
endif
if mdvozrast <= 34
  ivozrast := 1
elseif mdvozrast <= 39
  ivozrast := 2
elseif mdvozrast <= 54
  ivozrast := 3
elseif mdvozrast <= 59
  ivozrast := 4
elseif mdvozrast <= 64
  ivozrast := 5
elseif mdvozrast <= 74
  ivozrast := 6
else
  ivozrast := 7
endif
//
if mpol == "М"
 if mdvozrast < 62
   iivozrast := 1
 else
   iivozrast := 2
 endif
else
 if mdvozrast < 57
   iivozrast := 1
 else
   iivozrast := 2
 endif
endif
//
select TMP1000
goto (ivozrast)
  // профы
if mpol == "М"
  tmp1000->vm1 ++
else
  tmp1000->vg1 ++
endif
//

select HU
find (str(tmp->kod3h,7))  // tmp->kod1h
do while hu->kod == tmp->kod3h .and. !eof()
  usl->(dbGoto(hu->u_kod))
  if empty(lshifr := opr_shifr_TFOMS(usl->shifr1,usl->kod,human->k_data))
    lshifr := usl->shifr
  endif
  if !eq_any(left(lshifr,5),"70.3.","70.7.","72.1.","72.5.","72.6.","72.7.")
    aadd(au,{alltrim(lshifr),;
             hu_->PROFIL,;
             iif(left(hu_->kod_diag,1)=="Z","",hu_->kod_diag),;
             c4tod(hu->date_u);
            })
  endif
  select HU
  skip
enddo
for k := 1 to len(au)
  if ascan(arr_otklon,au[k,1]) > 0
    au[k,3] := "1" // отклонения в исследовании
    if eq_any(au[k,1],"4.20.1","4.20.2") // если отклонения в исследовании цитологич.материала
      if (i := ascan(au, {|x| x[1] == "4.1.12"})) > 0
        au[i,3] := "1" // занесём отклонения в осмотр фельдшера "4.1.12"
      endif
    endif
  endif
next
select TMP2000
for i := 1 to len(arr_2000)
    //my_debug(,"0=  "+str(arr_2000[i,1],3))

  fl := fl_otkaz := .f.
  if valtype(arr_usl_otkaz) == "A"
    for k1 := 1 to len(arr_usl_otkaz)
      ar := arr_usl_otkaz[k1]
      if valtype(ar) == "A" .and. len(ar) >= 10 .and. valtype(ar[5]) == "C" ;
                               .and. valtype(ar[10]) == "N" .and. ar[10] == 1
        lshifr := alltrim(ar[5])
        if valtype(arr_2000[i,3]) == "C"
          if lshifr == arr_2000[i,3]
            fl := fl_otkaz := .t.
          endif
        elseif valtype(arr_2000[i,3,1]) == "C"
          for j := 1 to len(arr_2000[i,3])
            if lshifr == arr_2000[i,3,j]
              fl := fl_otkaz := .t.
              exit
            endif
          next
        else
          for j := 1 to len(arr_2000[i,3])
            if lshifr == arr_2000[i,3,j,1] .and. ar[4] == arr_2000[i,3,j,2]
              fl := fl_otkaz := .t.
              exit
            endif
          next
        endif
      endif
      if fl ; exit ; endif
    next
  endif
  if !fl_otkaz
    if valtype(arr_2000[i,3]) == "C"
      if (k := ascan(au, {|x| x[1] == arr_2000[i,3]})) > 0
        fl := .t.
      endif
    elseif valtype(arr_2000[i,3,1]) == "C"
      for j := 1 to len(arr_2000[i,3])
        if (k := ascan(au, {|x| x[1] == arr_2000[i,3,j]})) > 0
          fl := .t. ; exit
        endif
      next
    else
      for j := 1 to len(arr_2000[i,3])
        if (k := ascan(au, {|x| x[1]==arr_2000[i,3,j,1] .and. x[2]==arr_2000[i,3,j,2]})) > 0
          fl := .t. ; exit
        endif
      next
    endif
  endif
  if fl .and. len(arr_2000[i]) > 3
    fl := &(arr_2000[i,4])
  endif
  if fl
    find (str(arr_2000[i,1],3))
    if found()
      if fl_otkaz
        tmp2000->vo ++
//        arr_7001[20,2] ++
      else
        tmp2000->vv ++
        if au[k,4] < human->n_data
          tmp2000->vr ++
        endif
        if !empty(au[k,3]) // отклонения (или диагноз)
          tmp2000->vd ++
        endif
      endif
    endif
  endif
next

select TMP4000
for i := 1 to len(arr_4000)
  if &(arr_4000[i,3])
    find (str(arr_4000[i,1],2))
    if found()
      if mpol == "М"
        if iivozrast == 1
          tmp4000->m36 ++
        elseif iivozrast == 2
          tmp4000->m39 ++
        endif
        tmp4000->mvv ++
      else
        if iivozrast == 1
          tmp4000->g36 ++
        elseif iivozrast == 2
          tmp4000->g39 ++
        endif
        tmp4000->gvv ++
      endif
      if iivozrast == 1
        tmp4000->v36 ++
      elseif iivozrast == 2
        tmp4000->v39 ++
      endif
      tmp4000->vvv ++
    endif
  endif
next

 /*
if f_is_selo()
 //  if m1mobilbr == 1
 //   arr_7001[19,2] ++
 // endif
  arr_7001[25,2] ++
endif
if M1RAB_NERAB == 0
  arr_7001[1,2] ++
elseif M1RAB_NERAB == 1
  arr_7001[2,2] ++
else
  arr_7001[3,2] ++
endif
if (i := ascan(stm_kategor, {|x| x[2] == kart_->kategor })) > 0 .and. between(stm_kategor[i,3],1,8)
  arr_7001[4,2] ++  // всего льготников
//  arr_7001[4+stm_kategor[i,3],2] ++  // по каждой льготе расшифровка
endif
if m1mobilbr == 1
  arr_7001[18,2] ++
endif
*/
// диспансеризация II этап
/*
if !empty(tmp->kod2h)
  human->(dbGoto(tmp->kod2h))
  m1GRUPPA2 := ret_gruppa_DVN(human_->RSLT_NEW)
  if between(m1gruppa2,1,4) // точно прошёл 2 этап
    if (i := ascan(arr_vrach, {|x| x[1] == human_->VRACH })) == 0
      aadd(arr_vrach, {human_->VRACH,0,"",0,0,0,0}) ; i := len(arr_vrach)
    endif
    arr_vrach[i,5] ++
    m1GRUPPA := m1GRUPPA2 // переприсвоить группу
    read_arr_DVN(human->kod) // перечитать диагнозы и т.п.
    //if mpol == "М"
    //  tmp1000->vm2 ++
    //else
      tmp1000->vg2 ++
    //endif
    //arr_7001[22,2] --
    //arr_7001[24,2] ++
    select HU
    find (str(tmp->kod2h,7))
    do while hu->kod == tmp->kod2h .and. !eof()
      usl->(dbGoto(hu->u_kod))
      if empty(lshifr := opr_shifr_TFOMS(usl->shifr1,usl->kod,human->k_data))
        lshifr := usl->shifr
      endif
      aadd(au,{alltrim(lshifr),;
               hu_->PROFIL,;
               iif(left(hu_->kod_diag,1)=="Z","",hu_->kod_diag);
              })
      select HU
      skip
    enddo
    for k := 1 to len(au)
      if ascan(arr_otklon,au[k,1]) > 0
        au[k,3] := "1" // отклонения в исследовании
      endif
    next
    select TMP3000
    for k := 1 to len(au)
      fl := .f.
      for i := 1 to len(arr_3000)
        if valtype(arr_3000[i,3]) == "A"
          fl := (ascan(arr_3000[i,3],au[k,1]) > 0)
        else
          fl := (au[k,1]==arr_3000[i,3])
        endif
        if fl ; exit ; endif
      next
      if fl
        find (str(arr_3000[i,1],2))
        if found()
          tmp3000->vv ++
          if !empty(au[k,3]) // добавить отклонения для исследований
            tmp3000->vd ++
          endif
        endif
      endif
    next
  endif
endif
*/
//
/*if between(m1gruppa,1,4)
  a7[m1gruppa] := .t.
endif
*/
//
//a7[5] := (m1nazn_l  == 1) // {5,"Назначено лечение"},;
a7[5] := (m1dopo_na > 0)  // {6,"Направлено на дополнительное диагностическое"},;
a7[11] := (m1spec_na == 1) // {7,"Направлено для получения спец., в т.ч.ВМП"},;
a7[12] := (m1sank_na == 1) // {8,"Направлено на санаторно-курортное лечение"};
for i := 1 to 5
  pole_diag := "mdiag"+lstr(i)
  pole_1pervich := "m1pervich"+lstr(i)
  pole_1stadia := "m1stadia"+lstr(i)
  pole_1dispans := "m1dispans"+lstr(i)

  if !empty(&pole_diag) .and. !(left(&pole_diag,1) == "Z")
    au := {} ; au1 := {}
    d := diag_to_num(&pole_diag,1)
    for n := 1 to len5001
      r := diag5001[n]
      for j := 1 to len(r)
        fl := between(d,r[j,1],r[j,2])
        if fl .and. len(arr_5001[n]) > 4 // надо проверить стадию
          if human->k_data < d_01_04_2015
            fl := (&pole_1stadia == 0) // ранняя      !!!!!
          else
            fl := (&pole_1stadia < 3) // 1 и 2 стадия !!!!!
          endif
        endif
        if fl
          aadd(au,n)
        endif
      next
    next
/*    if empty(au) // заносим в прочие заболевания
      aadd(au,len5000-1)
      if &pole_1pervich == 1 // впервые
        for n := 1 to len5001
          my_debug(,str())

          r := diag5001[n]
          my_debug(,)
          for j := 1 to len(r)
            if between(d,r[j,1],r[j,2])
              aadd(au1,n)
            endif
          next
        next
      endif
    endif
*/
    aadd(au,len5001) // всегда заносим в ИТОГО
    select TMP5001
    for j := 1 to len(au)
      find (str(au[j],2))
      if found()
        if &pole_1pervich == 0 // ранее выявленный
          if iivozrast == 1 // работающие
            tmp5001->vtr ++
          else
            tmp5001->vsttr ++
          endif
          if &pole_1dispans == 1
            tmp5001->dispans0 ++
          endif
        elseif &pole_1pervich == 1 // впервые
          if iivozrast == 1 // работающие
            tmp5001->vg10 ++
            if &pole_1dispans == 1
              tmp5001->vg11 ++
            endif
          else
            tmp5001->vg12 ++
            if &pole_1dispans == 1
              tmp5001->vg13 ++
            endif
          endif
        endif
      endif
    next
  endif
next

/*
if fl_dispans
  if m1dispans == 1 // Диспансерное наблюдение установлено врачом отд.мед.профилактики
    v4001_1 ++
  elseif m1dispans == 2 // Диспансерное наблюдение установлено врачом центра здоровья
    v4001_2 ++
  endif
endif
*/
select TMP7000
for i := 1 to 12
  if a7[i]
    //find (str(i,2))
    goto (i)
    //if found()
      if iivozrast == 1
        tmp7000->tr ++
      else
        tmp7000->ntr ++
      endif
    //endif
  endif
next

return NIL

***** 15.03.16 клетки, исключаемые из таблиц 5000,5001,6000
Function f2_forma_131(ar1)
Static s_ar := {{23,30,4,6},{31,32,8,10},{58,58,4,17},{70,70,8,10}}
Local i, j, fl, arr := {}
for i := 1 to len(ar1)
  fl := .t.
  for j := 1 to len(s_ar)
    if between(ar1[i,1],s_ar[j,1],s_ar[j,2]) .and. between(ar1[i,2],s_ar[j,3],s_ar[j,4])
      fl := .f. ; exit
    endif
  next
  if fl
    aadd(arr, aclone(ar1[i]))
  endif
next
return arr

*

***** 17.05.15 вернуть группу здоровья для ДВН
Function ret_gruppa_DVN(_rslt,/*@*/_to_2_etap)
Local _gruppa := -1
_to_2_etap := .f.
do case
  case _rslt == 316 // т.е. направлен на II этап
    _to_2_etap := .t. // направлен на II этап
    _gruppa := 0
  case _rslt == 317 // I
    _gruppa := 1
  case _rslt == 318 // II
    _gruppa := 2
  case _rslt == 319 // III
    _gruppa := 3
  case _rslt == 355 // IIIа
    _gruppa := 3
  case _rslt == 356 // IIIб
    _gruppa := 4
  case _rslt == 352 // I
    _to_2_etap := .t. // направлен на II этап
    _gruppa := 1
  case _rslt == 353 // II
    _to_2_etap := .t. // направлен на II этап
    _gruppa := 2
  case _rslt == 354 // III
    _to_2_etap := .t. // направлен на II этап
    _gruppa := 3
  case _rslt == 357 // IIIа
    _to_2_etap := .t. // направлен на II этап
    _gruppa := 3
  case _rslt == 358 // IIIб
    _to_2_etap := .t. // направлен на II этап
    _gruppa := 4
endcase
return _gruppa

***** 30.03.21 вернуть группу здоровья для ДВН
Function ret_PF_DVN(_rslt)
Local _gruppa := 0
//my_debug(,str(_rslt))
do case
  case _rslt == 373
    _gruppa := 1
  case _rslt == 343
    _gruppa := 1
  case _rslt == 374
    _gruppa := 1
  case _rslt == 345
    _gruppa := 1
  case _rslt == 344
    _gruppa := 1
endcase
return _gruppa

