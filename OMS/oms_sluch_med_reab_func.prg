#include 'inkey.ch'
#include 'function.ch'
#include 'edit_spr.ch'
#include 'chip_mo.ch'

// 20.05.22
function defenition_usluga_med_reab(lkod, vid, shrm)
  Local arr, i, s, lshifr, lrec, lu_kod, lcena, lyear, mrec_hu, fl
  local buf := save_maxrow()
  local shifr_reab

  shifr_reab := type_reabilitacia()[vid, 3][shrm]

  mywait('Добавление услуги')
  R_Use(dir_server + 'mo_uch', , 'UCH')
  R_Use(dir_server + 'mo_otd', , 'OTD')
  Use_base('lusl')
  Use_base('luslc')
  Use_base('uslugi')
  R_Use(dir_server + 'uslugi1', {dir_server + 'uslugi1', ;
                              dir_server + 'uslugi1s'}, 'USL1')
  use_base('human_u') // если понадобится, удалить старую услугу и добавить новую
  R_Use(dir_server + 'mo_su', , 'MOSU')
  R_Use(dir_server + 'mo_hu', dir_server + 'mo_hu', 'MOHU')
  set relation to u_kod into MOSU
  G_Use(dir_server + 'human_2', , 'HUMAN_2')
  R_Use(dir_server + 'human_', , 'HUMAN_')
  G_Use(dir_server + 'human', , 'HUMAN') // перезаписать сумму
  set relation to recno() into HUMAN_, to recno() into HUMAN_2
  HUMAN->(dbGoto(lkod))
  lyear := year(human->K_DATA)

  lrec := lcena := 0
  dbSelectArea('HU')
  find (str(lkod, 7))
  do while hu->kod == lkod .and. !eof()
    usl->(dbGoto(hu->u_kod))
    if empty(lshifr := opr_shifr_TFOMS(usl->shifr1, usl->kod, human->k_data))
      lshifr := usl->shifr
    endif
    if !empty(shifr_reab) .and. alltrim(lshifr) == shifr_reab // уже стоит та же услуга
      lcena := iif(m1vzros_reb == 0, usl->CENA, usl->CENAD)
      if !(round(hu->u_cena,2) == round(lcena,2)) // перезапишем цену
        dbSelectArea('HU')
        G_RLock(forever)
        hu->u_cena := lcena
        hu->stoim := hu->stoim_1 := lcena
        UnLock
      endif
      exit
    endif
    if lyear > 2021
      dbSelectArea('LUSL')
      find (lshifr) // длина lshifr 10 знаков
      if found() .and. (eq_any(left(lshifr, 5), '2.89.')) // стоит другая услуга реабилитации
        lrec := hu->(recno())
        exit
      endif
    endif
    HU->(dbSkip())
    // dbSelectArea('HU')
    // skip
  enddo
  if empty(lcena)
    lu_kod := foundOurUsluga(shifr_reab, human->k_data, human_->profil, human->VZROS_REB, @lcena)
    lcena := round_5(lcena, 0)
    if ! empty(lcena)
      //// if round(arr[4],2) == round(lcena,2) // цена определена правильно
      dbSelectArea('HU')
      if lrec == 0
        Add1Rec(7)
        hu->kod := human->kod
      else
        HU->(dbGoto(lrec))
        G_RLock(forever)
      endif
      mrec_hu := hu->(recno())
      hu->kod_vr  := human_->VRACH
      hu->kod_as  := 0
      hu->u_koef  := 1
      hu->u_kod   := lu_kod
      hu->u_cena  := lcena
      hu->is_edit := 0
      hu->date_u  := dtoc4(human->n_data)
      hu->otd     := human->otd
      hu->kol     := hu->kol_1 := 1
      hu->stoim   := hu->stoim_1 := lcena
      dbSelectArea('HU_')
      do while hu_->(lastrec()) < mrec_hu
        hu_->(dbAppend())
      enddo
      HU_->(dbGoto(mrec_hu))
      G_RLock(forever)
      if lrec == 0 .or. !valid_GUID(hu_->ID_U)
        hu_->ID_U := mo_guid(3, hu_->(recno()))
      endif
      hu_->PROFIL := human_->PROFIL
      hu_->PRVS   := human_->PRVS
      hu_->kod_diag := human->KOD_DIAG
    else
      func_error(4, 'ОШИБКА: для организации услуга ' + alltrim(shifr_reab) + ' не установлена!')
      lcena := 0
    endif
  endif
  if !(round(human->CENA_1, 2) == round(lcena, 2))
    dbSelectArea('HUMAN')
    G_RLock(forever)
    human->CENA := human->CENA_1 := lcena // перезапишем стоимость лечения
    HUMAN->(dbUnlock()) // UnLock
  endif

// return { ars, arerr, alltrim(lksg), lcena, akslp, akiro, s_dializ }

  close databases
  rest_box(buf)
  return nil

// 19.05.22
function type_reabilitacia()
  static ret := {}

  if len(ret) == 0
    aadd(ret, {'заболевания опорно-двигательного аппарата', 1, {'2.89.27', '2.89.28', '2.89.29'}})
    aadd(ret, {'сердечно-сосудистая потология', 2, {'2.89.30', '2.89.31', '2.89.32'}})
    aadd(ret, {'заболевания центральной нервной системы', 3, {'2.89.33', '2.89.34', '2.89.35'}})
    aadd(ret, {'заболевания периферической нервной системы', 4, {'2.89.36', '2.89.37', '2.89.38'}})
    aadd(ret, {'лечении органов дыхания, после COVID-19', 5, {'2.89.39', '2.89.40', '2.89.41'}})
    aadd(ret, {'лечении органов дыхания', 6, {'2.89.45', '2.89.46', '2.89.47'}})
    aadd(ret, {'онкологическое лечение', 7, {'2.89.48', '2.89.49', '2.89.50'}})
    // aadd(ret, {'лечении органов дыхания, после COVID-19, телемедицина', 8, {'2.89.42', '2.89.43', '2.89.44'}})
  endif
  return ret

// 18.05.22
function type_shrm_reabilitacia()
  static ret := {}

  if len(ret) == 0
    aadd(ret, {'ШРМ 1', 1})
    aadd(ret, {'ШРМ 2', 2})
    aadd(ret, {'ШРМ 3', 3})
  endif
  return ret

// 07.10.23
function ret_array_med_reab(vid, shrm, adult)
  // adult .t. - взрослый, .f. другое
  static arr_uslugi_med_reab := { ;
    { ;   // заболевания опорно-двигательного аппарата
      {'2.6.15',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.13',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'2.6.16',	.t.,	1,	.t.,	2,	.t.,	2}, ;
      {'2.6.17',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'2.6.14',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'2.6.19',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'2.6.5',	  .t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.6',	  .f.,	1,	.f.,	1,	.t.,	2}, ;
      {'2.6.7',	  .t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.8',	  .f.,	1,	.f.,	2,	.t.,	1}, ;
      {'3.4.31',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'4.11.136',.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'4.2.153',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'13.1.1',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'14.2.3',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'7.12.5',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'7.12.6',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'7.2.2', 	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'20.1.2',	.t.,	9,	.t.,	11,	.t.,	13}, ;
      {'20.2.1',	.f.,	9,	.f.,	11,	.f.,	13}, ;
      {'21.1.2',	.f.,	9,	.f.,	9,	.f.,	11}, ;
      {'19.1.2',	.f.,	9,	.f.,	10,	.f.,	10}, ;
      {'19.1.5',	.f.,	9,	.f.,	9,	.f.,	11}, ;
      {'19.1.36',	.f.,	9,	.f.,	9,	.f.,	11}, ;
      {'19.1.30',	.f.,	9,	.f.,	9,	.f.,	11}, ;
      {'19.1.29',	.f.,	9,	.f.,	9,	.f.,	11}, ;
      {'19.1.33',	.f.,	9,	.f.,	9,	.f.,	11}, ;
      {'19.1.34',	.f.,	9,	.f.,	9,	.f.,	11}, ;
      {'19.1.35',	.f.,	9,	.f.,	9,	.f.,	11}, ;
      {'19.1.9',	.f.,	9,	.f.,	9,	.f.,	11}, ;
      {'19.7.1',	.f.,	9,	.f.,	10,	.f.,	10}, ;
      {'19.1.7',	.f.,	9,	.f.,	10,	.f.,	10}, ;
      {'19.1.6',	.f.,	9,	.f.,	10,	.f.,	10}, ;
      {'19.1.37',	.f.,	9,	.f.,	10,	.f.,	10}, ;
      {'19.3.1',	.f.,	9,	.f.,	10,	.f.,	10}, ;
      {'20.2.4',	.f.,	9,	.f.,	9,	.f.,	11}, ;
      {'22.1.2',	.f.,	9,	.f.,	9,	.f.,	11}, ;
      {'19.1.38',	.f.,	9,	.f.,	9,	.f.,	11}, ;
      {'19.6.1',	.f.,	9,	.f.,	9,	.f.,	11}, ;
      {'19.2.2',	.f.,	5,	.f.,	9,	.f.,	11}, ;
      {'19.2.5',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.6.2',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.32',	.f.,	7,	.f.,	9,	.f.,	11} ;
    }, ;
    { ;     //ССС
      {'2.6.17',	.t., 1,	.t.,	1,	.t.,	1}, ;
      {'2.6.18',	.t., 1,	.t.,	1,	.t.,	1}, ;
      {'2.6.5',	  .t., 1,	.t.,	1,	.t.,	1}, ;
      {'2.6.6',   .f., 1,	.t.,	1,	.t.,	2}, ;
      {'2.6.7',   .t., 1,	.t.,	1,	.t.,	1}, ;
      {'2.6.8',   .f., 1,	.t.,	1,	.t.,	2}, ;
      {'2.6.19',	.t., 1,	.t.,	1,	.t.,	1}, ;
      {'2.6.20',	.t., 1,	.t.,	1,	.t.,	1}, ;
      {'4.11.136',.t., 1,	.t.,	1,	.t.,	1}, ;
      {'4.2.153',	.t., 1,	.t.,	1,	.t.,	1}, ;
      {'13.1.1',	.t., 1,	.t.,	2,	.t.,	3}, ;
      {'3.4.31',	.f., 1,	.f.,	1,	.f.,	1}, ;
      {'20.1.3',	.f., 9,	.f.,	11,	.f.,	13}, ;
      {'21.1.3',	.f., 9,	.f.,	11,	.f.,	13}, ;
      {'19.1.2',	.f., 9,	.f.,	11,	.f.,	11}, ;
      {'19.1.5',	.f., 9,	.f.,	9,	.f.,	11}, ;
      {'19.1.7',	.f., 9,	.f.,	9,	.f.,	11}, ;
      {'19.5.19',	.f., 9,	.f.,	10,	.f.,	11}, ;
      {'19.1.30',	.f., 9,	.f.,	10,	.f.,	11}, ;
      {'19.3.1',	.f., 9,	.f.,	10,	.f.,	11}, ;
      {'19.7.1',	.f., 9,	.f.,	10,	.f.,	11}, ;
      {'20.2.2',	.f., 9,	.f.,	11,	.f.,	13}, ;
      {'22.1.3',	.f., 9,	.f.,	9,	.f.,	11}, ;
      {'19.1.6',	.f., 9,	.f.,	9,	.f.,	11} ;
    }, ;
    { ;     // заболевания центральной нервной системы
      {'2.6.13',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.17',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'2.6.18',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'2.6.14',	.t.,	1,	.t.,	2,	.t.,	2}, ;
      {'2.6.5',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.6',	.f.,	1,	.f.,	2,	.t.,	2}, ;
      {'2.6.7',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.8',	.f.,	1,	.t.,	1,	.t.,	2}, ;
      {'2.6.19',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'2.6.20',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'4.11.136',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'4.2.153',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'13.1.1',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'3.4.31',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'14.2.3',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'7.12.7',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'7.2.2',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'20.1.1',	.t.,	9,	.t.,	11,	.t.,	13}, ;
      {'20.2.1',	.f.,	6,	.f.,	11,	.f.,	13}, ;
      {'21.1.1',	.f.,	7,	.f.,	9,	.f.,	13}, ;
      {'19.1.2',	.f.,	7,	.f.,	10,	.f.,	11}, ;
      {'19.1.5',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.36',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.30',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.29',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.33',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.34',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.35',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.9',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.7.1',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.7',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.6',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.37',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.3.1',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'20.2.4',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'22.1.2',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.38',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.6.1',	.f.,	7,	.f.,	9,	.f.,	10}, ;
      {'19.2.2',	.f.,	5,	.f.,	5,	.f., 1 } ;
    }, ;
    { ;     // заболевания периферической нервной системы
      {'2.6.13',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.17',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'2.6.18',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'2.6.14',	.t.,	1,	.t.,	2,	.t.,	2}, ;
      {'2.6.5',	  .t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.6',	  .f.,	1,	.f.,	2,	.t.,	2}, ;
      {'2.6.7',	  .t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.8',	  .f.,	1,	.t.,	1,	.t.,	2}, ;
      {'2.6.19',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'2.6.20',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'4.11.136',.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'4.2.153',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'13.1.1',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'3.4.31',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'14.2.3',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'7.12.7',	.f.,	1,	.f.,	1,	.f.,	1}, ;
      {'7.2.2',	  .f.,	1,	.f.,	1,	.f.,	1}, ;
      {'20.1.6',	.t.,	9,	.t.,	11,	.t.,	13}, ;
      {'20.2.1',	.f.,	6,	.f.,	11,	.f.,	13}, ;
      {'21.1.6',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.2',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.5',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.36',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.30',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.29',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.33',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.34',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.35',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.9',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.7.1',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.7',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.6',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.37',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.3.1',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'20.2.4',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'22.1.2',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.38',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.6.1',	.f.,	7,	.f.,	9,	.f.,	10}, ;
      {'19.2.2',	.f.,	5,	.f.,	5,	.f.,	1} ;
    }, ;
    { ;     // заболевания органов дыхания, после COVID-19
      {'2.6.17',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.18',	.t.,	1,	.t.,	1,	.t.,	2}, ;
      {'2.6.5',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.6',	.f.,	1,	.f.,	1,	.f.,	2}, ;
      {'2.6.7',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.8',	.f.,	1,	.f.,	1,	.f.,	2}, ;
      {'2.6.19',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.20',	.t.,	1,	.t.,	1,	.t.,	2}, ;
      {'4.11.136',.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'4.2.153',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'16.1.17',	.t.,	2,	.t.,	2,	.t.,	2}, ;
      {'16.1.18',	.t.,	2,	.t.,	10,	.t.,	11}, ;
      {'13.1.1',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'20.1.5',	.t.,	7,	.t.,	10,	.t.,	11}, ;
      {'20.2.5',	.f.,	5,	.f.,	9,	.f.,	10}, ;
      {'19.1.2',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.31',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.40',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.3.1',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.34',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.33',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.36',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.6',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.30',	.f.,	8,	.f.,	10,	.f.,	11}, ;
      {'19.7.1',	.f.,	8,	.f.,	10,	.f.,	11} ;
    }, ;
    { ;     // заболевания органов дыхания
      {'2.6.17',	  .t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.18',	.t.,	1,	.t.,	1,	.t.,	2}, ;
      {'2.6.5',	  .t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.6',	  .f.,	1,	.f.,	2,	.f.,	2}, ;
      {'2.6.7',	  .t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.8',   .f.,	1,	.f.,	2,	.f.,	2}, ;
      {'2.6.19',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.20',	.t.,	1,	.t.,	1,	.t.,	2}, ;
      {'4.11.136',.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'4.2.153',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'16.1.17',	.t.,	2,	.t.,	2,	.t.,	2}, ;
      {'16.1.18',	.t.,	2,	.t.,	5,	.t.,	9}, ;
      {'13.1.1',	.t.,	1,	.t.,	1,	.t.,	1}, ;
      {'20.1.5',	.t.,	8,	.t.,	9,	.t.,	11}, ;
      {'20.2.5',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'21.1.5',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.6.2',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.2',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.31',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.40',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.3.1',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.2.2',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.7.1',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'22.2.1',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.39',	.f.,	7,	.f.,	9,	.f.,	11}, ;
      {'19.1.36',	.f.,	8,	.f.,	10,	.f.,	11}, ;
      {'19.1.30',	.f.,	8,	.f.,	10,	.f.,	11}, ;
      {'19.1.33',	.f.,	8,	.f.,	10,	.f.,	11}, ;
      {'19.1.34',	.f.,	8,	.f.,	10,	.f.,	11}, ;
      {'19.1.6',	.f.,	8,	.f.,	10,	.f.,	11} ;
    }, ;
    { ;     // онкологические заболевания
      {'2.6.3',	  .t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.4',	  .t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.5',	  .t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.6',	  .t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.7',	  .t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.8',	  .t.,	1,	.t.,	1,	.t.,	1}, ;
      {'2.6.21',	.f.,	3,	.f.,	3,	nil,	nil,}, ;
      {'20.1.4',	.t.,	10,	.t.,	10,	.f.,	10}, ;
      {'21.1.4',	.f.,	10,	.f.,	10,	.f.,	10}, ;
      {'19.1.5',	.f.,	10,	.f.,	10,	.f.,	10}, ;
      {'19.1.30',	.f.,	10,	nil,	nil,	.f.,	10}, ;
      {'19.5.19',	nil,	nil,	.f.,	10,	.f.,	10}, ;
      {'19.7.1',	nil,	nil,	.f.,	10,	.f.,	10}, ;
      {'19.2.1',	nil,	nil,	.f.,	10,	.f.,	10}, ;
      {'19.1.2',	nil,	nil,	nil,	nil,	.f.,	10}, ;
      {'21.2.1',	nil,	nil,	nil,	nil,	.f.,	10}, ;
      {'19.1.3',	nil,	nil,	nil,	nil,	.f.,	10}, ;
      {'19.5.1',	nil,	nil,	nil,	nil,	.f.,	10}, ;
      {'19.1.6',	nil,	nil,	nil,	nil,	.f.,	10}, ;
      {'19.1.1',	nil,	nil,	nil,	nil,	.f.,	10} ;
    } ;
  }
    //   { ;     // заболевания органов дыхания, после COVID-19 с использованием телемедицинских технологий
    //   {'2.6.17',	.t.,	1,	.t.,	1,	.t.,	1}, ;
    //   {'2.6.18',	.t.,	2,	.t.,	2,	.t.,	3}, ;
    //   {'2.6.7',	  .t.,	1,	.t.,	1,	.t.,	1}, ;
    //   {'2.6.8',   .f.,	1,	.f.,	1,	.f.,	2}, ;
    //   {'2.6.19',	.t.,	1,	.t.,	1,	.t.,	1}, ;
    //   {'2.6.20',	.t.,	2,	.t.,	2,	.t.,	3}, ;
    //   {'4.11.136',.t.,	1,	.t.,	1,	.t.,	1}, ;
    //   {'4.2.153',	.t.,	1,	.t.,	1,	.t.,	1}, ;
    //   {'16.1.17',	.t.,	1,	.t.,	2,	.t.,	3}, ;
    //   {'16.1.18',	.t.,	2,	.t.,	3,	.t.,	3}, ;
    //   {'13.1.1',	.t.,	1,	.t.,	1,	.t.,	1}, ;
    //   {'20.2.3',	.t.,	7,	.t.,	9,	.t.,	11}, ;
    //   {'20.2.5',	.f.,	7,	.f.,	9,	.f.,	11} ;
    // }, ;
    local ret := {}, row
altd()
    default adult to .t.
    for each row in arr_uslugi_med_reab[vid]
      if adult // удаляем услуги педиатра
        if row[1] == '2.6.19' .or. row[1] == '2.6.20'
          loop
        endif
      else // удаляем услуги терапевта
        if row[1] == '2.6.17' .or. row[1] == '2.6.18'
          loop
        endif
      endif
      if row[2 * shrm] != nil
        aadd(ret, {row[1], row[2 * shrm], row[2 * shrm + 1] })
      endif
    next
    if len(ret) > 0
      asort(ret,,,{|x, y| x[1] < y[1] })
    endif
  return ret

// 07.10.23
function ret_usluga_med_reab(shifr_usl, vid, shrm, adult)
  local ret, i

  default adult to .t.
  shifr_usl := Lower(alltrim(shifr_usl))
  if !empty(shifr_usl) .and. ((i := ascan(ret_array_med_reab(vid, shrm, adult), {|x| Lower(alltrim(x[1])) == shifr_usl })) > 0)
    ret := ret_array_med_reab(vid, shrm, adult)[i]
  endif
  return ret

// 21.05.22
function is_lu_med_reab()
  local ret := .f.

  ret := (glob_otd[4] > 0 .and. glob_otd[4] == TIP_LU_MED_REAB)
  return ret

// 07.10.23 обязательные услуги
function compulsory_services(vid, shrm, adult)
  local aRet := {}, row

  for each row in ret_array_med_reab(vid, shrm, adult)
    if row[2]
      aadd(aRet, row[1])
    endif
  next
  return aRet

// 29.05.22
function mnogo_uslug_med_reab()
  return {'19.', '20.', '21.', '22.'}
