#include 'hbhash.ch' 
#include 'common.ch' 
#include 'inkey.ch'
#include 'function.ch'
#include 'edit_spr.ch'
#include 'chip_mo.ch'

// 19.02.25 график регистрации счетов, включаемых в акт сверки на 2025 год
//             
// !!! ВНИМАНИЕ
FUNCTION ret_days_for_akt_sverki( arr_m, /*@*/b1, /*@*/b2, /*@*/a1, /*@*/a2 )
   // b1 - период регистрации счетов - начало
   // b2 - период регистрации счетов - окончание
   // a1 - период регистрации РАК - начало
   // a2 - период регистрации РАК - окончание

   STATIC sd16 :=  { 12, 4, 7, 6, 7, 7, 5, 7, 7, 8, 7, 19 }
   STATIC sd17 :=  { 9, 7, 7, 5, 7, 7, 7, 7, 6, 8, 7, 18 }
   STATIC sad17 := { 2, 9, 10, 10, 8, 10, 8, 8, 9, 9, 8, 19 }
   STATIC sd18 :=  { 7, 7, 6, 7, 7, 6, 7, 7, 5, 8, 7, 21 }
   STATIC sad18 := { 8, 12, 10, 8, 8, 9, 8, 10, 8, 9, 10, 22 }
   STATIC sd19 :=  { 7, 7, 5, 8, 7, 5, 7, 4, 7, 8, 6, 17 }
   STATIC sad19 := { 8, 8, 8, 13, 10, 8, 8, 5, 8, 11, 9, 20 }
   STATIC sd20 :=  { 7, 6, 7, 8, 5, 7, 7, 7, 7, 9, 7, 15 }
   STATIC sad20 := { 10, 10, 8, 12, 8, 8, 10, 8, 8, 10, 8, 18 }
   STATIC sd21 :=  { 5, 5, 7, 7, 7, 7, 6, 7, 8, 9, 7, 14 }
   STATIC sad21 := { 8, 9, 8, 11, 8, 13, 12, 13, 13, 15, 13, 20 }
   STATIC sd22 :=  { 15, 5, 7, 12, 7, 7, 5, 7, 7, 10, 7, 13 }
   STATIC sad22 := { 17, 14, 13, 18, 14, 13, 11, 13, 13, 14, 13, 19 }
//   STATIC sd23 :=  { 14,  7,  7, 10,  7,  7,  7,  7,  6,  8,  7, 15 }
//   STATIC sad23 := { 14, 14, 13, 16, 14, 13, 11, 13, 12, 14, 13, 17 }
//   STATIC sd24 :=  { 7,  7,  5,  8,  7,  5,  7,  6,  7,  7,  6, 14 }
//   STATIC sad24 := { 13, 14, 11, 15, 14, 11, 13, 12, 11, 13, 12, 16 }
   
   static hArr // Хэш массив, ключ - год, значение массив структуры:
               // [1] - период регистрации счетов - начало,
               // [2] - период регистрации счетов - окончание,
               // [3] - период регистрации РАК по месяцам - начало,
               // [4] - период регистрации РАК по месяцам - окончание

   LOCAL y := arr_m[ 1 ], m := arr_m[ 2 ]
   local aa, aSd, aSad

   b1 := b2 := a1 := a2 := 0

   if isnil( hArr )
      hArr := hb_hash()
      hb_hSet( hArr, 2017, { 19, 2, sd17, sad17 } )
      hb_hSet( hArr, 2018, { 24, 25, sd18, sad18 } )
      hb_hSet( hArr, 2019, { 21, 22, sd19, sad19 } )
      hb_hSet( hArr, 2020, { 17, 20, sd20, sad20 } )
      hb_hSet( hArr, 2021, { 27, 18, sd21, sad21 } )
      hb_hSet( hArr, 2022, { 27, 18, sd22, sad22 } )
      hb_hSet( hArr, 2023, { 21, 21, { 14,  7,  7, 10,  7,  7,  7,  7,  6,  8,  7, 15 }, ;
                                    { 14, 14, 13, 16, 14, 13, 11, 13, 12, 14, 13, 17 } } )
      hb_hSet( hArr, 2024, { 31, 31, {19,  7,  5,  8,  7,  5,  7,  6,  7,  7,  6, 15 }, ;  //правка 15.01 по письму от 09.01.25
                                    { 13, 14, 11, 15, 14, 11, 13, 12, 11, 13, 12, 16 } } )
      hb_hSet( hArr, 2025, { 31, 31, {13,  7,  7,  13,  6,  7,  7,  5,  7, 10,  5, 15 }, ;  // письмо
                                    { 14, 13, 13, 19, 12, 13, 13, 11, 13, 16, 11, 21 } } )                                    
   endif

   if hb_hHaskey( hArr, y )
      aa := hb_hGet( hArr, y )
      b1 := aa[ 1 ]
      a1 := aa[ 2 ]
      aSd := aa[ 3 ]
      aSad := aa[ 4 ]
      if m > 1
         b1 := aSd[ m - 1 ]
         a1 := aSad[ m - 1 ]
      endif
      b2 := aSd[ m ]
      a2 := aSad[ m ]  
   endif
   RETURN NIL
